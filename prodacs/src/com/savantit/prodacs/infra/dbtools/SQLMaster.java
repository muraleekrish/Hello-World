package com.savantit.prodacs.infra.dbtools;

public final class SQLMaster
{

    //only for mysql
    public static final String ROWNUM_RESET_SQL_QUERY = "";

    //    CUSTOMER MASTER //

    public static final String CUSTOMER_INSERT_SQL_QUERY = "insert into CUST_MSTR(CUST_ID,CUST_NAME,CUST_TYP_ID,CUST_INSRVCE,CUST_ADDR1,CUST_ADDR2,CUST_CITY,CUST_STATE,CUST_PCODE,CUST_COUNTRY,CUST_PHONE1,CUST_EXTENSION1, CUST_PHONE2, CUST_EXTENSION2, CUST_PHONE3, CUST_EXTENSION3, CUST_FAX,CUST_CNTCT_FNAME,CUST_CNTCT_LNAME,CUST_CNTCT_DESIGNATION,CUST_MOBILE, CUST_EMAIL, CUST_WEBSITE) values(CUST_ID.nextval,#CST_NAME#,#CST_TYP_ID#,#CST_INSRVCE#,#CST_ADDR1#,#CST_ADDR2#,#CST_CITY#,#CST_STATE#,#CST_PCODE#,#CST_COUNTRY#,#CST_PHONE1#, #CST_EXTENSION1#, #CST_PHONE2#, #CST_EXTENSION2#, #CST_PHONE3#, #CST_EXTENSION3#, #CST_FAX#,#CST_CNTCT_FNAME#,#CST_CNTCT_LNAME#,#CST_CNTCT_DESIGNATION#,#CST_MOBILE#, #CST_EMAIL#, #CST_WEBSITE#)";

    public static final String CUSTOMER_UPDATE_SQL_QUERY = "update CUST_MSTR set CUST_NAME=#CST_NAME#,CUST_TYP_ID=#CST_TYP_ID#,CUST_INSRVCE=#CST_INSRVCE#,CUST_ADDR1=#CST_ADDR1#,CUST_ADDR2=#CST_ADDR2#,CUST_CITY=#CST_CITY#,CUST_STATE=#CST_STATE#,CUST_PCODE=#CST_PCODE#,CUST_COUNTRY=#CST_COUNTRY#,CUST_PHONE1 = #CST_PHONE1#, CUST_EXTENSION1 = #CST_EXTENSION1#, CUST_PHONE2=#CST_PHONE2#, CUST_EXTENSION2 = #CST_EXTENSION2#, CUST_PHONE3 = #CST_PHONE3#, CUST_EXTENSION3 = #CST_EXTENSION3#, CUST_FAX=#CST_FAX#,CUST_CNTCT_FNAME=#CST_CNTCT_FNAME#,CUST_CNTCT_LNAME=#CST_CNTCT_LNAME#, CUST_CNTCT_DESIGNATION=#CST_CNTCT_DESIGNATION#, CUST_MOBILE = #CST_MOBILE#, CUST_EMAIL = #CST_EMAIL#, CUST_WEBSITE = #CST_WEBSITE#, CUST_DATESTAMP = SYSTIMESTAMP where CUST_ID=#CST_ID#";

    public static final String CUSTOMER_DETAILS_SELECT_SQL_QUERY = "select CUST.*,CUST_TYP_NAME from CUST_MSTR CUST,CUST_TYP_MSTR CUST_TYP where CUST.CUST_TYP_ID=CUST_TYP.CUST_TYP_ID and CUST.CUST_ID=#CST_ID#";

    public static final String CUSTOMER_FILTER_SELECT_SQL_QUERY = "select rownum r,CUST_ID,CUST_NAME,CUST_TYP_NAME,CUST_TYP_ID,CUST_INSRVCE,CUST_DATESTAMP,CUST_ISVALID from(select distinct CUST_ID,CUST_NAME,CUST_TYP_NAME,CUST_TYP_ID,CUST_INSRVCE,CUST_ISVALID,CUST_DATESTAMP from (select CUS.CUST_ID,CUS.CUST_NAME,CUSTYP.CUST_TYP_NAME,CUSTYP.CUST_TYP_ID,CUS.CUST_INSRVCE,CUS.CUST_ISVALID,CUS.CUST_DATESTAMP from CUST_MSTR CUS,CUST_TYP_MSTR CUSTYP where CUS.CUST_TYP_ID = CUSTYP.CUST_TYP_ID(+))";

    public static final String CUSTOMER_ID_AND_NAME_SELECT_SQL_QUERY = "select CUST_ID,CUST_NAME from CUST_MSTR where CUST_ISVALID != 0 order by CUST_NAME";

    public static final String CUSTOMER_MAKE_VALID = "update CUST_MSTR set CUST_ISVALID = 1,CUST_DATESTAMP = SYSTIMESTAMP where  CUST_ID= #CST_ID#";

    public static final String CUSTOMER_MAKE_INVALID = "update CUST_MSTR set CUST_ISVALID = 0,CUST_DATESTAMP = SYSTIMESTAMP where  CUST_ID= #CST_ID#";

    public static final String CUSTOMER_NAME_BY_TYPE_SELECT_SQL_QUERY = "select CUST_ID,CUST_NAME FROM CUST_MSTR where CUST_TYP_ID =#CST_TYP_ID# and CUST_ISVALID != 0 and CUST_INSRVCE = '1'  order by CUST_NAME";

    public static final String CUSTOMER_TYP_ID_AND_NAME_SELECT_SQL_QUERY = "select * from CUST_TYP_MSTR where CUST_TYP_ISVALID != 0 order by CUST_TYP_ID";

    public static final String CUSTOMER_TYP_INSERT_SQL_QUERY = "insert into CUST_TYP_MSTR(CUST_TYP_ID,CUST_TYP_NAME,CUST_TYP_DESC) values(CUST_TYP_ID.nextval,#CUST_TYP_NAME#,#CUST_TYP_DESC#)";

    public static final String CUST_TYP_ID_SELECT_SQL_QUERY = "select CUST_TYP_ID.currval CUST_TYP_ID from dual";

    //  CUSTOMER TYPE MASTER //
    public static final String GET_ALL_CUSTOMER_TYPE_DETAILS_QUERY = "select rownum r,CUST_TYP_ID,CUST_TYP_NAME,CUST_TYP_DESC,CUST_TYP_ISVALID,CUST_TYP_DATESTAMP from (select CUST_TYP_ID,CUST_TYP_NAME,CUST_TYP_DESC,CUST_TYP_ISVALID,CUST_TYP_DATESTAMP from (select distinct CUST_TYP_ID,CUST_TYP_NAME,CUST_TYP_DESC,CUST_TYP_ISVALID,CUST_TYP_DATESTAMP from CUST_TYP_MSTR)";

    public static final String GET_CUSTOMER_TYPE_DETAILS_QUERY = "select CUST_TYP_ID,CUST_TYP_NAME,CUST_TYP_DATESTAMP,CUST_TYP_ISVALID,CUST_TYP_DESC from CUST_TYP_MSTR where CUST_TYP_ID = #CUST_TYP_ID#";

    public static final String CUSTOMER_TYPE_DETAILS_UPDATE_QUERY = "update CUST_TYP_MSTR set CUST_TYP_NAME = #CUST_TYP_NAME#,CUST_TYP_DESC = #CUST_TYP_DESC#,CUST_TYP_DATESTAMP = SYSTIMESTAMP where CUST_TYP_ID = #CUST_TYP_ID#";

    public static final String CUSTOMER_TYPE_MAKE_VALID = "update CUST_TYP_MSTR set CUST_TYP_ISVALID = 1,CUST_TYP_DATESTAMP = SYSTIMESTAMP where  CUST_TYP_ID= #CST_TYP_ID#";

    public static final String CUSTOMER_TYPE_MAKE_INVALID = "update CUST_TYP_MSTR set CUST_TYP_ISVALID = 0,CUST_TYP_DATESTAMP = SYSTIMESTAMP where  CUST_TYP_ID= #CST_TYP_ID#";

    //    EMPLOYEE MASTER //

    public static final String EMPLOYEE_DETAILS_ADD_QUERY = "insert into EMP_MSTR(EMP_ID,EMP_CDE,EMP_NAME,EMP_TYP_ID,EMP_STAT_ID,EMP_INSRVCE,EMP_DOJ,EMP_DOB, EMP_CNTCT_ADDR1,EMP_CNTCT_ADDR2,EMP_CNTCT_CITY,EMP_CNTCT_STATE,EMP_CNTCT_PCODE, EMP_CNTCT_PHONE1, EMP_CNTCT_PHONE2, EMP_CNTCT_NAME, EMP_BLOOD_GP, EMP_PERMNT_ADDR1, EMP_PERMNT_ADDR2, EMP_PERMNT_CITY, EMP_PERMNT_STATE, EMP_PERMNT_PCODE, EMP_PERMNT_PHONE1, EMP_PERMNT_PHONE2) values(EMP_ID.nextval,#EMP_CDE#, #EMP_NAME#, #EMP_TYP_ID#, #EMP_STAT_ID#, #EMP_INSRVCE#, #EMP_DOJ#, #EMP_DOB#, #EMP_CNTCT_ADDR1#, #EMP_CNTCT_ADDR2#, #EMP_CNTCT_CITY#, #EMP_CNTCT_STATE#, #EMP_CNTCT_PCODE#, #EMP_CNTCT_PHONE1#, #EMP_CNTCT_PHONE2#, #EMP_CNTCT_NAME#, #EMP_BLOOD_GP#, #EMP_PERMNT_ADDR1#, #EMP_PERMNT_ADDR2#, #EMP_PERMNT_CITY#, #EMP_PERMNT_STATE#, #EMP_PERMNT_PCODE#, #EMP_PERMNT_PHONE1#, #EMP_PERMNT_PHONE2#)";

    public static final String EMPLOYEE_GET_CURR_ID_QUERY = "select EMP_ID.currval from dual";

    public static final String EMPLOYEE_DETAILS_UPDATE_QUERY = "update EMP_MSTR set EMP_CDE = #EMP_CDE#, EMP_NAME = #EMP_NAME#,EMP_TYP_ID=#EMP_TYP_ID#,EMP_STAT_ID=#EMP_STAT_ID#,EMP_INSRVCE=#EMP_INSRVCE#,EMP_DOJ=#EMP_DOJ#,EMP_DOB=#EMP_DOB#, EMP_CNTCT_ADDR1=#EMP_CNTCT_ADDR1#,EMP_CNTCT_ADDR2=#EMP_CNTCT_ADDR2#,EMP_CNTCT_CITY=#EMP_CNTCT_CITY#,EMP_CNTCT_STATE=#EMP_CNTCT_STATE#,EMP_CNTCT_PCODE=#EMP_CNTCT_PCODE#, EMP_CNTCT_PHONE1 = #EMP_CNTCT_PHONE1#, EMP_CNTCT_PHONE2 = #EMP_CNTCT_PHONE2#, EMP_CNTCT_NAME = #EMP_CNTCT_NAME#, EMP_BLOOD_GP = #EMP_BLOOD_GP#, EMP_PERMNT_ADDR1=#EMP_PERMNT_ADDR1#,EMP_PERMNT_ADDR2=#EMP_PERMNT_ADDR2#,EMP_PERMNT_CITY=#EMP_PERMNT_CITY#,EMP_PERMNT_STATE=#EMP_PERMNT_STATE#,EMP_PERMNT_PCODE=#EMP_PERMNT_PCODE#, EMP_PERMNT_PHONE1 = #EMP_PERMNT_PHONE1#, EMP_PERMNT_PHONE2 = #EMP_PERMNT_PHONE2#, EMP_DATESTAMP = SYSTIMESTAMP where EMP_ID=#EMP_ID#";

    public static final String EMPLOYEE_DELETE_QUERY = "delete from EMP_MSTR where EMP_ID=#EMP_ID#";

    public static final String GET_ALL_EMPLOYEES_QUERY = "select EMP_ID,EMP_CDE,EMP_NAME from EMP_MSTR where EMP_ISVALID!=0 order by EMP_NAME";

    public static final String GET_EMPLOYEE_BY_TYPE_QUERY = "select EMP_ID,EMP_CDE,EMP_NAME from EMP_MSTR where EMP_ISVALID!=0 and EMP_TYP_ID = #EMP_TYP_ID# order by EMP_NAME";

    public static final String GET_EMPLOYEE_DETAILS_QUERY = "select EMP.*,EMPTYP.EMP_TYP_NAME,UPPER(EMPSTAT.EMP_STAT_NAME) EMP_STAT_NAME from EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP,EMP_STAT_MSTR EMPSTAT where EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID and EMP.EMP_STAT_ID = EMPSTAT.EMP_STAT_ID and EMP_ID=#EMP_ID#";

    public static final String GET_ALL_EMPLOYEE_DETAILS_QUERY = "select rownum r, EMP_ID,EMP_CDE,EMP_NAME,EMP_TYP_ID,EMP_TYP_NAME,EMP_STAT_ID,EMP_STAT_NAME,EMP_DATESTAMP,EMP_ISVALID from (select distinct EMP_ID,EMP_CDE,EMP_NAME,EMP_TYP_ID,EMP_TYP_NAME,EMP_STAT_ID,EMP_STAT_NAME,EMP_DATESTAMP,EMP_ISVALID from(select EMP.EMP_ID,EMP_CDE,EMP.EMP_NAME,EMP.EMP_TYP_ID,EMPTYP.EMP_TYP_NAME,EMP.EMP_STAT_ID,UPPER(EMPSTAT.EMP_STAT_NAME) EMP_STAT_NAME,EMP.EMP_DATESTAMP,EMP.EMP_ISVALID from emp_mstr EMP,EMP_TYP_MSTR EMPTYP,EMP_STAT_MSTR EMPSTAT where EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID(+) and EMP.EMP_STAT_ID = EMPSTAT.EMP_STAT_ID)";

    public static final String EMPLOYEE_MAKE_VALID_QUERY = "update EMP_MSTR set EMP_ISVALID = 1,EMP_DATESTAMP = SYSTIMESTAMP where EMP_ID=#EMP_ID#";

    public static final String EMPLOYEE_MAKE_INVALID_QUERY = "update EMP_MSTR set EMP_ISVALID = 0,EMP_DATESTAMP = SYSTIMESTAMP where EMP_ID=#EMP_ID#";

    //  EMPLOYEE STATUS MASTER //

    public static final String EMPLOYEE_STATUS_ADD_QUERY = "insert into EMP_STAT_MSTR(EMP_STAT_ID,EMP_STAT_NAME) values(EMP_STAT_ID.nextval,#EMP_STATUS_NAME#)";

    public static final String GET_ALL_EMPLOYEE_STATUS_QUERY = "select EMP_STAT_ID,UPPER(EMP_STAT_NAME) EMP_STAT_NAME from EMP_STAT_MSTR where EMP_STAT_ISVALID != 0";

    //  EMPLOYEE TYPE MASTER //

    public static final String EMPLOYEE_TYPE_DETAILS_ADD_QUERY = "insert into EMP_TYP_MSTR(EMP_TYP_ID,EMP_TYP_NAME,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,EMP_TYP_DESC) values(EMP_TYP_ID.nextval,#EMP_TYP_NAME#,#EMP_TYP_DT#,#EMP_TYP_OT#,#EMP_TYP_INCENTIVE#,#EMP_TYP_DESC#)";

    public static final String EMPLOYEE_TYP_GET_CURR_ID_QUERY = "select EMP_TYP_ID.currval from dual";

    public static final String EMPLOYEE_TYPE_DETAILS_UPDATE_QUERY = "update EMP_TYP_MSTR set EMP_TYP_NAME = #EMP_TYP_NAME#,EMP_TYP_DT = #EMP_TYP_DT#,EMP_TYP_OT = #EMP_TYP_OT#,EMP_TYP_INCENTIVE = #EMP_TYP_INCENTIVE#,EMP_TYP_DESC = #EMP_TYP_DESC#,EMP_TYP_DATESTAMP = SYSTIMESTAMP where EMP_TYP_ID = #EMP_TYP_ID#";

    public static final String GET_ALL_EMPLOYEE_TYPES_QUERY = "select EMP_TYP_ID,EMP_TYP_NAME from EMP_TYP_MSTR where EMP_TYP_ISVALID!=0 order by EMP_TYP_NAME DESC";

    public static final String GET_EMPLOYEE_TYPE_DETAILS_WITH_TEAM_QUERY = "select EMPTYP.EMP_TYP_ID,EMPTYP.EMP_TYP_NAME,EMPTYP.EMP_TYP_DESC,EMPTYP.EMP_TYP_DATESTAMP,EMPTEAM.MIN_RQD_QTY from EMP_TYP_MSTR EMPTYP,TEAM_MSTR EMPTEAM where EMPTEAM.EMP_TYP_ID=EMPTYP.EMP_TYP_ID and EMPTYP.EMP_TYP_ISVALID = 1";

    public static final String GET_EMPLOYEE_TYPE_DETAILS_QUERY = "select EMP_TYP_ID,EMP_TYP_NAME,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,EMP_TYP_DESC,EMP_TYP_DATESTAMP,EMP_TYP_ISVALID from EMP_TYP_MSTR where EMP_TYP_ID = #EMP_TYP_ID#";

    public static final String GET_ALL_EMPLOYEE_TYPE_DETAILS_QUERY = "select rownum r,EMP_TYP_ID,EMP_TYP_NAME,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,EMP_TYP_DESC,EMP_TYP_ISVALID,EMP_TYP_DATESTAMP from (select distinct EMP_TYP_ID,EMP_TYP_NAME,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,EMP_TYP_DESC,EMP_TYP_ISVALID,EMP_TYP_DATESTAMP from (select EMP_TYP_ID,EMP_TYP_NAME,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,EMP_TYP_DESC,EMP_TYP_ISVALID,EMP_TYP_DATESTAMP from EMP_TYP_MSTR)";

    public static final String EMPLOYEE_TYPE_MAKE_VALID_QUERY = "update EMP_TYP_MSTR set EMP_TYP_ISVALID = 1,EMP_TYP_DATESTAMP = SYSTIMESTAMP where EMP_TYP_ID=#EMP_TYP_ID#";

    public static final String EMPLOYEE_TYPE_MAKE_INVALID_QUERY = "update EMP_TYP_MSTR set EMP_TYP_ISVALID = 0,EMP_TYP_DATESTAMP = SYSTIMESTAMP where EMP_TYP_ID=#EMP_TYP_ID#";

    public static final String EMPLOYEE_TYPE_EMP_MKVALID_QUERY = "update EMP_MSTR set EMP_ISVALID = 1,EMP_DATESTAMP = SYSTIMESTAMP where EMP_TYP_ID = #EMP_TYP_ID#";

    public static final String EMPLOYEE_TYPE_EMP_MKINVALID_QUERY = "update EMP_MSTR set EMP_ISVALID = 0,EMP_DATESTAMP = SYSTIMESTAMP where EMP_TYP_ID = #EMP_TYP_ID#";

    public static final String EMP_STAT_ID_SELECT_SQL_QUERY = "select EMP_STAT_ID.currval EMP_STAT_ID from dual";
    public static final String SELECT_EMP_TYP_HRS_DETAILS_SQL_QUERY = "select EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE from EMP_TYP_MSTR where EMP_TYP_ID = #EMP_TYP_ID#";

    //	EMPLOYEE TEAM MASTER //

    public static final String EMPLOYEE_TEAM_MINREQQTY_ADD = "insert into TEAM_MSTR values(#EMP_TYP_ID#,#MIN_RQD_QTY#)";

    public static final String EMPLOYEE_TEAM_MINREQQTY_UPDATE = "update TEAM_MSTR set MIN_RQD_QTY = #MIN_RQD_QTY# where EMP_TYP_ID = #EMP_TYP_ID#";

    //  MACHINE TYPE MASTER //

    public static final String MACHINE_TYPE_DETAILS_ADD_QUERY = "insert into MC_TYP_MSTR(MC_TYP_ID,MC_TYP_NAME,MC_TYP_DESC) values(MC_TYP_ID.nextval,#MACH_TYP_NAME#,#MACH_TYP_DESC#)";

    public static final String GET_ALL_MACHINE_TYPES_QUERY = "select MC_TYP_ID,MC_TYP_NAME from MC_TYP_MSTR where MC_TYP_ISVALID != 0 order by MC_TYP_NAME";

    public static final String GET_ALL_MC_TYPE_FILTER_QUERY = "select rownum r,MC_TYP_ID,MC_TYP_NAME,MC_TYP_DESC,MC_TYP_ISVALID,MC_TYP_DATESTAMP from (select MC_TYP_ID,MC_TYP_NAME,MC_TYP_DESC,MC_TYP_ISVALID,MC_TYP_DATESTAMP from (select distinct MC_TYP_ID,MC_TYP_NAME,MC_TYP_DESC,MC_TYP_ISVALID,MC_TYP_DATESTAMP from MC_TYP_MSTR)";

    public static final String GET_MACHINE_TYPE_DETAILS_QUERY = "select MC_TYP_ID,MC_TYP_NAME,MC_TYP_DATESTAMP,MC_TYP_ISVALID,MC_TYP_DESC from MC_TYP_MSTR where MC_TYP_ID = #MC_TYP_ID#";

    public static final String MACHINE_TYPE_DETAILS_UPDATE_QUERY = "update MC_TYP_MSTR set MC_TYP_NAME = #MC_TYP_NAME#,MC_TYP_DESC = #MC_TYP_DESC#,MC_TYP_DATESTAMP = SYSTIMESTAMP where MC_TYP_ID = #MC_TYP_ID#";

    public static final String MACHINE_TYPE_MAKE_VALID = "update MC_TYP_MSTR set MC_TYP_ISVALID = 1,MC_TYP_DATESTAMP = SYSTIMESTAMP where  MC_TYP_ID= #MC_TYP_ID#";

    public static final String MACHINE_TYPE_MAKE_INVALID = "update MC_TYP_MSTR set MC_TYP_ISVALID = 0,MC_TYP_DATESTAMP = SYSTIMESTAMP where  MC_TYP_ID= #MC_TYP_ID#";

    //  MACHINE MASTER //

    public static final String MACHINE_DETAILS_ADD_QUERY = "insert into MC_MSTR(MC_CDE,MC_NAME,MC_TYP_ID,MC_INUSE,MC_INSTALLDATE,MC_SPLR_NAME,MC_SPLR_CNTCT_PERSON,MC_SPLR_PHONE,MC_SPLR_ADDR,MC_SP_NAME,MC_SP_CNTCT_PERSON,MC_SP_PHONE,MC_SP_ADDR) values(#MACH_CDE#,#MACH_NAME#,#MACH_TYP_ID#,#MACH_INUSE#,#MACH_INSTALLDATE#,#MACH_SPLR_NAME#,#MACH_SPLR_CNTCT_PERSON#,#MACH_SPLR_PHONE#,#MACH_SPLR_ADDR#,#MACH_SP_NAME#,#MACH_SP_CNTCT_PERSON#,#MACH_SP_PHONE#,#MACH_SP_ADDR#)";

    public static final String MACHINE_DETAILS_UPDATE_QUERY = "update MC_MSTR set MC_CDE = #MACH_CDE#,MC_NAME = #MACH_NAME#,MC_TYP_ID = #MACH_TYP_ID#,MC_INUSE = #MACH_INUSE#,MC_INSTALLDATE = #MACH_INSTALLDATE#,MC_SPLR_NAME = #MACH_SPLR_NAME#,MC_SPLR_CNTCT_PERSON = #MACH_SPLR_CNTCT_PERSON#,MC_SPLR_PHONE = #MACH_SPLR_PHONE#,MC_SPLR_ADDR = #MACH_SPLR_ADDR#,MC_SP_NAME = #MACH_SP_NAME#,MC_SP_CNTCT_PERSON = #MACH_SP_CNTCT_PERSON#,MC_SP_PHONE = #MACH_SP_PHONE#,MC_SP_ADDR = #MACH_SP_ADDR#,MC_DATESTAMP = SYSTIMESTAMP where MC_CDE = #MACH_CDE#";

    public static final String GET_MACHINE_DETAILS_QUERY = "select MACH.MC_CDE,MACH.MC_NAME,MACH.MC_TYP_ID,MACHTYP.MC_TYP_NAME,MACH.MC_INUSE,MACH.MC_INSTALLDATE,MACH.MC_SPLR_NAME,MACH.MC_SPLR_CNTCT_PERSON,MACH.MC_SPLR_PHONE,MACH.MC_SPLR_ADDR,MACH.MC_SP_NAME,MACH.MC_SP_CNTCT_PERSON,MACH.MC_SP_CNTCT_PERSON,MACH.MC_SP_PHONE,MACH.MC_SP_ADDR,MACH.MC_DATESTAMP,MACH.MC_ISVALID from MC_MSTR MACH,MC_TYP_MSTR MACHTYP where MACH.MC_TYP_ID = MACHTYP.MC_TYP_ID and MC_CDE = #MACH_CDE#";

    public static final String GET_ALL_MACHINES_QUERY = "select MC_CDE,MC_NAME from MC_MSTR where MC_ISVALID != 0 ORDER BY MC_CDE";

    public static final String GET_ALL_MACHINES_WITH_ACCNTNG_QUERY = "select MC_CDE,MC_NAME from MC_MSTR M where MC_ISVALID != 0 and M.MC_CDE not in (select MC_CDE from PROD_ACCNTNG where PROD_DATE = #PROD_DATE# and SHIFT_ID = #SHIFT_ID# and ISHRS_ACCOUNTED = '1') ORDER BY MC_CDE";

    public static final String GET_ALL_PROD_MACHINES_QUERY = "select MC_CDE,MC_NAME from MC_MSTR M,MC_TYP_MSTR MTM where UPPER(MC_TYP_NAME) not like 'RADIAL' and M.MC_TYP_ID = MTM.MC_TYP_ID and MC_ISVALID != 0 ORDER BY MC_CDE";

    public static final String GET_ALL_PROD_MACHINES_WITH_ACCOUNTING_QUERY = "select MC_CDE,MC_NAME from MC_MSTR M,MC_TYP_MSTR MTM where UPPER(MC_TYP_NAME) not like 'RADIAL' and M.MC_TYP_ID = MTM.MC_TYP_ID and MC_ISVALID != 0 and M.MC_CDE not in (select MC_CDE from PROD_ACCNTNG where PROD_DATE = #PROD_DATE# and SHIFT_ID = #SHIFT_ID# and ISHRS_ACCOUNTED = '1') ORDER BY MC_CDE";

    public static final String GET_ALL_RADL_MACHINES_QUERY = "select MC_CDE,MC_NAME from MC_MSTR M,MC_TYP_MSTR MTM where UPPER(MC_TYP_NAME) like 'RADIAL' and M.MC_TYP_ID = MTM.MC_TYP_ID and MC_ISVALID != 0 ORDER BY MC_CDE";

    public static final String GET_ALL_RADL_MACHINES_WITH_ACCOUNTING_QUERY = "select MC_CDE,MC_NAME from MC_MSTR M,MC_TYP_MSTR MTM where UPPER(MC_TYP_NAME) like 'RADIAL' and M.MC_TYP_ID = MTM.MC_TYP_ID and MC_ISVALID != 0 and M.MC_CDE not in (select MC_CDE from PROD_ACCNTNG where PROD_DATE = #PROD_DATE# and SHIFT_ID = #SHIFT_ID# and ISHRS_ACCOUNTED = '1') ORDER BY MC_CDE";

    public static final String MACHINE_MKVALID_QUERY = "update MC_MSTR set MC_ISVALID = 1,MC_DATESTAMP = SYSTIMESTAMP where MC_CDE = #MACH_CDE#";

    public static final String MACHINE_MKINVALID_QUERY = "update MC_MSTR set MC_ISVALID = 0,MC_DATESTAMP = SYSTIMESTAMP where MC_CDE = #MACH_CDE#";

    //public static final String GET_ALL_MACHINE_DETAILS_QUERYEX = "select
    // rownum
    // r,MC_CDE,MC_NAME,MC_TYP_NAME,MC_INSTALLDATE,MC_DATESTAMP,MC_ISVALID from
    // (select
    // MACH.MC_CDE,MACH.MC_NAME,MACHTYP.MC_TYP_NAME,MACH.MC_INSTALLDATE,MACH.MC_DATESTAMP,MACH.MC_ISVALID
    // from MC_MSTR MACH,MC_TYP_MSTR MACHTYP where MACH.MC_TYP_ID =
    // MACHTYP.MC_TYP_ID)";
    public static final String GET_ALL_MACHINE_DETAILS_QUERY = "select rownum r,MC_CDE,MC_NAME,MC_TYP_ID,MC_TYP_NAME,MC_INSTALLDATE,MC_DATESTAMP,MC_ISVALID from (select distinct MC_CDE,MC_TYP_ID,MC_NAME,MC_TYP_NAME,MC_INSTALLDATE,MC_DATESTAMP,MC_ISVALID  from(select MACH.MC_CDE,MACH.MC_NAME,MACH.MC_TYP_ID,MACHTYP.MC_TYP_NAME,MACH.MC_INSTALLDATE,MACH.MC_DATESTAMP,MACH.MC_ISVALID from MC_MSTR MACH,MC_TYP_MSTR MACHTYP where MACH.MC_TYP_ID = MACHTYP.MC_TYP_ID(+))";

    public static final String MC_TYP_ID_SELECT_SQL_QUERY = "select MC_TYP_ID.currval MC_TYP_ID from dual";

    //  JOB MASTER //

    public static final String JOB_ADD_SQL_QUERY = "insert into JB_MSTR(JB_ID,JB_NAME,CUST_ID,GNRL_ID,JB_DRWG_NO,JB_RVSN_NO,JB_MATL_TYP,JB_STDHRS,JB_INCNTV_FLG,JB_CREATED_DATE) values(JB_ID.nextval,#JB_NAME#,#CST_ID#,#GNRL_ID#,#JB_DRWG_NO#,#JB_RVSN_NO#,#JB_MATL_TYP#,#JB_STDHRS#,#JB_INCNTV_FLG#,#JB_CREATED_DATE#)";

    public static final String OPERATION_GROUP_ADD_SQL_QUERY = "insert into OPN_GP_MSTR(OPN_GP_ID,OPN_GP_CODE,OPN_GP_MCRELATED) values(OPN_GP_ID.nextval,#OPN_GP_CDE#,#OPN_GP_MCRELATED#)";
    public static final String OPERATION_GROUP_UPDATE_SQL_QUERY = "update OPN_GP_MSTR set OPN_GP_MCRELATED = #OPN_GP_MCRELATED# where OPN_GP_ID = #OPN_GP_ID#";

    public static final String OPERATION_GROUP_ID_SELECT_SQL_QUERY = "select OPN_GP_ID.currval from dual";// from
                                                                                                          // OPN_GP_MSTR
                                                                                                          // WHERE
                                                                                                          // OPN_GP_CODE
                                                                                                          // =#OPN_GP_CDE#";

    public static final String OPERATION_GROUP_ID_MACHINE_ADD_SQL_QUERY = "insert into OPN_GP_MC values(#OPN_GP_ID#,#MC_CDE#)";

    public static final String JOB_GNRL_NAME_ADD_SQL_QUERY = "insert into JB_GNRLNAME_MSTR(GNRL_ID,GNRL_NAME) VALUES(GNRL_ID.nextval,#JB_GNRL_NAME#)";

    //public static final String OPERATION_GROUP_MACHINE_UPDATE_SQL_QUERY =
    // "update OPN_GP_MC set MC_CDE =#MC_CDE# where OPN_GP_ID=#OPN_GP_ID#";
    public static final String OPERATION_GROUP_MACHINE_DELETE_SQL_QUERY = "delete from OPN_GP_MC where OPN_GP_ID=#OPN_GP_ID#";

    public static final String GET_OPERATION_GROUP_DETAILS_QUERY = "select OPN_GP_ID,OPN_GP_CODE,OPN_GP_MCRELATED,OPN_GP_ISVALID,OPN_GP_DATESTAMP from OPN_GP_MSTR where OPN_GP_ID = #OPN_GP_ID#";

    public static final String GET_OPERATION_GROUP_MACHINE_DETAILS_QUERY = "select OPN_GP_MC.OPN_GP_ID,OPN_GP_MC.MC_CDE,MC_NAME from OPN_GP_MC,MC_MSTR where MC_MSTR.MC_CDE = OPN_GP_MC.MC_CDE and OPN_GP_ID = #OPN_GP_ID# order by MC_CDE";

    public static final String JOB_ID_SELECT_SQL_QUERY = "select JB_ID.currval from dual";

    public static final String OPNGP_ID_SELECT_SQL_QUERY = "select OPN_GP_ID from OPN_GP_MSTR where OPN_GP_CODE=#OPN_GP_CODE#";

    public static final String JOBOPN_ADD_SQL_QUERY = "insert into JB_OPN_MSTR(JBOPN_ID,JB_ID,OPN_GP_ID,JBOPN_SNO,JBOPN_NAME,JBOPN_STDHRS,JBOPN_INCENTIVE)values(JBOPN_ID.nextval,#JB_ID#,#OPN_GP_ID#,#JBOPN_SNO#,#JBOPN_NAME#,#JBOPN_STDHRS#,#JBOPN_INCENTIVE#)";

    public static final String GET_JOB_DETAILS_QUERY = "select JM.JB_ID,JM.JB_CREATED_DATE,JM.JB_NAME,CM.CUST_ID,CM.CUST_NAME,CTM.CUST_TYP_ID,CTM.CUST_TYP_NAME,JGNM.GNRL_ID,JGNM.GNRL_NAME,JM.JB_DRWG_NO,JM.JB_RVSN_NO,JM.JB_MATL_TYP,JM.JB_STDHRS,JM.JB_INCNTV_FLG,JM.JB_DATESTAMP,JM.JB_ISVALID from JB_MSTR JM,CUST_MSTR CM,CUST_TYP_MSTR CTM,JB_GNRLNAME_MSTR JGNM where JM.CUST_ID=CM.CUST_ID and JM.GNRL_ID = JGNM.GNRL_ID and CM.CUST_TYP_ID = CTM.CUST_TYP_ID and JM.JB_ID = #JOB_ID#";

    public static final String GET_JOBOPN_DETAILS_QUERY = "select OGM.OPN_GP_CODE,OGM.OPN_GP_ID,JOM.JBOPN_SNO,JOM.JBOPN_NAME,JOM.JBOPN_STDHRS,JOM.JBOPN_INCENTIVE from OPN_GP_MSTR OGM,JB_OPN_MSTR JOM where OGM.OPN_GP_ID=JOM.OPN_GP_ID and JB_ID = #JOB_ID# order by JBOPN_SNO";

    public static final String GET_ALL_OPERATION_GROUP_CODE = "select * from OPN_GP_MSTR where OPN_GP_ISVALID != 0 order by OPN_GP_CODE";

    public static final String GET_ALL_OPERATION_GROUP_DETAILS = "select rownum r,OPN_GP_ID,OPN_GP_CODE,OPN_GP_DATESTAMP,OPN_GP_ISVALID, OPN_GP_MCRELATED from (select distinct OPN_GP_ID,OPN_GP_CODE,OPN_GP_DATESTAMP,OPN_GP_ISVALID, OPN_GP_MCRELATED from (select OPNGPMC.MC_CDE,MC.MC_NAME,OPNGP.OPN_GP_ID,OPNGP.OPN_GP_CODE,OPNGP.OPN_GP_DATESTAMP,OPNGP.OPN_GP_ISVALID, OPNGP.OPN_GP_MCRELATED from OPN_GP_MSTR OPNGP,OPN_GP_MC OPNGPMC,MC_MSTR MC where OPNGP.OPN_GP_ID = OPNGPMC.OPN_GP_ID(+) and OPNGPMC.MC_CDE = MC.MC_CDE(+))";

    public static final String OPERATION_GROUP_MAKE_VALID_QUERY = "update OPN_GP_MSTR set OPN_GP_ISVALID = 1,OPN_GP_DATESTAMP = SYSTIMESTAMP where OPN_GP_ID = #OPN_GRP_ID#";

    public static final String OPERATION_GROUP_MAKE_INVALID_QUERY = "update OPN_GP_MSTR set OPN_GP_ISVALID = 0,OPN_GP_DATESTAMP = SYSTIMESTAMP where OPN_GP_ID = #OPN_GRP_ID#";

    public static final String OPERATION_GROUP_MACHINE_DELETE_QUERY = "delete from OPN_GP_MC where OPN_GP_ID = #OPN_GRP_ID#";

    public static final String OPERATION_GROUP_DELETE_QUERY = "delete from OPN_GP_MSTR where OPN_GP_ID = #OPN_GRP_ID#";

    public static final String JOB_UPDATE_SQL_QUERY = "update JB_MSTR set JB_NAME=#JB_NAME#,CUST_ID = #CST_ID#,GNRL_ID=#GNRL_ID#,JB_DRWG_NO=#JB_DRWG_NO#,JB_RVSN_NO=#JB_RVSN_NO#,JB_MATL_TYP=#JB_MATL_TYP#,JB_STDHRS = #JB_STDHRS#,JB_INCNTV_FLG=#JB_INCNTV_FLG#,JB_CREATED_DATE=#JB_CREATED_DATE#,JB_DATESTAMP = SYSTIMESTAMP where JB_ID=#JB_ID#";

    public static final String JOB_OPN_DELETE_QUERY = "delete from JB_OPN_MSTR where JB_ID=#JB_ID#";

    public static final String JOB_DETAILS_DELETE_SQL_QUERY = "delete from JB_MSTR where JB_ID = #JB_ID#";

    public static final String JOBOPN_DELETE_SQL_QUERY = "delete from JB_OPN_MSTR where JB_ID=#JB_ID#";

    public static final String JOB_FILTER_SQL_QUERY = "select rownum r, CUST_ID,CUST_NAME,GNRL_ID,GNRL_NAME,JB_ID,JB_NAME,JB_DRWG_NO,JB_RVSN_NO,JB_MATL_TYP,JB_ISVALID,JB_DATESTAMP from (select CUST_ID,CUST_NAME,GNRL_ID,GNRL_NAME,JB_ID,JB_NAME,JB_DRWG_NO,JB_RVSN_NO,JB_MATL_TYP,JB_ISVALID,JB_DATESTAMP from (select CUST.CUST_ID,CUST.CUST_NAME,JBGNRL.GNRL_ID,JBGNRL.GNRL_NAME,JB.JB_DRWG_NO,JB.JB_ID,JB.JB_NAME,JB.JB_RVSN_NO,JB.JB_MATL_TYP,JB.JB_ISVALID,JB.JB_DATESTAMP from CUST_MSTR CUST, JB_GNRLNAME_MSTR JBGNRL, JB_MSTR JB where CUST.CUST_ID = JB.CUST_ID and JBGNRL.GNRL_ID = JB.GNRL_ID)";

    public static final String JOB_MAKE_VALID_QUERY = "update JB_MSTR set JB_ISVALID = 1,JB_DATESTAMP = SYSTIMESTAMP where JB_ID = #JOB_ID#";

    public static final String JOB_MAKE_INVALID_QUERY = "update JB_MSTR set JB_ISVALID = 0,JB_DATESTAMP = SYSTIMESTAMP where JB_ID = #JOB_ID#";

    public static final String GET_ALL_JOB_GNRL_NAME = "select * from JB_GNRLNAME_MSTR where GNRL_ISVALID != 0 order by GNRL_NAME";

    public static final String GET_JOB_BY_GENERALNAME = "SELECT DISTINCT JB_NAME FROM JB_MSTR WHERE JB_ISVALID = 1 and GNRL_ID = #GNRL_ID# and JB_TYP = 'N' and CUST_ID = #CUST_ID# order by JB_NAME";

    public static final String GET_ALL_JOBS = "select * from JB_MSTR where JB_ISVALID != 0 order by JB_NAME,JB_DRWG_NO";

    //public static final String GET_ALL_JOBS1 = "select distinct JB_NAME from
    // JB_MSTR where JB_ISVALID != 0";
    //public static final String SELECT_JOB_ID = "select JB_ID from JB_MSTR
    // where JB_NAME = #JB_NAME#";
    public static final String GET_GENERALNAME_BY_CUSTOMER = "select distinct JB.GNRL_ID,JGM.GNRL_NAME from JB_MSTR JB,JB_GNRLNAME_MSTR JGM where JB.GNRL_ID = JGM.GNRL_ID and JGM.GNRL_ISVALID = 1 and JB.CUST_ID = #CUST_ID# order by GNRL_NAME";

    public static final String GET_JOB_DETAILS_BY_GENERALNAME_CUSTOMER = "select JM.JB_ID,JM.JB_NAME,JGNM.GNRL_ID,JGNM.GNRL_NAME,JM.CUST_ID,JM.JB_DRWG_NO,JM.JB_RVSN_NO,JM.JB_MATL_TYP,JM.JB_INCNTV_FLG,JM.JB_CREATED_DATE,JM.JB_DATESTAMP,JM.JB_ISVALID from JB_MSTR JM,JB_GNRLNAME_MSTR JGNM where JM.CUST_ID=#CUST_ID# and JM.GNRL_ID = #GNRL_ID# and JM.GNRL_ID = JGNM.GNRL_ID and JB_ISVALID = 1 order by JB_NAME";

    public static final String GET_DRWGNO_BY_JOBNAME = "select DISTINCT JB_DRWG_NO from JB_MSTR where JB_NAME = #JB_NAME# and GNRL_ID = #GNRL_ID# and CUST_ID = #CUST_ID# and JB_ISVALID = 1 and JB_TYP = 'N' order by JB_DRWG_NO";

    public static final String GET_RVSNNO_BY_JOBNAME_AND_DRWGNO = "select DISTINCT JB_RVSN_NO from JB_MSTR where JB_NAME = #JB_NAME# and JB_DRWG_NO = #JB_DRWG_NO# and GNRL_ID = #GNRL_ID# and JB_ISVALID = 1 and JB_TYP = 'N' and CUST_ID = #CUST_ID# order by JB_RVSN_NO";

    //public static final String GET_MATLTYP_BY_JOBNAME_DRWGNO_RVSNNO1 =
    // "select JB_ID,JB_NAME,JB_DRWG_NO,JB_RVSN_NO,JB_MATL_TYP from JB_MSTR
    // where JB_NAME = #JB_NAME# and JB_DRWG_NO = #JB_DRWG_NO# and JB_RVSN_NO =
    // #JB_RVSN_NO#";
    public static final String GET_MATLTYP_BY_JOBNAME_DRWGNO_RVSNNO = "select JB_MATL_TYP from JB_MSTR where JB_NAME = #JB_NAME# and JB_DRWG_NO = #JB_DRWG_NO# and JB_RVSN_NO = #JB_RVSN_NO# and JB_ISVALID = 1 and GNRL_ID = #GNRL_ID# and JB_TYP = 'N' and CUST_ID = #CUST_ID# order by JB_MATL_TYP";

    public static final String GET_JOBID_SQL_QUERY = "select JB_ID from JB_MSTR where JB_NAME = #JB_NAME# and JB_DRWG_NO = #JB_DRWG_NO# and JB_RVSN_NO = #JB_RVSN_NO# and JB_ISVALID = 1 and JB_MATL_TYP = #JB_MATL_TYP# and GNRL_ID = #GNRL_ID# and JB_TYP = 'N' and CUST_ID = #CUST_ID#";

    public static final String GET_JOB_DETAILS_BY_JOBNAME = "select * from JB_MSTR where JB_ISVALID = 1 and NAME = #JOB_NAME#";

    public static final String JB_GNRL_ID_SELECT_SQL_QUERY = "select GNRL_ID.currval JB_GNRL_ID from dual";
    
    
	public static final String VALID_MCRELATED_OPERATION_GROUP_SELECT_SQL_QUERY = "SELECT OPN_GP_ID, OPN_GP_CODE FROM OPN_GP_MSTR WHERE OPN_GP_MCRELATED = '1'";
	public static final String OPEN_JOB_QUANTITIES_SELECT_SQL_QUERY = "select COUNT(*) COUNT FROM (SELECT DISTINCT(WJS.WOJBSTAT_ID) FROM WO_JB_OPN WJO,WO_JB_STAT WJS WHERE WJO.WOJBOPN_STAT = 'O' and OPN_GP_ID = #OPN_GP_ID# and WJS.WOJBSTAT_SNO_STAT = 'O' and WJO.WOJBSTAT_ID = WJS.WOJBSTAT_ID)A";
	public static final String ACTIVE_JOB_QUANTITIES_SELECT_SQL_QUERY = "select COUNT(*) COUNT FROM (SELECT DISTINCT(WJS.WOJBSTAT_ID) FROM WO_JB_OPN WJO,WO_JB_STAT WJS WHERE WJO.WOJBOPN_STAT = 'O' and OPN_GP_ID = #OPN_GP_ID# and WJS.WOJBSTAT_SNO_STAT != 'O' and WJO.WOJBSTAT_ID = WJS.WOJBSTAT_ID)A";
	public static final String PENDING_OPN_HRS_SELECT_SQL_QUERY = "SELECT SUM(WJO.WOJBOPN_OPN_STDHRS) SUMSTDHRS FROM WO_JB_OPN WJO,WO_JB_STAT WJS WHERE WJO.WOJBOPN_STAT = 'O' and OPN_GP_ID = #OPN_GP_ID# and WJS.WOJBSTAT_SNO_STAT IN('O','A','R') and WJO.WOJBSTAT_ID = WJS.WOJBSTAT_ID";
	public static final String OPN_GP_MC_SELECT_SQL_QUERY = "SELECT MC_CDE FROM OPN_GP_MC WHERE OPN_GP_ID = #OPN_GP_ID#";


    //	REWORK CATEGORY //

    public static final String REWORK_CATEGORY_ADD_QUERY = "insert into RWK_CATEGORY(RWK_CATEGORY_ID,RWK_CATEGORY) values(RWK_CATEGORY_ID.nextval,#RWK_CATGRY#)";

    public static final String REWORK_REASON_ADD_QUERY = "insert into RWK_MSTR(RWK_ID,RWK_CATEGORY_ID,RWK_RSN) values(RWK_ID.nextval,#RWK_CATGRY_ID#,#RWK_REASON#)";

    public static final String REWORK_REASON_UPDATE_QUERY = "update RWK_MSTR set RWK_RSN = #RWK_REASON#,RWK_DATESTAMP = SYSTIMESTAMP where RWK_ID = #RWK_ID#";

    public static final String GET_ALL_REWORK_CATEGORY_QUERY = "select * from RWK_CATEGORY where RWK_CATEGORY_ISVALID != 0 order by RWK_CATEGORY";

    public static final String GET_ALL_REWORK_CATEGORY_REASON = "select RWK_ID,RWK_RSN from RWK_MSTR where RWK_CATEGORY_ID = #RWK_CATEGORY_ID# and RWK_ISVALID = 1 order by RWK_RSN";

    public static final String RWKRSN_MAKE_VALID_QUERY = "update RWK_MSTR  set RWK_ISVALID = 1,RWK_DATESTAMP = SYSTIMESTAMP where RWK_ID = #RWRK_ID#";

    public static final String RWKRSN_MAKE_INVALID_QUERY = "update RWK_MSTR set RWK_ISVALID = 0,RWK_DATESTAMP = SYSTIMESTAMP where RWK_ID = #RWRK_ID#";

    public static final String GET_REWORK_DETAILS_QUERY = "select RWK.RWK_ID,RWK.RWK_CATEGORY_ID,RWK.RWK_RSN,RWK.RWK_DATESTAMP,RWK.RWK_ISVALID,RWKCAT.RWK_CATEGORY from RWK_MSTR RWK,RWK_CATEGORY RWKCAT where RWK.RWK_CATEGORY_ID = RWKCAT.RWK_CATEGORY_ID and RWK_ID = #REWORK_ID#";

    public static final String GET_ALL_REWORK_DETAILS_QUERY = "select rownum r,RWK_CATEGORY_ID,RWK_CATEGORY,RWK_ID,RWK_RSN,RWK_ISVALID,RWK_DATESTAMP from(select distinct RWK_CATEGORY_ID,RWK_CATEGORY,RWK_ID,RWK_RSN,RWK_ISVALID,RWK_DATESTAMP from (select RWK.RWK_CATEGORY_ID,RWKCAT.RWK_CATEGORY,RWK.RWK_ID,RWK.RWK_RSN,RWK.RWK_ISVALID,RWK.RWK_DATESTAMP from RWK_MSTR RWK,RWK_CATEGORY RWKCAT where RWK.RWK_CATEGORY_ID = RWKCAT.RWK_CATEGORY_ID(+))";

    //      WORK CALENDAR //
    public static final String SHIFT_DEFN_ADD_SQL_QUERY = "insert into SHIFT_MSTR(SHIFT_ID,SHIFT_NAME,SHIFT_DESC) values(SHIFT_ID.nextval,#SHIFT_NAME#,#SHIFT_DESC#)";

    public static final String GET_SHIFT_DEFN_DETAILS_QUERY = "select * from SHIFT_MSTR where SHIFT_ID = #SHIFT_ID#";

    public static final String GET_SHIFT_NAME_LIST = "select SHIFT_ID,SHIFT_NAME from SHIFT_MSTR where SHIFT_ISVALID != 0 order by SHIFT_ID";

    //public static final String GET_SHIFT_NAME_LIST_WITH_CUSTOM_AVBLTY = "SELECT a.SHIFT_ID, a.SHIFT_NAME, b.cnt NON_AVAIL_CNT FROM SHIFT_MSTR a,(select * from base_cal_var where base_cal_var_day = to_char(#PROD_DATE#,'d')) bcd,(SELECT COUNT(1) cnt from CUSTOM_NON_AVBLTY CNA,AVBLTY_MSTR AM where trunc(CUSTOM_N_AVBLTY_FORDATE) = trunc(#PROD_DATE#) and CNA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_N_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE) b,(Select * from CUSTOM_AVBLTY CA,AVBLTY_MSTR AM where trunc(CUSTOM_AVBLTY_FORDATE)   = trunc(#PROD_DATE#) and CA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE) c,(Select count(1) cnt from CUSTOM_AVBLTY CA,AVBLTY_MSTR AM where trunc(CUSTOM_AVBLTY_FORDATE) = trunc(#PROD_DATE#) and CA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE) d where b.cnt = 0 and a.shift_id = c.shift_id(+) and a.shift_id = bcd.shift_id(+)	 and (  ( d.cnt > 0 and c.shift_id is not null) or	        ( d.cnt = 0 and (LOWER(TO_CHAR(trunc(sysdate+1),'day')) NOT LIKE '%sunday%') and bcd.shift_id is not null))ORDER BY a.SHIFT_ID";
    public static final String GET_SHIFT_NAME_LIST_WITH_CUSTOM_AVBLTY = "SELECT a.SHIFT_ID, a.SHIFT_NAME, b.cnt NON_AVAIL_CNT FROM SHIFT_MSTR a,(select * from base_cal_var where base_cal_var_day = to_char(#PROD_DATE#,'d')) bcd,(SELECT COUNT(1) cnt from CUSTOM_NON_AVBLTY CNA,AVBLTY_MSTR AM where trunc(CUSTOM_N_AVBLTY_FORDATE) = trunc(#PROD_DATE#) and CNA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_N_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE) b,(Select * from CUSTOM_AVBLTY CA,AVBLTY_MSTR AM where trunc(CUSTOM_AVBLTY_FORDATE)   = trunc(#PROD_DATE#) and CA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE) c,(Select count(1) cnt from CUSTOM_AVBLTY CA,AVBLTY_MSTR AM where trunc(CUSTOM_AVBLTY_FORDATE) = trunc(#PROD_DATE#) and CA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE) d where b.cnt = 0 and a.shift_id = c.shift_id(+) and a.shift_id = bcd.shift_id(+)	 and (  ( d.cnt > 0 and c.shift_id is not null) or( d.cnt = 0 and bcd.shift_id is not null))ORDER BY a.SHIFT_ID";

    public static final String SHIFT_DEFN_DETAILS_UPDATE_QUERY = "update SHIFT_MSTR set SHIFT_DESC =#SHIFT_DESC#,SHIFT_DATESTAMP = SYSTIMESTAMP where SHIFT_ID =#SHIFT_ID#";

    public static final String SHIFT_DEFN_DETAILS_DELETE_QUERY = "delete from SHIFT_MSTR where SHIFT_ID = #SHIFT_ID#";

    public static final String SHIFT_DEFINITION_DETAILS_FILTER_QUERY = "select rownum r,SHIFT_ID,SHIFT_NAME,SHIFT_DESC,SHIFT_ISVALID,SHIFT_DATESTAMP from (select SHIFT_ID,SHIFT_NAME,SHIFT_DESC,SHIFT_ISVALID,SHIFT_DATESTAMP FROM SHIFT_MSTR";

    public static final String SHIFT_DEFN_MAKE_VALID_QUERY = "update SHIFT_MSTR set SHIFT_ISVALID = 1,SHIFT_DATESTAMP = SYSTIMESTAMP where SHIFT_ID = #SHIFT_ID#";

    public static final String SHIFT_DEFN_MAKE_INVALID_QUERY = "update SHIFT_MSTR set SHIFT_ISVALID = 0,SHIFT_DATESTAMP = SYSTIMESTAMP where SHIFT_ID = #SHIFT_ID#";

    public static final String BASE_CAL_ADD_SQL_QUERY = "insert into BASE_CAL(BASE_CAL_ID,BASE_CAL_NAME,BASE_CAL_STARTDAY,BASE_CAL_ENDDAY) values(BASE_CAL_ID.nextval,#BASE_CAL_NAME#,#BASE_CAL_STARTDAY#,#BASE_CAL_ENDDAY#)";

    public static final String BASE_CAL_ID_SELECT_SQL_QUERY = "select BASE_CAL_ID.currval from dual";

    //public static final String SHIFT_ADD_SQL_QUERY = "insert into
    // BASE_CAL_VAR(SHIFT_ID,BASE_CAL_ID,BASE_CAL_VAR_DAY,BASE_CAL_VAR_STARTTIME,BASE_CAL_VAR_ENDTIME,BASE_CAL_VAR_PREDSRSHIFT)
    // values(#SHIFT_ID#,#BASE_CAL_ID#,#BASE_CAL_VAR_DAY#,#BASE_CAL_VAR_STARTTIME#,#BASE_CAL_VAR_ENDTIME#,#BASE_CAL_VAR_PREDSRSHIFT#)";

    public static final String LAST_AVBLTY_ID_SELECT_SQL_QUERY = "select AVBLTY_ID.currval from dual";

    public static final String AVBLTY_CAL_ADD_SQL_QUERY = "insert into AVBLTY_MSTR(AVBLTY_ID,BASE_CAL_ID,AVBLTY_NAME,AVBLTY_FROMDATE,AVBLTY_TODATE) values(AVBLTY_ID.nextval,#BASE_CAL_ID#,#AVBLTY_NAME#,#AVBLTY_FROMDATE#,#AVBLTY_TODATE#)";

    public static final String CUSTOM_AVBLTY_ADD_SQL_QUERY = "insert into CUSTOM_AVBLTY values(#AVBLTY_ID#,#SHIFT_ID#,#CUSTOM_AVBLTY_FORDATE#,#CUSTOM_AVBLTY_STARTTIME#,#CUSTOM_AVBLTY_STARTDAY#,#CUSTOM_AVBLTY_ENDTIME#,#CUSTOM_AVBLTY_ENDDAY#,#CUSTOM_AVBLTY_PREDSRSHIFT#)";

    public static final String CUSTOM_NON_AVBLTY_ADD_SQL_QUERY = "insert into CUSTOM_NON_AVBLTY values(#AVBLTY_ID#,#CUSTOM_N_AVBLTY_FORDATE#,#CUSTOM_N_AVBLTY_RSN#)";

    public static final String BASE_CAL_UPDATE_SQL_QUERY = "update BASE_CAL set BASE_CAL_STARTDAY = #BASE_CAL_STARTDAY#,BASE_CAL_ENDDAY = #BASE_CAL_ENDDAY#,BASE_CAL_DATESTAMP = SYSTIMESTAMP where BASE_CAL_ID = #BASE_CAL_ID#";

    public static final String BASE_CAL_DELETE_QUERY = "delete from BASE_CAL where BASE_CAL_ID = #BASE_CAL_ID#";

    public static final String BASE_CAL_VAR_DELETE_QUERY = "delete from BASE_CAL_VAR where BASE_CAL_ID = #BASE_CAL_ID#";

    public static final String BASE_CAL_VAR_ADD_SQL_QUERY = "insert into BASE_CAL_VAR(SHIFT_ID,BASE_CAL_ID,BASE_CAL_VAR_DAY,BASE_CAL_VAR_STARTTIME,BASE_CAL_VAR_STARTTIME_DAY,BASE_CAL_VAR_ENDTIME,BASE_CAL_VAR_ENDTIME_DAY,BASE_CAL_VAR_PREDSRSHIFT) values(#SHIFT_ID#,#BASE_CAL_ID#,#BASE_CAL_VAR_DAY#,#BASE_CAL_VAR_STARTTIME#,#BASE_CAL_VAR_STARTTIME_DAY#,#BASE_CAL_VAR_ENDTIME#,#BASE_CAL_VAR_ENDTIME_DAY#,#BASE_CAL_VAR_PREDSRSHIFT#)";

    public static final String GET_BASE_CAL_DETAILS_QUERY = "select * from BASE_CAL where BASE_CAL_ID = #BAS_CAL_ID#";

    public static final String BASE_CALENDAR_DETAILS_FILTER_QUERY = "select rownum r,BASE_CAL_ID,BASE_CAL_NAME,BASE_CAL_STARTDAY,BASE_CAL_ENDDAY,BASE_CAL_DATESTAMP,BASE_CAL_ISVALID from (select BASE_CAL_ID,BASE_CAL_NAME,BASE_CAL_STARTDAY,BASE_CAL_ENDDAY,BASE_CAL_DATESTAMP,BASE_CAL_ISVALID from(select BASE_CAL_ID,BASE_CAL_NAME,BASE_CAL_STARTDAY,BASE_CAL_ENDDAY,BASE_CAL_DATESTAMP,BASE_CAL_ISVALID from BASE_CAL)";

    public static final String GET_BASE_CAL_SHIFT_DETAILS = "select BCVAR.BASE_CAL_ID,BCVAR.BASE_CAL_VAR_DAY,BCVAR.BASE_CAL_VAR_STARTTIME,BCVAR.BASE_CAL_VAR_STARTTIME_DAY,BCVAR.BASE_CAL_VAR_ENDTIME,BCVAR.BASE_CAL_VAR_ENDTIME_DAY,BCVAR.BASE_CAL_VAR_PREDSRSHIFT,SM.SHIFT_ID,SM.SHIFT_NAME from BASE_CAL_VAR BCVAR,SHIFT_MSTR SM where BASE_CAL_ID = #BAS_CAL_ID# AND BCVAR.SHIFT_ID = SM.SHIFT_ID order by BASE_CAL_VAR_DAY,SHIFT_ID";

    public static final String GET_PRDCSR_SHIFT_NAME = "select SHIFT_NAME from SHIFT_MSTR where SHIFT_ID = #BASE_CAL_VAR_PREDSRSHIFT#";

    public static final String GET_BASE_CAL_NAME_LIST = "select BASE_CAL_ID,BASE_CAL_NAME from BASE_CAL where BASE_CAL_ISVALID != 0";

    public static final String BASE_CAL_MAKE_VALID_QUERY = "update BASE_CAL set BASE_CAL_ISVALID = 1,BASE_CAL_DATESTAMP = SYSTIMESTAMP where BASE_CAL_ID = #BASE_CAL_ID#";

    public static final String BASE_CAL_MAKE_INVALID_QUERY = "update BASE_CAL set BASE_CAL_ISVALID = 0,BASE_CAL_DATESTAMP = SYSTIMESTAMP where BASE_CAL_ID = #BASE_CAL_ID#";

    public static final String GET_AVAILABILITY_NAME_LIST = "select AVBLTY_ID,AVBLTY_NAME from AVBLTY_MSTR where AVBLTY_ISVALID !=0";

    public static final String AVAILABILITY_DETAILS_FILTER_QUERY = "select rownum r,AVBLTY_ID,AVBLTY_NAME,AVBLTY_FROMDATE,AVBLTY_TODATE,BASE_CAL_ID,AVBLTY_CURRENT,AVBLTY_DATESTAMP,AVBLTY_ISVALID from(select AVBLTY_ID,AVBLTY_NAME,AVBLTY_FROMDATE,AVBLTY_TODATE,BASE_CAL_ID,AVBLTY_CURRENT,AVBLTY_DATESTAMP,AVBLTY_ISVALID from AVBLTY_MSTR";

    public static final String CUSTOM_NON_AVBLTY_DELETE_QUERY = "delete from CUSTOM_NON_AVBLTY where AVBLTY_ID = #AVBLTY_ID#";

    public static final String CUSTOM_AVBLTY_DELETE_QUERY = "delete from CUSTOM_AVBLTY where AVBLTY_ID = #AVBLTY_ID#";

    public static final String AVBLTY_DELETE_QUERY = "delete from AVBLTY_MSTR where AVBLTY_ID = #AVBLTY_ID#";

    public static final String AVBLTY_MAKEVALID_QUERY = "update AVBLTY_MSTR set AVBLTY_ISVALID = 1,AVBLTY_DATESTAMP = SYSTIMESTAMP where AVBLTY_ID = #AVBLTY_ID#";

    public static final String AVBLTY_MAKEINVALID_QUERY = "update AVBLTY_MSTR set AVBLTY_ISVALID = 0,AVBLTY_DATESTAMP = SYSTIMESTAMP where AVBLTY_ID = #AVBLTY_ID#";

    public static final String GET_AVAILABILITY_DETAILS = "select AVBM.AVBLTY_ID,AVBM.BASE_CAL_ID,BCM.BASE_CAL_NAME,AVBM.AVBLTY_NAME,AVBM.AVBLTY_FROMDATE,AVBM.AVBLTY_TODATE,AVBM.AVBLTY_DATESTAMP,AVBM.AVBLTY_ISVALID from AVBLTY_MSTR AVBM,BASE_CAL BCM where AVBM.AVBLTY_ID = #AVBLTY_ID# and AVBM.BASE_CAL_ID = BCM.BASE_CAL_ID";

    //public static final String GET_CUSTOM_AVAILABILITY_DETAILS = "select
    // CA.SHIFT_ID,SM.SHIFT_NAME,CA.CUSTOM_AVBLTY_FORDATE,CA.CUSTOM_AVBLTY_STARTTIME,CA.CUSTOM_AVBLTY_STARTDAY,CA.CUSTOM_AVBLTY_ENDTIME,CA.CUSTOM_AVBLTY_ENDDAY,CA.CUSTOM_AVBLTY_PREDSRSHIFT
    // from CUSTOM_AVBLTY CA,SHIFT_MSTR SM where CA.AVBLTY_ID = #AVBLTY_ID# and
    // CA.SHIFT_ID = SM.SHIFT_ID";
    public static final String GET_CUSTOM_AVAILABILITY_SHIFT_DETAILS = "select CA.SHIFT_ID,SM.SHIFT_NAME,CA.CUSTOM_AVBLTY_STARTTIME,CA.CUSTOM_AVBLTY_STARTDAY,CA.CUSTOM_AVBLTY_ENDTIME,CA.CUSTOM_AVBLTY_ENDDAY,CA.CUSTOM_AVBLTY_PREDSRSHIFT from CUSTOM_AVBLTY CA,SHIFT_MSTR SM where CA.AVBLTY_ID = #AVBLTY_ID# and CA.SHIFT_ID = SM.SHIFT_ID and CA.CUSTOM_AVBLTY_FORDATE = #CUSTOM_AVBLTY_FORDATE# ORDER BY SHIFT_ID";

    public static final String GET_CUSTOM_AVAILABILITY_DATE = "select distinct(CUSTOM_AVBLTY_FORDATE) from CUSTOM_AVBLTY where AVBLTY_ID = #AVBLTY_ID#";

    public static final String GET_NONCUSTOM_AVAILABILITY_DETAILS = "select * from CUSTOM_NON_AVBLTY where AVBLTY_ID = #AVBLTY_ID#";

    public static final String UPDATE_AVBLTY_NAME = "update AVBLTY_MSTR set AVBLTY_CURRENT = '0' where AVBLTY_CURRENT = '1'";

    public static final String CHOOSE_AVBLTY_NAME = "update AVBLTY_MSTR set AVBLTY_CURRENT = '1' where AVBLTY_ID = #AVBLTY_ID#";

    public static final String AVBLTY_CAL_UPDATE_SQL_QUERY = "update AVBLTY_MSTR set AVBLTY_NAME = #AVBLTY_NAME#,BASE_CAL_ID = #BASE_CAL_ID#,AVBLTY_FROMDATE = #AVBLTY_FROMDATE#,AVBLTY_TODATE = #AVBLTY_TODATE# , AVBLTY_DATESTAMP = SYSTIMESTAMP where AVBLTY_ID = #AVBLTY_ID#";

    //WORKORDER//
    public static final String CHECK_WORKORDER_HEADER_FOR_MODIFY_SQL_QUERY = "select count(*) from WO_HEADER where WO_ID = #WO_ID# and WO_ISPROD_ENTERED = '0'";

    public static final String GET_WOJB_ID_SELECT_SQL_QUERY = "select WOJB_ID from WO_JB_HEADER where WO_ID = #WO_ID# and JB_ID = #JB_ID#";

    public static final String WORKORDER_ADD_SQL_QUERY = "insert into WO_HEADER(WO_ID,WO_NO,WO_DATE,WO_ESTMD_DATE,WO_CNTCT_PERSON) values(WO_ID.nextval,#WO_NO#,#WO_DATE#,#WO_ESTMD_DATE#,#WO_CNTCT_PERSON#)";

    public static final String WORKORDER_UPDATE_SQL_QUERY = "update WO_HEADER set WO_NO = #WO_NO#,WO_DATE = #WO_DATE#,WO_ESTMD_DATE = #WO_ESTMD_DATE#,WO_CNTCT_PERSON = #WO_CNTCT_PERSON# where WO_ID = #WO_ID#";
    public static final String CUST_MSTR_UPDATE_FROM_WORKORDER = "update CUST_MSTR set CUST_LOPD = #CUST_LOPD#,CUST_LWOR = #CUST_LWOR#,CUST_DATESTAMP = SYSTIMESTAMP where CUST_ID=#CUST_ID#";

    public static final String WORKORDER_ID_SELECT_SQL_QUERY = "select WO_ID.currval from dual";

    public static final String WORKORDER_JOB_ADD_SQL_QUERY = "insert into WO_JB_HEADER(WOJB_ID,WO_ID,JB_ID,WOJB_SNO,WOJB_START_SNO,WOJB_QTY,WOJB_DCNO,WOJB_DCDATE) values(WOJB_ID.nextval,#WO_ID#,#JB_ID#,#WOJB_SNO#,#WOJB_START_SNO#,#WOJB_QTY#,#WOJB_DCNO#,#WOJB_DCDATE#)";

    public static final String WORKORDERJOB_ID_SELECT_SQL_QUERY = "select WOJB_ID.currval from dual";

    public static final String WORKORDER_JOBSTAT_ADD_SQL_QUERY = "insert into WO_JB_STAT(WOJBSTAT_ID,WOJB_ID,WOJBSTAT_SNO) values(WOJBSTAT_ID.nextval,#WOJB_ID#,#WOJBSTAT_SNO#)";

    public static final String WORKORDERJOBSTAT_ID_SELECT_SQL_QUERY = "select WOJBSTAT_ID.currval from dual";

    public static final String WORKORDER_JOBOPN_ADD_SQL_QUERY = "insert into WO_JB_OPN(WOJBOPN_ID,WOJBSTAT_ID,OPN_GP_ID,WOJBOPN_OPN_SNO,WOJBOPN_OPN_NAME,WOJBOPN_OPN_STDHRS,WOJBOPN_INCENTIVE) values(WOJBOPN_ID.nextval,#WOJBSTAT_ID#,#OPN_GP_ID#,#WOJBOPN_OPN_SNO#,#WOJBOPN_OPN_NAME#,#WOJBOPN_OPN_STDHRS#,#WOJBOPN_INCENTIVE#)";

    ///
    public static final String WORKORDER_JOBHISTRY_ADD_SQL_QUERY = "insert into WO_JB_HSTRY(WOJB_ID,WO_NO,JB_NAME,CUST_ID,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP,WOJB_QTY,WO_DATE) values(#WOJB_ID#,#WO_NO#,#JB_NAME#,#CUST_ID#,#JB_DWG_NO#,#JB_RVSN_NO#,#JB_MATL_TYP#,#WOJB_QTY#,#WO_DATE#)";

    public static final String WORKORDER_JOBID_GET_SQL_QUERY = "select WOJB_ID from WO_JB_HEADER where WO_ID =#WO_ID# and WOJB_ISPROD_ENTERED = '0'";

    public static final String WORKORDER_JOBSTATID_GET_SQL_QUERY = "select WOJBSTAT_ID from WO_JB_STAT where WOJB_ID =#WOJB_ID#";

    public static final String WORKORDER_JOBOPN_DEL_SQL_QUERY = "delete from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID#";

    public static final String WORKORDER_JOBSTAT_DEL_SQL_QUERY = "delete from WO_JB_STAT where WOJB_ID = #WOJB_ID#";

    public static final String WORKORDER_JOBHEADER_DEL_SQL_QUERY = "delete from WO_JB_HEADER where WOJB_ID = #WOJB_ID#";

    public static final String WORKORDER_HEADER_DEL_SQL_QUERY = "delete from WO_HEADER where WO_ID = #WO_ID#";

    public static final String WORKORDER_JOBHSTRY_DEL_SQL_QUERY = "delete from WO_JB_HSTRY where WOJB_ID = #WOJB_ID#";

    public static final String WORKORDER_MKVALID_QUERY = "update WO_HEADER set WO_ISVALID = 1,WO_DATESTAMP = SYSTIMESTAMP where WO_ID = #WO_ID#";

    public static final String WORKORDER_MKINVALID_QUERY = "update WO_HEADER set WO_ISVALID = 0,WO_DATESTAMP = SYSTIMESTAMP where WO_ID = #WO_ID#";

    //public static final String GET_WORKORDER_COMPLETED_JOBDETAILS_QUERY =
    // "select WOJHS.*,CM.CUST_NAME from WO_JB_HSTRY WOJHS,CUST_MSTR CM where
    // WOJB_ID = #WOJB_ID# and WOJHS.CUST_ID = CM.CUST_ID";
    public static final String GET_WORKORDER_COMPLETED_JOBDETAILS_FILTER_QUERY = "select rownum r,WO_DATE,WO_NO,JB_NAME,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP,CUST_NAME,WOJB_ID from (select WO_DATE,WO_NO,JB_NAME,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP,CUST_NAME,WOJB_ID from (select distinct WOJHS.WO_DATE,WOJHS.WO_NO,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,CM.CUST_NAME,WJH.WOJB_ID from WO_JB_HSTRY WOJHS,CUST_MSTR CM,WO_JB_HEADER WJH where WOJHS.CUST_ID = CM.CUST_ID and WJH.WOJB_ID = WOJHS.WOJB_ID and WJH.WOJB_STAT IN('C','F'))";

    //public static final String GET_COMPLETED_WOJOBID_LIST = "select WOJB_ID
    // from WO_JB_HEADER where WOJB_STAT IN('C','F')";
    public static final String WORKORDER_COMPLETED_JOB_CLOSE_QUERY = "update WO_JB_HEADER set WOJB_STAT = 'D',WOJB_CLOSED_DATE = SYSTIMESTAMP,WOJB_TIME_TAKEN = (SELECT SUM(TIME_TAKEN) TIME_TAKEN FROM ((SELECT SUM(PROD_TOT_QTY * PROD_TOT_HRS) TIME_TAKEN FROM PROD WHERE WOJB_ID = #WOJB_ID# and PROD_POST_FLG = '1') UNION ALL (SELECT SUM(RADL_TOT_QTY * RADL_TOT_HRS) TIME_TAKEN FROM RADL WHERE WOJB_ID = #WOJB_ID# and RADL_POST_FLG = '1'))) where WOJB_ID = #WOJB_ID#";

    public static final String WORKORDER_ID_SELECT_QUERY = "select WO_ID from WO_JB_HEADER where WOJB_ID = #WOJB_ID#";

    public static final String WORKORDER_STAT_CHECK_SQL_QUERY = "select * from WO_JB_HEADER where WO_ID =#WO_ID# and WOJB_STAT != 'D'";

    public static final String WORKORDER_CLOSE_SQL_QUERY = "update WO_HEADER set WO_STAT = 'D',WO_DATESTAMP = SYSTIMESTAMP where WO_ID = #WO_ID#";

    public static final String CLOSE_WORKORDER_MOVE_SQL_QUERY = "insert into CLOSED_WO_HEADER select * from WO_HEADER where WO_ID = #WO_ID#";

    public static final String CLOSE_WORKORDER_JOB_MOVE_SQL_QUERY = "insert into CLOSED_WO_JB_HEADER select * from WO_JB_HEADER where WOJB_ID = #WOJB_ID#";

    public static final String CLOSE_WORKORDER_JOB_STAT_MOVE_SQL_QUERY = "insert into CLOSED_WO_JB_STAT select * from WO_JB_STAT where WOJBSTAT_ID = #WOJBSTAT_ID#";

    public static final String CLOSE_WORKORDER_JOB_OPN_MOVE_SQL_QUERY = "insert into CLOSED_WO_JB_OPN select * from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID#";

    ///

    public static final String GET_WORKORDER_DETAILS_QUERY = "select distinct WOH.WO_NO,WOH.WO_DATE,WOH.WO_STAT,JM.CUST_ID,CM.CUST_TYP_ID,CM.CUST_NAME,CTM.CUST_TYP_NAME,WOH.WO_ESTMD_DATE,WOH.WO_CNTCT_PERSON,WOH.WO_ISVALID,WOH.WO_DATESTAMP from WO_HEADER WOH,WO_JB_HEADER WOJH,JB_MSTR JM,CUST_MSTR CM,CUST_TYP_MSTR CTM where CM.CUST_TYP_ID = CTM.CUST_TYP_ID and JM.CUST_ID = CM.CUST_ID and JM.JB_ID = WOJH.JB_ID and WOJH.WO_ID = WOH.WO_ID and WOH.WO_ID = #WO_ID#";
    public static final String GET_WORKORDER_JOB_DETAILS_QUERY = "select distinct WOJH.JB_ID,WOJH.WOJB_START_SNO,WOJH.WOJB_QTY,WOJH.WOJB_DCNO,WOJH.WOJB_DCDATE,WOJH.WOJB_STAT,WOJH.WOJB_ISPROD_ENTERED,JM.GNRL_ID,JGNM.GNRL_NAME,JM.JB_NAME,JM.JB_DRWG_NO,JM.JB_RVSN_NO,JM.JB_MATL_TYP,WOJH.WOJB_STAT from JB_MSTR JM,JB_GNRLNAME_MSTR JGNM,WO_JB_HEADER WOJH,WO_HEADER WOH where JM.GNRL_ID = JGNM.GNRL_ID and WOJH.JB_ID = JM.JB_ID and WOJH.WO_ID = WOH.WO_ID and WOH.WO_ID = #WO_ID# order by JB_NAME,JB_DRWG_NO";
    public static final String GET_WORKORDER_JOB_OPERATION_DETAILS_QUERY = "select distinct WOJO.OPN_GP_ID,WOJO.WOJBOPN_OPN_SNO,WOJO.WOJBOPN_OPN_NAME,WOJO.WOJBOPN_OPN_STDHRS,WOJO.WOJBOPN_INCENTIVE,OPGM.OPN_GP_CODE from WO_JB_OPN WOJO,WO_HEADER WOH,WO_JB_HEADER WOJH,WO_JB_STAT WOJS,OPN_GP_MSTR OPGM where WOH.WO_ID = #WO_ID# and WOJH.JB_ID = #JB_ID# and WOH.WO_ID = WOJH.WO_ID and WOJH.WOJB_ID = WOJS.WOJB_ID and WOJS.WOJBSTAT_ID = WOJO.WOJBSTAT_ID and WOJO.OPN_GP_ID = OPGM.OPN_GP_ID order by WOJBOPN_OPN_SNO";

    public static final String GET_WORKORDER_LIST = "select WO_ID,WO_NO from WO_HEADER where WO_ISVALID != 0 and WO_STAT !='D' order by WO_NO";

    public static final String WORKORDER_FILTER_QUERY = "select rownum r,WO_ID from(select distinct WO_ID, WO_NO, CUST_NAME, WO_ISVALID, WO_STAT, WO_DATE from(select WO_ID,WO_NO,CUST_ID,JB_NAME, JB_DWG_NO, CUST_NAME, WO_ISVALID, WO_STAT, WO_DATE from(select distinct WOH.WO_ID,WOH.WO_NO,WOJHS.CUST_ID,WOJHS.JB_NAME, WOJHS.JB_DWG_NO, CM.CUST_NAME, WOH.WO_ISVALID, WOH.WO_STAT, WOH.WO_DATE from WO_HEADER WOH,WO_JB_HSTRY WOJHS,WO_JB_HEADER WOJH,JB_MSTR JM,CUST_MSTR CM where WOH.WO_ID = WOJH.WO_ID and WOJH.WOJB_ID = WOJHS.WOJB_ID and WOJH.JB_ID = JM.JB_ID and JM.JB_TYP = 'N' and WOJHS.CUST_ID = CM.CUST_ID order by WO_ID))";
    
    
	public static final String GET_JOBNAME_BY_WORKORDER = "select WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP from WO_JB_HEADER WOJH,WO_JB_HSTRY WOJHS where WOJHS.WOJB_ID=WOJH.WOJB_ID and WOJH.WO_ID=#WO_ID# order by JB_NAME";
    

    //public static final String GET_PRECLOSE_WORKORDER_DETAILS_QUERY = "select
    // WOH.WO_ID,WOH.WO_NO,WOH.WO_DATE,WOJH.JB_ID,JM.JB_NAME,JM.JB_DRWG_NO,JM.RVSN_NO,JM.JB_MATL_TYP,PCL.PCLOG_PCRESN
    // from WO_HEADER WOH,WO_JB_HEADER WOJH,JB_MSTR JM,PRCL_LOG PCL where
    // JM.JB_ID = WOJH.JB_ID and WOH.WO_ID = WOJH.WO_ID and WOH.WO_ID =
    // #WO_ID#";
    public static final String GET_PRECLOSE_JOB_DETAILS_QUERY = "select distinct WOJH.WO_ID,WOJHS.WOJB_ID,WOJH.JB_ID,WOJHS.WOJB_ID,WOJHS.WO_NO,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,WOJHS.WO_DATE from WO_JB_HSTRY WOJHS,WO_JB_STAT WOJS,PRCL_LOG PRCL,WO_JB_HEADER WOJH where PRCL.PRCL_LOG_ID = #PRCL_LOG_ID# and PRCL.WOJBSTAT_ID =WOJS.WOJBSTAT_ID and WOJS.WOJB_ID = WOJHS.WOJB_ID and WOJHS.WOJB_ID = WOJH.WOJB_ID";

    public static final String GET_WORKORDER_JBSTATSNO_QUERY = "select WOJBSTAT_SNO from WO_JB_STAT where WOJBSTAT_ID = #WOJBSTAT_ID#";

    //DUMMY WORK ORDER//
    public static final String DUMMY_WORKORDER_ADD_SQL_QUERY = "insert into WO_HEADER(WO_ID,WO_NO,WO_DATE) values(WO_ID.nextval,#WO_NO#,SYSTIMESTAMP)";

    public static final String DUMMY_JOB_ADD_SQL_QUERY = "insert into JB_MSTR(JB_ID,JB_NAME,CUST_ID,GNRL_ID,JB_DRWG_NO,JB_RVSN_NO,JB_MATL_TYP,JB_INCNTV_FLG,JB_CREATED_DATE,JB_TYP) values(JB_ID.nextval,#JB_NAME#,#CST_ID#,#GNRL_ID#,#JB_DRWG_NO#,#JB_RVSN_NO#,#JB_MATL_TYP#,#JB_INCNTV_FLG#,SYSTIMESTAMP,#JB_TYP#)";

    public static final String DUMMY_WORKORDER_ADD_QUERY = "insert into WO_DMYCOUNT(WODMY_ID,WODMY_NO,CUST_ID,WODMY_JB_NAME,WODMY_JB_DWG_NO,WODMY_JB_RVSN_NO,WODMY_JB_MATL_TYP,WODMY_GNRL_NAME) values(WODMY_ID.nextval,#WODMY_NO#,#CUST_ID#,#WODMY_JB_NAME#,#WODMY_JB_DWG_NO#,#WODMY_JB_RVSN_NO#,#WODMY_JB_MATL_TYP#,#WODMY_GNRL_NAME#)";

    public static final String DUMMY_WORKORDER_UPDATE_QUERY = "update WO_DMYCOUNT set WODMY_JB_NAME = #WODMY_JB_NAME#,WODMY_JB_DWG_NO = #WODMY_JB_DWG_NO#,WODMY_JB_RVSN_NO = #WODMY_JB_RVSN_NO#,WODMY_JB_MATL_TYP = #WODMY_JB_MATL_TYP#,WODMY_GNRL_NAME = #WODMY_GNRL_NAME# where WODMY_ID = #WO_DMY_ID#";

    public static final String GET_DUMMY_WORKORDER_DETAILS = "select WOD.WODMY_NO,WOD.CUST_ID,CM.CUST_NAME,WOD.WODMY_JB_NAME,WOD.WODMY_JB_DWG_NO,WOD.WODMY_JB_RVSN_NO,WOD.WODMY_JB_MATL_TYP,WOD.WODMY_STAT,WOD.WODMY_USED_COUNT,WOD.WODMY_LAST_USED,WOD.WODMY_GNRL_NAME from CUST_MSTR CM,WO_DMYCOUNT WOD where WOD.WODMY_ID =#WODMY_ID# AND CM.CUST_ID = WOD.CUST_ID";

    public static final String DUMMY_WORKORDER_DELETE_QUERY = "delete from WO_DMYCOUNT where WODMY_ID = #WODMY_ID#";

    public static final String DUMMY_WORKORDER_FILTER_QUERY = "select rownum r,WO_ID,WO_NO,CUST_ID,CUST_NAME,WO_STAT,WO_DATE,WO_ISVALID,WO_DATESTAMP from(select WO_ID,WO_NO,CUST_ID,CUST_NAME,WO_STAT,WO_DATE,WO_ISVALID,WO_DATESTAMP from(select distinct WOH.WO_ID,WOH.WO_NO,WOJHS.CUST_ID,CM.CUST_NAME,WOH.WO_STAT,WOH.WO_DATE,WOH.WO_ISVALID,WOH.WO_DATESTAMP from WO_HEADER WOH,WO_JB_HSTRY WOJHS,WO_JB_HEADER WOJH,JB_MSTR JM,CUST_MSTR CM where WOH.WO_ID = WOJH.WO_ID and WOJH.WOJB_ID = WOJHS.WOJB_ID and WOJH.JB_ID = JM.JB_ID and JM.JB_TYP = 'D' and WOJHS.CUST_ID = CM.CUST_ID)";

    //PRE CLOSE LOG//
    public static final String PRECLOSE_WORKORDER_JOBID_GET_SQL_QUERY = "select WOJB_ID from WO_JB_HEADER where WO_ID = #WO_ID# and JB_ID = #JB_ID# and WOJB_STAT IN('A','O')";

    public static final String PRECLOSE_WORKORDER_JOBSTATID_GET_SQL_QUERY = "select WOJBSTAT_ID from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT IN('A','O')";

    public static final String PRECLOSE_WORKORDER_JOBSTATSNO_GET_SQL_QUERY = "select WOJBSTAT_SNO from WO_JB_STAT where WOJBSTAT_ID = #WOJBSTAT_ID#";

    public static final String PRECLOSE_WORKORDER_OPEN_JOBOPNS_GET_SQL_QUERY = "select OPN_GP_ID,WOJBOPN_ID,WOJBOPN_OPN_SNO,WOJBOPN_OPN_NAME,WOJBOPN_OPN_STDHRS from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('O','R')";

    public static final String PRECLOSE_WORKORDER_CMPLTD_JOBOPNS_GET_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('C','P','F')";

    public static final String PRECLOSE_WORKORDER_REWORK_JOBOPNS_GET_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'F' ";

    public static final String PRODUCTION_ENTERED_OPNS_GET_SQL_QUERY = "select PROD_QTY_SNOS,PROD_TOT_QTY,PROD_START_OPN,PROD_END_OPN from PROD where WOJB_ID = #WOJB_ID# and PROD_POST_FLG !='1' and PROD_ISVALID = 1";

    public static final String PRODUCTION_ENTERED_RADL_OPNS_GET_SQL_QUERY = "select RADL_QTY_SNOS,RADL_TOT_QTY,RADL_START_OPN,RADL_END_OPN from RADL where WOJB_ID = #WOJB_ID# and RADL_POST_FLG !='1' and RADL_ISVALID = 1";

    public static final String PRECLOSE_WORKORDER_JOBOPNS_GET_SQL_QUERY = "select OPN_GP_ID,WOJBOPN_OPN_SNO,WOJBOPN_OPN_NAME,WOJBOPN_OPN_STDHRS from WO_JB_OPN where WOJBSTAT_ID=#WOJBSTAT_ID# and WOJBOPN_STAT IN('A','O')";

    public static final String PRECLOSE_LOG_ADD_SQL_QUERY = "insert into PRCL_LOG(PRCL_LOG_ID,WOJBSTAT_ID,PCLOG_OPN_LIST,PCLOG_PCRESN,PCLOG_LOGDATE) values(PRCL_LOG_ID.nextval,#WOJBSTAT_ID#,#PCLOG_OPN_LIST#,#PCLOG_PCRESN#,systimestamp)";

    public static final String PRECLOSE_SQL_QUERY = "update WO_JB_OPN set WOJBOPN_STAT = 'P' where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#";

    public static final String GET_PRECLOSE_LOG_DETAILS_QUERY = "select WOJBSTAT_ID,PCLOG_OPN_LIST,PCLOG_PCRESN,PCLOG_LOGDATE from PRCL_LOG where PRCL_LOG_ID = #PRCL_LOG_ID#";

    public static final String GET_PRECLOSE_WORKORDER_JOBOPERATION_QUERY = "select WOJO.WOJBOPN_ID,WOJO.WOJBSTAT_ID,WOJO.OPN_GP_ID,WOJO.WOJBOPN_OPN_SNO,WOJO.WOJBOPN_OPN_NAME,WOJO.WOJBOPN_OPN_STDHRS,WOJO.WOJBOPN_STAT,WOJO.WOJBOPN_STAT_DATE,WOJO.WOJBOPN_ITRN_NO,WOJS.WOJBSTAT_SNO,OPGM.OPN_GP_CODE from WO_JB_OPN WOJO,WO_JB_STAT WOJS,OPN_GP_MSTR OPGM where WOJS.WOJBSTAT_ID = #WOJBSTAT_ID# and WOJO.WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO# and WOJS.WOJBSTAT_ID = WOJO.WOJBSTAT_ID and OPGM.OPN_GP_ID = WOJO.OPN_GP_ID";

    public static final String PRECLOSE_WORKORDER_FILTER_QUERY = "select rownum r,PRCL_LOG_ID,WOJBSTAT_ID,WOJB_ID,JB_ID,WOJB_SNO,WO_NO,WO_DATE,PCLOG_PCRESN,PCLOG_LOGDATE,PCLOG_DATESTAMP,PCLOG_ISVALID,WOJBSTAT_SNO,JB_NAME,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP from(select PRCL_LOG_ID,WOJBSTAT_ID,WOJB_ID,JB_ID,WOJB_SNO,WO_NO,WO_DATE,PCLOG_PCRESN,PCLOG_LOGDATE,WOJBSTAT_SNO,JB_NAME,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP,PCLOG_DATESTAMP,PCLOG_ISVALID from(select PCL.PRCL_LOG_ID,PCL.WOJBSTAT_ID,WOJS.WOJB_ID,WOJH.JB_ID,WOJH.WOJB_SNO,WOJHS.WO_NO,WOJHS.WO_DATE,PCL.PCLOG_PCRESN,PCL.PCLOG_LOGDATE,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,WOJS.WOJBSTAT_SNO,PCL.PCLOG_DATESTAMP,PCL.PCLOG_ISVALID from PRCL_LOG PCL,WO_JB_STAT WOJS,WO_JB_HSTRY WOJHS,WO_JB_HEADER WOJH where PCL.WOJBSTAT_ID = WOJS.WOJBSTAT_ID and WOJS.WOJB_ID = WOJH.WOJB_ID and WOJS.WOJB_ID = WOJHS.WOJB_ID and WOJHS.WOJB_ID = WOJH.WOJB_ID)";

    public static final String PRECLOSE_MAKE_VALID_QUERY = "update PRCL_LOG set PCLOG_ISVALID = 1,PCLOG_DATESTAMP = SYSTIMESTAMP where WOJBSTAT_ID = #WOJBSTAT_ID#";

    public static final String PRECLOSE_MAKE_INVALID_QUERY = "update PRCL_LOG set PCLOG_ISVALID = 0,PCLOG_DATESTAMP = SYSTIMESTAMP where WOJBSTAT_ID = #WOJBSTAT_ID#";

    //PRODUCTION//

	public static final String FETCH_PROD_HRS_DETAILS = "select sum(PROD_TOT_HRS) PROD_HRS FROM PROD where PROD_CRNT_DATE BETWEEN #FROM_DATE# AND #TO_DATE# AND MC_CDE = #MC_CDE#";
	public static final String FETCH_NON_PROD_HRS_DETAILS = "select sum(NPROD_TOT_HRS) NPROD_HRS FROM N_PROD where NPROD_CRNT_DATE BETWEEN #FROM_DATE# AND #TO_DATE# AND MC_CDE = #MC_CDE#";
	public static final String SELECT_SHIFT_DETAILS = "select * from SHIFT_MSTR WHERE SHIFT_ID = #SHIFT_ID#";
	public static final String SELECT_MACHINE_ACCOUNTING_DETAILS = "select * from PROD_ACCNTNG where PROD_DATE = #CURRENT_DATE# AND SHIFT_ID = #SHIFT_ID# AND MC_CDE = #MC_CDE#";
	
    public static final String CHECK_DUTY_ENTRY_SQL_QUERY = "select sum(cnt) cnt from (select count(*) cnt from PROD P,PROD_EMP PE WHERE P.PROD_CRNT_DATE = #PROD_DATE# and PE.EMP_ID = #EMP_ID# and PE.DT_HRS>0 and P.PROD_ID = PE.PROD_ID and P.SHIFT_ID != #SHIFT_ID# union all select count(*) cnt from N_PROD NP,NPROD_EMP NPE WHERE NP.NPROD_CRNT_DATE = #PROD_DATE# and NPE.EMP_ID = #EMP_ID# and NPE.DT_HRS>0 and NP.NPROD_ID = NPE.NPROD_ID and NP.SHIFT_ID != #SHIFT_ID# union all select count(*) cnt from POP P,POP_EMP PE WHERE P.POP_CRNT_DATE = #PROD_DATE# and PE.EMP_ID = #EMP_ID# and PE.DT_HRS>0 and P.POP_ID = PE.POP_ID and P.SHIFT_ID != #SHIFT_ID# union all select count(*) cnt from RADL R,RADL_EMP RE WHERE R.RADL_CRNT_DATE = #PROD_DATE# and RE.EMP_ID = #EMP_ID# and RE.DT_HRS>0 and R.RADL_ID = RE.RADL_ID and R.SHIFT_ID != #SHIFT_ID#)A";
    public static final String PROD_ENTRY_DUPLICATE_CHECK_FOR_UPDATE_SQL_QUERY = "select  count(*)  from PROD WHERE  WOJB_ID = #WOJB_ID#  and instr(','||PROD_QTY_SNOS||',',','||#PROD_QTY_SNOS#||',') >0 and PROD_START_OPN >= #PROD_START_OPN# and PROD_START_OPN <= #PROD_START_OPN# and PROD_ID != #PROD_ID#";
    public static final String PROD_ENTRY_DUPLICATE_CHECK_SQL_QUERY = "select  count(*)  from PROD WHERE  WOJB_ID = #WOJB_ID#  and instr(','||PROD_QTY_SNOS||',',','||#PROD_QTY_SNOS#||',') >0 and PROD_START_OPN >= #PROD_START_OPN# and PROD_START_OPN <= #PROD_START_OPN#";
    public static final String CHECK_EMP_TYPE_SQL_QUERY = "select count(*) from EMP_TYP_MSTR ETM where ETM.EMP_TYP_ID = #EMP_TYP_ID# and UPPER(ETM.EMP_TYP_NAME) LIKE 'SUPERVISOR'";
    public static final String OPERATION_DETAILS_SELECT_SQL_QUERY = "select DISTINCT WJO.WOJBOPN_OPN_SNO,WJO.WOJBOPN_OPN_NAME,WJO.WOJBOPN_OPN_STDHRS,WJO.WOJBOPN_INCENTIVE,OGM.OPN_GP_CODE from WO_JB_STAT WJS,WO_JB_OPN WJO,OPN_GP_MSTR OGM where WOJB_ID = #WOJB_ID# and WJS.WOJBSTAT_ID = WJO.WOJBSTAT_ID and WJO.OPN_GP_ID = OGM.OPN_GP_ID";
    public static final String CHECK_OPERATIONS_SQL_QUERY = "select MC_TYP_NAME from MC_TYP_MSTR where MC_TYP_ID in (select MC_TYP_ID from MC_MSTR where MC_CDE  in (select MC_CDE from OPN_GP_MC 	where OPN_GP_ID in (select OPN_GP_ID from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#)))";

    public static final String WORKORDER_JB_TABLE_UPDATE_SQL_QUERY = "update WO_JB_HEADER set WOJB_ISPROD_ENTERED = '1' where WOJB_ID = #WOJB_ID#";

    public static final String PRODN_DETAILS_ADD_SQL_QUERY = "insert into PROD(PROD_ID,MC_CDE,PROD_CRNT_DATE,SHIFT_ID,PROD_WORK_TYP,PROD_INCNTV_FLG,WOJB_ID,PROD_QTY_SNOS,PROD_TOT_QTY,PROD_START_OPN,PROD_END_OPN,PROD_STD_HRS,PROD_TOT_HRS,PROD_CREATEDBY) values(PROD_ID.nextval,#MC_CDE#,#PROD_CRNT_DATE#,#SHIFT_ID#,#PROD_WORK_TYP#,#PROD_INCNTV_FLG#,#WOJB_ID#,#PROD_QTY_SNOS#,#PROD_TOT_QTY#,#PROD_START_OPN#,#PROD_END_OPN#,#PROD_STD_HRS#,#PROD_TOT_HRS#,#PROD_CREATEDBY#)";

    public static final String PRODN_WOJBSTATID_GET_SQL_QUERY = "select WOJBSTAT_ID from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO = #WOJBSTAT_SNO#";

    public static final String PRODN_OPN_STATUS_CHANGE_SQL_QUERY = "update WO_JB_OPN set WOJBOPN_STAT = 'C' where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#";

    public static final String OPN_ITRN_CHANGE_SQL_QUERY = "update WO_JB_OPN set WOJBOPN_ITRN_NO = WOJBOPN_ITRN_NO+1 where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#";

    public static final String PRODN_OPN_STATUS_CHANGE_FOR_REWORK_SQL_QUERY = "update WO_JB_OPN set WOJBOPN_STAT = 'F' where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#";

    public static final String PRODN_OPN_STATUS_CHECK_SQL_QUERY = "select * from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('O','R')";

    public static final String PRODN_OPN_STATUS_CHECK_FOR_REWORK_SQL_QUERY = "select * from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('R','O')";

    public static final String PRODN_OPN_STATUS_CHECK_F_FOR_REWORK_SQL_QUERY = "select * from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT != 'F'";

    public static final String PRODN_WOJBID_WOID_SELECT_SQL_QUERY = "select WOJH.WOJB_ID,WOJH.WO_ID from WO_JB_HEADER WOJH,WO_JB_STAT WOJS where WOJS.WOJBSTAT_ID = #WOJBSTAT_ID# and WOJS.WOJB_ID = WOJH.WOJB_ID";

    public static final String PRODN_WOJBSTATSNO_STATUS_CHANGETOA_SQL_QUERY = "update WO_JB_STAT set WOJBSTAT_SNO_STAT = 'A' where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJB_ID = #WOJB_ID#";

    public static final String PRODN_WOJB_STATUS_CHANGETOA_SQL_QUERY = "update WO_JB_HEADER set WOJB_STAT = 'A',WOJB_START_DATE = (SELECT MIN(PROD_DATE) PROD_DATE FROM((SELECT MIN(PROD_CRNT_DATE)  PROD_DATE FROM PROD WHERE WOJB_ID = #WOJB_ID# and PROD_POST_FLG = '1') UNION ALL (SELECT MIN(RADL_CRNT_DATE)  PROD_DATE FROM RADL WHERE WOJB_ID = #WOJB_ID# and RADL_POST_FLG = '1'))) where WOJB_ID = #WOJB_ID# and WO_ID = #WO_ID# ";

    public static final String PRODN_WO_STATUS_CHANGETOA_SQL_QUERY = "update WO_HEADER set WO_STAT = 'A',WO_DATESTAMP = SYSTIMESTAMP where WO_ID = #WO_ID#";

    public static final String PRODN_WOJBSTATSNO_STATUS_CHANGETOC_SQL_QUERY = "update WO_JB_STAT set WOJBSTAT_SNO_STAT = 'C' where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJB_ID = #WOJB_ID#";

    public static final String PRODN_WOJBSTATSNO_STATUS_CHECK_SQL_QUERY = "select * from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT IN('A','O','R')";

    public static final String PRODN_WOJBSTATSNO_STATUS_F_CHECK_SQL_QUERY = "select * from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT != 'F'";

    public static final String PRODN_WOJB_STATUS_CHANGETOC_SQL_QUERY = "update WO_JB_HEADER set WOJB_STAT = 'C',WOJB_COMPLETE_DATE = (SELECT MAX(PROD_DATE) PROD_DATE FROM((SELECT MAX(PROD_CRNT_DATE)  PROD_DATE FROM PROD WHERE WOJB_ID = #WOJB_ID# and PROD_POST_FLG = '1') UNION ALL (SELECT MAX(RADL_CRNT_DATE)  PROD_DATE FROM RADL WHERE WOJB_ID = #WOJB_ID# and RADL_POST_FLG = '1'))) where WOJB_ID = #WOJB_ID#";

    public static final String PRODN_WOJB_STATUS_CHANGETOF_SQL_QUERY = "update WO_JB_HEADER set WOJB_STAT = 'F' where WOJB_ID = #WOJB_ID#";

    public static final String PRODN_JOB_STATUS_CHECK_SQL_QUERY = "select * from WO_JB_HEADER where  WO_ID = #WO_ID# and WOJB_STAT IN('A','O','R')";

    public static final String PRODN_WO_STATUS_CHANGETOC_SQL_QUERY = "update WO_HEADER set WO_STAT = 'C',WO_DATESTAMP = SYSTIMESTAMP where WO_ID = #WO_ID#";

    public static final String PROD_ID_SELECT_SQL_QUERY = "select PROD_ID.currval from dual";

    public static final String PRODN_EMPHRS_ADD_SQL_QUERY = "insert into PROD_EMP values(#PROD_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#INCNTV_SLRY_HRS#,#PROD_MODIFYCOUNT#)";

    //public static final String LOG_PRODN_EMPHRS_ADD_SQL_QUERY = "insert into LOG_PROD_EMP values(#PROD_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#INCNTV_SLRY_HRS#,#PROD_MODIFYCOUNT#)";
    public static final String LOG_PRODN_EMPHRS_ADD_SQL_QUERY = "insert into LOG_PROD_EMP select * from PROD_EMP where PROD_ID = #PROD_ID#";

    public static final String PRODN_ACCNTNG_PRODHRS_ADD_SQL_QUERY = "insert into PROD_ACCNTNG(MC_CDE,PROD_DATE,SHIFT_ID,PROD_HRS,ISHRS_ACCOUNTED) values(#MC_CDE#,#PROD_DATE#,#SHIFT_ID#,#PROD_HRS#,#ISHRS_ACCOUNTED#)";

    public static final String PRODN_ACCNTNG_UPDATE_BY_PRODHRS_SQL_QUERY = "update PROD_ACCNTNG set PROD_HRS = PROD_HRS + #PROD_HRS#,ISHRS_ACCOUNTED=#ISHRS_ACCOUNTED# where MC_CDE=#MC_CDE# and SHIFT_ID=#SHIFT_ID# and PROD_DATE=#PROD_DATE#";

    public static final String CUSTOM_NONAVBLTY_CHECK_SQL_QUERY = "select count(*) from CUSTOM_NON_AVBLTY CNA,AVBLTY_MSTR AM where CUSTOM_N_AVBLTY_FORDATE = #PROD_CRNT_DATE# and CNA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_N_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE";

    public static final String CUSTOM_AVBLTYCHECK_SQL_QUERY = "select count(*) from CUSTOM_AVBLTY CA,AVBLTY_MSTR AM where  CUSTOM_AVBLTY_FORDATE = #PROD_CRNT_DATE# and CA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE";

    public static final String CUSTOM_AVBLTY_CHECK_SQL_QUERY = "select * from CUSTOM_AVBLTY CA,AVBLTY_MSTR AM where  CUSTOM_AVBLTY_FORDATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and CA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE";

    public static final String PRODN_HRS_ACCOUNTED_FLG_CHECK_SQL_QUERY = "select PROD_HRS,NPROD_HRS from PROD_ACCNTNG where MC_CDE = #MC_CDE# and SHIFT_ID = #SHIFT_ID# and PROD_DATE = #PROD_CRNT_DATE# and ISHRS_ACCOUNTED = '1'";

    public static final String PRODN_NPRODN_HRS_GET_SQL_QUERY = "select PROD_HRS,NPROD_HRS from PROD_ACCNTNG where MC_CDE = #MC_CDE# and SHIFT_ID = #SHIFT_ID# and PROD_DATE = #PROD_CRNT_DATE#";

    public static final String AVAILABLE_SHIFT_HRS_GET_SQL_QUERY = "select BASE_CAL_VAR_STARTTIME,BASE_CAL_VAR_ENDTIME from BASE_CAL_VAR where SHIFT_ID = #SHIFT_ID# and BASE_CAL_VAR_DAY = #DAY#";

    public static final String UNPOSTED_PROD_ID_SELECT_SQL_QUERY = "select PR.*,SM.SHIFT_NAME from PROD PR,SHIFT_MSTR SM where PROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# and PROD_POST_FLG = '0' and SM.SHIFT_ID = PR.SHIFT_ID and PROD_ISVALID = 1";

    public static final String UNPOSTED_JOB_DETAILS_GET_SQL_QUERY = "select JB_NAME,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP,WO_NO from WO_JB_HSTRY where WOJB_ID = #WOJB_ID#";

    public static final String UNPOSTED_NONPROD_DETAILS_SELECT_SQL_QUERY = "select NPROD.NPROD_ID,NPROD.NPROD_CRNT_DATE,NPROD.SHIFT_ID,SM.SHIFT_NAME,NPROD.MC_CDE,NPROD.NPROD_IDL_BRKDWN,NPROD.RSN_ID,IDLBRKDWN.RSN,NPROD.NPROD_TOT_HRS,NPROD.NPROD_UPDATE_PYRL,NPROD.NPROD_POST_FLG,NPROD.IS_DLTD from N_PROD NPROD,SHIFT_MSTR SM,IDL_BRKDWN_RSN IDLBRKDWN where NPROD.NPROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# and NPROD_POST_FLG = '0' and NPROD.SHIFT_ID =  SM.SHIFT_ID and NPROD.RSN_ID = IDLBRKDWN.RSN_ID and NPROD_ISVALID = 1";

    public static final String POST_NONPRODN_DETAILS_SQL_QUERY = "update N_PROD set NPROD_POST_FLG = '1',NPROD_DATESTAMP = SYSTIMESTAMP where NPROD_ID = #NPROD_ID# and NPROD_ISVALID = 1";

    public static final String GET_WOJBSTATID_SQL_QUERY = "select WOJBSTAT_ID from WO_JB_STAT where WOJB_ID = #WOJB_ID#";

    public static final String GET_WORKORDER_STDHRS_SQL_QUERY = "select WOJBOPN_OPN_STDHRS from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#";

    public static final String PRODN_HRS_GET_SQL_QUERY = "select PREMP.DT_HRS+PREMP.OT_HRS as PROD_HRS from PROD PR,PROD_EMP PREMP where PR.PROD_CRNT_DATE = #PROD_CRNT_DATE# and PR.SHIFT_ID = #SHIFT_ID# and PREMP.EMP_ID = #EMP_ID# and PR.PROD_ID = PREMP.PROD_ID and PROD_ISVALID = 1";

    public static final String NONPRODN_HRS_GET_SQL_QUERY = "select NPREMP.DT_HRS+NPREMP.OT_HRS as NPROD_HRS from N_PROD NPR,NPROD_EMP NPREMP where NPR.NPROD_CRNT_DATE =  #PROD_CRNT_DATE# and NPR.SHIFT_ID = #SHIFT_ID# and NPREMP.EMP_ID = #EMP_ID# and NPR.NPROD_ID = NPREMP.NPROD_ID and NPROD_ISVALID = 1";

    public static final String RADLPRODN_HRS_GET_SQL_QUERY = "select RDLEMP.DT_HRS+RDLEMP.OT_HRS as RPROD_HRS from RADL RDL,RADL_EMP RDLEMP where RDL.RADL_CRNT_DATE =  #PROD_CRNT_DATE# and RDL.SHIFT_ID = #SHIFT_ID# and RDLEMP.EMP_ID = #EMP_ID# and RDL.RADL_ID = RDLEMP.RADL_ID and RADL_ISVALID = 1";

    public static final String POP_HRS_GET_SQL_QUERY = "select POPEMP.DT_HRS+POPEMP.OT_HRS as POP_HRS from POP PP,POP_EMP POPEMP where PP.POP_CRNT_DATE = #PROD_CRNT_DATE# and PP.SHIFT_ID = #SHIFT_ID# and POPEMP.EMP_ID = #EMP_ID# and PP.POP_ID = POPEMP.POP_ID and POP_ISVALID = 1";

    public static final String GET_PRODUCTION_JOBDETAILS_BY_WORKORDER = "select DISTINCT WOJH.WOJB_ID,WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,WOJH.WOJB_QTY from WO_HEADER WOH,WO_JB_HEADER WOJH,WO_JB_HSTRY WOJHS where WOH.WO_ID = #WO_ID# AND WOJH.WOJB_ID = WOJHS.WOJB_ID and WOH.WO_ID = WOJH.WO_ID and WOJH.WOJB_STAT IN('O','A') order by JB_NAME,JB_DWG_NO";

    public static final String GET_PRODUCTION_JOBDETAILS_BY_WORKORDER_FOR_REWORK = "select DISTINCT WOJH.WOJB_ID,WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,WOJH.WOJB_QTY from WO_HEADER WOH,WO_JB_HEADER WOJH,WO_JB_HSTRY WOJHS where WOH.WO_ID = #WO_ID# AND WOJH.WOJB_ID = WOJHS.WOJB_ID and WOH.WO_ID = WOJH.WO_ID and WOJH.WOJB_STAT IN('O','A','R')";

    public static final String GET_PENDING_QUANTITY_SNOS = "select WOJBSTAT_SNO from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT IN('O','A')";

    public static final String GET_POSTED_QUANTITY_SNOS = "select WOJBSTAT_SNO from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT IN('C','F')";

    //public static final String GET_UNPOSTED_QUANTITY_SNOS = "select
    // WOJBSTAT_SNO from WO_JB_STAT where WOJB_ID = #WOJB_ID# and
    // WOJBSTAT_SNO_STAT = 'U'";
    public static final String GET_OPNDETAILS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT='O'";

    public static final String GET_OPNDETAILS_FOR_REWORK_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT='R'";

    public static final String GET_PRODUCTION_JOBSTATSNO_SQL_QUERY = "select WOJBSTAT_ID,WOJBSTAT_SNO from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT IN('O','A','R') order by WOJBSTAT_SNO";

    public static final String GET_PENDING_PRODN_JOBSTAT_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '1'";

    public static final String GET_PENDING_PRODN_JOBSTAT_REWORK_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_ID,WOJBOPN_OPN_NAME,WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'R'";

    public static final String GET_PENDING_PRODN_JOBSTAT_OPERATION_SNOS_FOR_REWORK_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'R'";

    public static final String GET_POSTED_PRODN_JOBSTAT_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN  WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('C','P','F') and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '1'";

    public static final String GET_POSTED_PRODN_JOBSTAT_OPERATION_SNOS_FOR_REWORK_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT='F'";

    //public static final String
    // GET_UNPOSTED_PRODN_JOBSTAT_OPERATION_SNOS_SQL_QUERY = "select
    // WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and
    // WOJBOPN_STAT='U'";
    public static final String GET_PROD_DETAILS_SQL_QUERY = "select PR.MC_CDE,PR.PROD_CRNT_DATE,PR.SHIFT_ID,SM.SHIFT_NAME,PR.PROD_WORK_TYP,PR.PROD_INCNTV_FLG,PR.WOJB_ID,WOJHS.WO_NO,WH.WO_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,PR.PROD_QTY_SNOS,PR.PROD_TOT_QTY,PR.PROD_START_OPN,PR.PROD_END_OPN,PR.PROD_STD_HRS,PR.PROD_TOT_HRS,PR.PROD_UPDATE_PYRL,PR.PROD_UPDATE_WO,PR.PROD_POST_FLG,PR.IS_DLTD,PROD_MODIFYCOUNT,PROD_CREATEDBY,PROD_ISVALID,PR.PROD_DATESTAMP from PROD PR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_HEADER WH where PR.PROD_ID = #PROD_ID# and PR.WOJB_ID = WOJHS.WOJB_ID and PR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WO_NO=WH.WO_NO";

    public static final String GET_PROD_EMP_DETAILS_SQL_QUERY = "select PRODEMP.*,EMP.EMP_NAME,EMP.EMP_CDE,EMPTYP.EMP_TYP_NAME,EMPTYP.EMP_TYP_ID from PROD_EMP PRODEMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where PRODEMP.PROD_ID = #PROD_ID# and PRODEMP.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID";

    public static final String GET_ALL_PRODUCTION_DETAILS_FILTER_QUERY = "select rownum r,PROD_ID,MC_CDE,PROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,PROD_TOT_HRS,WO_NO,JB_NAME,PROD_WORK_TYP,PROD_DATESTAMP,PROD_ISVALID from (select  distinct PROD_ID,MC_CDE,PROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,PROD_TOT_HRS, WO_NO,JB_NAME,PROD_WORK_TYP,PROD_DATESTAMP,PROD_ISVALID from(select PROD_ID,MC_CDE,PROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,PROD_TOT_HRS,WO_NO,JB_NAME,PROD_WORK_TYP,PROD_POST_FLG, EMP_NAME, PROD_DATESTAMP,PROD_ISVALID from(select PR.PROD_ID,PR.MC_CDE,PR.PROD_CRNT_DATE,PR.SHIFT_ID,SM.SHIFT_NAME,PR.PROD_TOT_HRS,PR.WOJB_ID,WOJH.WO_ID,WOJHS.WO_NO,WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,PR.PROD_WORK_TYP,PR.PROD_POST_FLG,EM.EMP_NAME, PR.PROD_DATESTAMP,PR.PROD_ISVALID from PROD PR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_JB_HEADER WOJH,PROD_EMP PE,EMP_MSTR EM where PR.WOJB_ID = WOJHS.WOJB_ID and PR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WOJB_ID = WOJH.WOJB_ID and PR.PROD_ID = PE.PROD_ID and PE.EMP_ID = EM.EMP_ID))";

    public static final String PRODN_DETAILS_POST_SQL_QUERY = "update PROD set PROD_POST_FLG = '1',PROD_DATESTAMP = SYSTIMESTAMP where PROD_ID=#PROD_ID#";

    public static final String PRODN_DETAILS_SELECT_SQL_QUERY = "select WOJB_ID,PROD_QTY_SNOS,PROD_TOT_QTY,PROD_START_OPN,PROD_END_OPN,PROD_WORK_TYP from PROD where PROD_ID=#PROD_ID# and PROD_ISVALID = 1";

    public static final String GET_PRODUCTION_DETAILS_SQL_QUERY = "select PR.MC_CDE,PR.PROD_CRNT_DATE,PR.SHIFT_ID,SM.SHIFT_NAME,PR.PROD_WORK_TYP,PR.PROD_INCNTV_FLG,PR.WOJB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,PR.PROD_QTY_SNOS,PR.PROD_TOT_QTY,PR.PROD_START_OPN,PR.PROD_END_OPN,PR.PROD_STD_HRS,PR.PROD_TOT_HRS,PR.PROD_UPDATE_PYRL,PR.PROD_UPDATE_WO,PR.PROD_POST_FLG,PR.IS_DLTD from PROD PR,SHIFT_MSTR SM,WOJB_HSTRY WOJHS where PR.PROD_ID = #PROD_ID# and PR.WOJB_ID = WOJHS.WOJB_ID and PR.SHIFT_ID = SM.SHIFT_ID and PROD_ISVALID = 1";

    public static final String GET_PRODUCTION_EMPLOYEE_DETAILS_SQL_QUERY = "select PREMP.*,EMP.EMP_NAME,EMPTYP.EMP_TYP_NAME from PROD_EMP PREMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where PREMP.PROD_ID = #PROD_ID# and PR.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID";

    public static final String PRODN_EMP_HRS_DELETE_SQL_QUERY = "delete from PROD_EMP where PROD_ID = #PROD_ID#";

    public static final String PRODN_TOT_HRS_SELECT_SQL_QUERY = "select PROD_TOT_HRS from PROD where PROD_ID = #PROD_ID#";

    public static final String PRODN_MC_HRS_REDUCE_SQL_QUERY = "update PROD_ACCNTNG PA SET PROD_HRS = #PROD_HRS# , ISHRS_ACCOUNTED = #ISHRS_ACCOUNTED# where PA.PROD_DATE IN (SELECT PROD_CRNT_DATE FROM PROD WHERE PROD_ID = #PROD_ID#) AND PA.SHIFT_ID IN(SELECT SHIFT_ID FROM PROD WHERE PROD_ID = #PROD_ID#) AND PA.MC_CDE IN (SELECT MC_CDE FROM PROD WHERE PROD_ID = #PROD_ID#)";

    public static final String PRODN_DETAILS_UPDATE_SQL_QUERY = "update PROD set MC_CDE=#MC_CDE#,PROD_CRNT_DATE=#PROD_CRNT_DATE#,SHIFT_ID=#SHIFT_ID#,PROD_WORK_TYP=#PROD_WORK_TYP#,PROD_INCNTV_FLG=#PROD_INCNTV_FLG#,WOJB_ID=#WOJB_ID#,PROD_QTY_SNOS=#PROD_QTY_SNOS#,PROD_TOT_QTY=#PROD_TOT_QTY#,PROD_START_OPN=#PROD_START_OPN#,PROD_END_OPN=#PROD_END_OPN#,PROD_STD_HRS=#PROD_STD_HRS#,PROD_TOT_HRS=#PROD_TOT_HRS#,PROD_UPDATE_PYRL = #PROD_UPDATE_PYRL#,PROD_UPDATE_WO=#PROD_UPDATE_WO#,PROD_POST_FLG=#PROD_POST_FLG#,IS_DLTD=#IS_DLTD#,PROD_CREATEDBY = #PROD_CREATEDBY#,PROD_MODIFYCOUNT = PROD_MODIFYCOUNT + 1,PROD_DATESTAMP = SYSTIMESTAMP where PROD_ID = #PROD_ID# and PROD_ISVALID = 1";

    public static final String PROD_MODIFY_COUNT_SELECT = "select PROD_MODIFYCOUNT from PROD where PROD_ID = #PROD_ID#";

    //public static final String PRODN_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_PROD(PROD_ID,MC_CDE,PROD_CRNT_DATE,SHIFT_ID,PROD_WORK_TYP,PROD_INCNTV_FLG,WOJB_ID,PROD_QTY_SNOS,PROD_TOT_QTY,PROD_START_OPN,PROD_END_OPN,PROD_STD_HRS,PROD_TOT_HRS,PROD_MODIFIEDBY,PROD_MODIFYCOUNT) values(#PROD_ID#,#MC_CDE#,#PROD_CRNT_DATE#,#SHIFT_ID#,#PROD_WORK_TYP#,#PROD_INCNTV_FLG#,#WOJB_ID#,#PROD_QTY_SNOS#,#PROD_TOT_QTY#,#PROD_START_OPN#,#PROD_END_OPN#,#PROD_STD_HRS#,#PROD_TOT_HRS#,#PROD_MODIFIEDBY#,#PROD_MODIFYCOUNT#)";
    public static final String PRODN_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_PROD select * FROM PROD where PROD_ID = #PROD_ID#";

    //public static final String

    public static final String GET_LASTPRODNDATE_SHIFT = "select max(PROD_CRNT_DATE) PROD_CRNT_DATE from (select PROD_CRNT_DATE from PROD where WOJB_ID=#WOJB_ID# union all select RADL_CRNT_DATE from RADL where WOJB_ID = #WOJB_ID#)";

    public static final String GET_UPDATE_LASTPRODNDATE_SHIFT = "select max(PROD_CRNT_DATE) PROD_CRNT_DATE from (select PROD_CRNT_DATE from PROD where WOJB_ID=#WOJB_ID# and PROD_ID != #PROD_ID# union all select RADL_CRNT_DATE from RADL where WOJB_ID = #WOJB_ID#  and RADL_ID != #RADL_ID#)";

    public static final String GET_LAST_PRODN_DATE_FOR_UPDATE_SQL_QUERY = "select PROD_QTY_SNOS,PROD_CRNT_DATE from PROD where WOJB_ID = #WOJB_ID# and PROD_ID != #PROD_ID# union all select RADL_QTY_SNOS,RADL_CRNT_DATE from RADL where WOJB_ID = #WOJB_ID# and RADL_ID != #RADL_ID#";

    public static final String GET_LAST_PRODN_DATE_SQL_QUERY = "select PROD_QTY_SNOS,PROD_CRNT_DATE from PROD where WOJB_ID = #WOJB_ID# union all select RADL_QTY_SNOS,RADL_CRNT_DATE from RADL where WOJB_ID = #WOJB_ID#";

    public static final String SELECT_ALL_EMP_BY_TYPE_SQL_QUERY = "select EMP_ID,EMP_CDE,EMP_NAME from EMP_MSTR where EMP_TYP_ID = #EMP_TYP_ID# and EMP_ISVALID != 0 order by EMP_NAME";

    public static final String WORKORDER_JOBSTATID_SNO_GET_SQL_QUERY = "select WOJBSTAT_ID,WOJBSTAT_SNO from WO_JB_STAT where WOJB_ID =#WOJB_ID#";

    //public static final String PRODN_ENTRY_OPN_STATUS_CHANGE_SQL_QUERY =
    // "update WO_JB_OPN set WOJBOPN_STAT = 'U' where WOJBSTAT_ID =
    // #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#";
    public static final String PRODN_ENTRY_OPN_STATUS_CHECK_SQL_QUERY = "select * from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O'";

    //public static final String
    // PRODN_ENTRY_WOJBSTATSNO_STATUS_CHANGETOU_SQL_QUERY = "update WO_JB_STAT
    // set WOJBSTAT_SNO_STAT = 'U' where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJB_ID
    // = #WOJB_ID#";
    public static final String PRODN_ENTRY_WOJBSTATSNO_STATUS_CHECK_SQL_QUERY = "select * from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT IN('A','O')";

    public static final String VALID_MACHINES_SELECT_SQL_QUERY = "select MC_CDE,MC_NAME from MC_MSTR where MC_ISVALID = 1 order by MC_CDE";

    public static final String VALID_SHIFTS_SELECT_SQL_QUERY = "select SHIFT_ID from SHIFT_MSTR where SHIFT_ISVALID = 1 order by SHIFT_ID";

    public static final String PROD_ACCOUNTING_SELECT_SQL_QUERY = "select count(*) from PROD_ACCNTNG where PROD_DATE = #PROD_CRNT_DATE# and MC_CDE = #MC_CDE# and SHIFT_ID = #SHIFT_ID# and ISHRS_ACCOUNTED = 1";

    public static final String PROD_HRS_SELECT_SQL_QUERY = "select PROD_HRS,NPROD_HRS from PROD_ACCNTNG where PROD_DATE = #PROD_CRNT_DATE# and MC_CDE = #MC_CDE# and SHIFT_ID = #SHIFT_ID#";

    public static final String SHIFT_NAME_SELECT_SQL_QUERY = "select SHIFT_NAME from SHIFT_MSTR where SHIFT_ID = #SHIFT_ID#";

    public static final String CHECK_DAY_IN_BASECAL_TABL_SQL_QUERY = "select count(*) from BASE_CAL where BASE_CAL_STARTDAY <= #DAY# and BASE_CAL_ENDDAY >= #DAY#";

    public static final String MC_TYP_NAME_SELECT_SQL_QUERY = "select MC_TYP_NAME from MC_TYP_MSTR,MC_MSTR where MC_TYP_MSTR.MC_TYP_ID = MC_MSTR.MC_TYP_ID and MC_CDE = #MC_CDE#";

    //public static final String ENTRY_CHECK_IN_ALL_THE_TABLE_SQL_QUERY = "select count(*) from (select PROD_ID from PROD where PROD_CRNT_DATE=#PROD_CRNT_DATE# union all select RADL_ID from RADL where RADL_CRNT_DATE=#PROD_CRNT_DATE# union all select NPROD_ID from N_PROD where NPROD_CRNT_DATE=#PROD_CRNT_DATE# union all select POP_ID from POP where POP_CRNT_DATE=#PROD_CRNT_DATE#)";
    public static final String ENTRY_CHECK_IN_ALL_THE_TABLE_SQL_QUERY = "select count(*) from (select PROD_ID from PROD where PROD_CRNT_DATE=#PROD_CRNT_DATE# union all select RADL_ID from RADL where RADL_CRNT_DATE=#PROD_CRNT_DATE# union all select NPROD_ID from N_PROD where NPROD_CRNT_DATE=#PROD_CRNT_DATE# union all select FPROD_ID from F_PROD where FPROD_CRNT_DATE=#PROD_CRNT_DATE#)";
    public static final String POSTING_CHECK_BY_MACHINE_SQL_QUERY = "select count(*) from PROD where PROD_POST_FLG = '0' and MC_CDE = #MC_CDE# and PROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_RADIAL_MACHINE_SQL_QUERY = "select count(*) from RADL where RADL_POST_FLG = '0' and MC_CDE = #MC_CDE# and RADL_ISVALID = 1";

    public static final String POSTING_CHECK_BY_MACHINE_IN_NPROD_SQL_QUERY = "select count(*) from N_PROD where NPROD_POST_FLG = '0' and MC_CDE = #MC_CDE# and NPROD_ISVALID = 1";

    //public static final String POSTING_CHECK_BY_MACHINE_IN_POP_SQL_QUERY = "select count(*) from POP where POP_POST_FLG = '0' and MC_CDE = #MC_CDE# and POP_ISVALID = 1";

    public static final String POSTING_CHECK_BY_DATE_SQL_QUERY = "select count(*) from PROD where PROD_POST_FLG = '0' and PROD_CRNT_DATE = #PROD_CRNT_DATE# and PROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_RADL_DATE_SQL_QUERY = "select count(*) from RADL where RADL_POST_FLG = '0' and RADL_CRNT_DATE = #PROD_CRNT_DATE# and RADL_ISVALID = 1";

    public static final String POSTING_CHECK_BY_DATE_IN_NPROD_SQL_QUERY = "select count(*) from N_PROD where NPROD_POST_FLG = '0' and NPROD_CRNT_DATE = #PROD_CRNT_DATE# and NPROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_DATE_IN_POP_SQL_QUERY = "select count(*) from POP where POP_POST_FLG = '0' and POP_CRNT_DATE = #PROD_CRNT_DATE# and POP_ISVALID = 1";
    public static final String POSTING_CHECK_BY_DATE_IN_FPROD_SQL_QUERY = "select count(*) from F_PROD where FPROD_POST_FLG = '0' and FPROD_CRNT_DATE = #PROD_CRNT_DATE# and FPROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_MC_AND_DATE_SQL_QUERY = "select count(*) from PROD where PROD_POST_FLG = '0' and PROD_CRNT_DATE = #PROD_CRNT_DATE# and MC_CDE = #MC_CDE# and PROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_RADL_MC_AND_DATE_SQL_QUERY = "select count(*) from RADL where RADL_POST_FLG = '0' and RADL_CRNT_DATE = #PROD_CRNT_DATE# and MC_CDE = #MC_CDE# and RADL_ISVALID = 1";

    public static final String POSTING_CHECK_BY_MC_AND_DATE_IN_NPROD_SQL_QUERY = "select count(*) from N_PROD where NPROD_POST_FLG = '0' and NPROD_CRNT_DATE = #PROD_CRNT_DATE# and MC_CDE = #MC_CDE# and NPROD_ISVALID = 1";

    //public static final String POSTING_CHECK_BY_MC_AND_DATE_IN_POP_SQL_QUERY = "select count(*) from POP where POP_POST_FLG = '0' and POP_CRNT_DATE = #PROD_CRNT_DATE# and MC_CDE = #MC_CDE# and POP_ISVALID = 1";

    public static final String PREDSR_SHIFT_SELECT_SQL_QUERY = "select BASE_CAL_VAR_PREDSRSHIFT from BASE_CAL_VAR where SHIFT_ID = #SHIFT_ID# and BASE_CAL_VAR_DAY = #DAY#";

    public static final String LAST_SHIFT_OF_A_DAY_SELECT_SQL_QUERY = "select max(SHIFT_ID) SHIFT_ID from BASE_CAL_VAR where BASE_CAL_VAR_DAY = #DAY#";

    public static final String LAST_SHIFT_OF_A_DAY_IN_CUSTOM_AVBLTY_SELECT_SQL_QUERY = "select max(SHIFT_ID) from CUSTOM_AVBLTY CA,AVBLTY_MSTR AM where CUSTOM_AVBLTY_FORDATE = #PROD_CRNT_DATE# and CA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE";

    public static final String POSTING_CHECK_BY_DATE_SHIFT_SQL_QUERY = "select count(*) from PROD where PROD_POST_FLG = '0' and PROD_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and PROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_RADL_DATE_SHIFT_SQL_QUERY = "select count(*) from RADL where RADL_POST_FLG = '0' and RADL_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and RADL_ISVALID = 1";

    public static final String POSTING_CHECK_BY_DATE_SHIFT_IN_NPROD_SQL_QUERY = "select count(*) from N_PROD where NPROD_POST_FLG = '0' and NPROD_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and NPROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_DATE_SHIFT_IN_POP_SQL_QUERY = "select count(*) from POP where POP_POST_FLG = '0' and POP_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and POP_ISVALID = 1";
    public static final String POSTING_CHECK_BY_DATE_SHIFT_IN_FPROD_SQL_QUERY = "select count(*) from F_PROD where FPROD_POST_FLG = '0' and FPROD_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and FPROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_MC_DATE_SHIFT_SQL_QUERY = "select count(*) from PROD where PROD_POST_FLG = '0' and PROD_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and MC_CDE = #MC_CDE# and PROD_ISVALID = 1";

    public static final String POSTING_CHECK_BY_MC_RADL_DATE_SHIFT_SQL_QUERY = "select count(*) from RADL where RADL_POST_FLG = '0' and RADL_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and MC_CDE = #MC_CDE# and RADL_ISVALID = 1";

    public static final String POSTING_CHECK_BY_MC_DATE_SHIFT_IN_NPROD_SQL_QUERY = "select count(*) from N_PROD where NPROD_POST_FLG = '0' and NPROD_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and MC_CDE = #MC_CDE# and NPROD_ISVALID = 1";

    //public static final String POSTING_CHECK_BY_MC_DATE_SHIFT_IN_POP_SQL_QUERY = "select count(*) from POP where POP_POST_FLG = '0' and POP_CRNT_DATE = #PROD_CRNT_DATE# and SHIFT_ID = #SHIFT_ID# and MC_CDE = #MC_CDE# and POP_ISVALID = 1";

    public static final String PSTING_RULE_ID_SELECT_SQL_QUERY = "select PSTING_RULE_ID from PSTING_RULE";

    public static final String PREVIOUS_DAY_CHECK_SQL_QUERY = "select count(1) from (select 'X' tmp from PROD where PROD_CRNT_DATE = #PROD_DATE# union all select 'X' tmp from N_PROD where NPROD_CRNT_DATE = #PROD_DATE# union all select 'X' tmp from RADL where RADL_CRNT_DATE = #PROD_DATE# union all select 'X' tmp from POP where POP_CRNT_DATE = #PROD_DATE# union all select 'X' tmp from dual where LOWER(TO_CHAR(#PROD_DATE#,'day')) LIKE '%sunday%')";

    public static final String MIN_REQD_EMPLOYEES_SELECT_SQL_QUERY = "select ETM.EMP_TYP_ID,EMP_TYP_NAME,MIN_RQD_QTY from EMP_TYP_MSTR ETM,TEAM_MSTR TM where ETM.EMP_TYP_ID = TM.EMP_TYP_ID and ETM.EMP_TYP_ISVALID = 1";

    public static final String GET_RWK_JOBSTATSNO_SQL_QUERY = "select WOJBSTAT_ID,WOJBSTAT_SNO from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT in('A','C','R','O','P') order by WOJBSTAT_SNO";

    //public static final String GET_UNPOSTED_PRODN_OPERATION_SNOS_SQL_QUERY =
    // "select WOJBOPN_ID,WOJBOPN_OPN_NAME,WOJBOPN_OPN_SNO from WO_JB_OPN where
    // WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'U'";
    public static final String GET_POSTED_PRODN_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_ID,WOJBOPN_OPN_NAME,WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT in('C','F','P')";

    public static final String GET_OPERATION_SQL_QUERY = "select WOJBOPN_ID,WOJBOPN_OPN_NAME,WOJBOPN_OPN_SNO from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O'";

    public static final String GET_PRODN_DETAILS_SQL_QUERY = "select PROD_ID,PROD_QTY_SNOS,PROD_START_OPN,PROD_END_OPN from PROD where WOJB_ID = #WOJB_ID# and PROD_ISVALID = 1";

    public static final String GET_RADL_DETAILS_SQL_QUERY = "select RADL_ID,RADL_QTY_SNOS,RADL_START_OPN,RADL_END_OPN from RADL where WOJB_ID = #WOJB_ID# and RADL_ISVALID = 1  and RADL_COMPLETION_FLG = '1'";

    public static final String ADD_RWKLOG_DETAILS_SQL_QUERY = "insert into RWK_LOG(RWK_LOG_ID,WOJBOPN_ID,RWK_ID,RWKLOG_AUTHRZDBY,RWK_DATE) values(RWK_LOG_ID.nextval,#WOJBOPN_ID#,#RWK_ID#,#RWKLOG_AUTHRZDBY#,SYSTIMESTAMP)";

    public static final String SELECT_RWKLOGID_SQL_QUERY = "select RWK_LOG_ID.currval RWK_LOG_ID  from dual";

    public static final String GET_EMP_DETAILS_SQL_QUERY = "select EMP_ID from PROD_EMP where PROD_ID = #PROD_ID#";

    public static final String ADD_RWKLOG_EMP_SQL_QUERY = "insert into RWK_LOG_EMP values(#RWK_LOG_ID#,#EMP_ID#)";

    public static final String GET_RADL_EMP_DETAILS_SQL_QUERY = "select EMP_ID from RADL_EMP where RADL_ID = #RADL_ID#";

    public static final String GET_QUANTITY_SNOS = "select WOJBSTAT_ID,WOJBSTAT_SNO from WO_JB_STAT where WOJB_ID = #WOJB_ID# and WOJBSTAT_SNO_STAT IN('O','A','R')";

    public static final String GET_PRODDETAILS_SQL_QUERY = "select PROD_ID,PROD_QTY_SNOS,PROD_START_OPN,PROD_END_OPN from PROD where WOJB_ID = #WOJB_ID# and PROD_POST_FLG ='0' and PROD_ISVALID = 1 and PROD_WORK_TYP = 'N'";

    public static final String GET_REWORK_PRODDETAILS_SQL_QUERY = "select PROD_ID,PROD_QTY_SNOS,PROD_START_OPN,PROD_END_OPN from PROD where WOJB_ID = #WOJB_ID# and PROD_POST_FLG ='0' and PROD_ISVALID = 1 and PROD_WORK_TYP = 'R'";

    public static final String GET_RADL_PRODDETAILS_SQL_QUERY = "select RADL_ID,RADL_QTY_SNOS,RADL_START_OPN,RADL_END_OPN from RADL where WOJB_ID = #WOJB_ID# and RADL_POST_FLG ='0' and RADL_ISVALID = 1 and RADL_WORK_TYP = 'N' and RADL_COMPLETION_FLG = '1'";
    
    

    public static final String GET_REWORK_RADL_PRODDETAILS_SQL_QUERY = "select RADL_ID,RADL_QTY_SNOS,RADL_START_OPN,RADL_END_OPN from RADL where WOJB_ID = #WOJB_ID# and RADL_POST_FLG ='0' and RADL_ISVALID = 1 and RADL_WORK_TYP = 'R' and RADL_COMPLETION_FLG = '1'";

    public static final String GET_PRODDETAILS_FOR_REWORK_SQL_QUERY = "select PROD_ID,PROD_QTY_SNOS,PROD_START_OPN,PROD_END_OPN from PROD where WOJB_ID = #WOJB_ID# and PROD_POST_FLG ='0' and PROD_ISVALID = 1 and PROD_WORK_TYP = 'R'";

    public static final String GET_RADL_PRODDETAILS_FOR_REWORK_SQL_QUERY = "select RADL_ID,RADL_QTY_SNOS,RADL_START_OPN,RADL_END_OPN from RADL where WOJB_ID = #WOJB_ID# and RADL_POST_FLG ='0' and RADL_ISVALID = 1 and RADL_WORK_TYP = 'R' and RADL_COMPLETION_FLG = '1'";

    public static final String GET_PRODDETAILS_FOR_UPDATE_SQL_QUERY = "select PROD_ID,PROD_QTY_SNOS,PROD_START_OPN,PROD_END_OPN from PROD where WOJB_ID = #WOJB_ID# and PROD_POST_FLG ='0' and PROD_ID !=#PROD_ID# and PROD_ISVALID = 1 and PROD_WORK_TYP = 'N'";
    
    

    public static final String GET_RADL_PRODDETAILS_FOR_UPDATE_SQL_QUERY = "select RADL_ID,RADL_QTY_SNOS,RADL_START_OPN,RADL_END_OPN from RADL where WOJB_ID = #WOJB_ID# and RADL_POST_FLG ='0' and RADL_ID !=#RADL_ID# and RADL_ISVALID = 1 and RADL_WORK_TYP = 'N' and RADL_COMPLETION_FLG = '1'";

    public static final String GET_REWORK_UPDATE_PRODDETAILS_SQL_QUERY = "select PROD_ID,PROD_QTY_SNOS,PROD_START_OPN,PROD_END_OPN from PROD where WOJB_ID = #WOJB_ID# and PROD_POST_FLG ='0' and PROD_ID !=#PROD_ID# and PROD_ISVALID = 1 and PROD_WORK_TYP = 'R'";

    public static final String GET_REWORK_UPDATE_RADL_PRODDETAILS_SQL_QUERY = "select RADL_ID,RADL_QTY_SNOS,RADL_START_OPN,RADL_END_OPN from RADL where WOJB_ID = #WOJB_ID# and RADL_POST_FLG ='0' and RADL_ID !=#RADL_ID# and RADL_ISVALID = 1 and RADL_WORK_TYP = 'R' and RADL_COMPLETION_FLG = '1'";

    public static final String CHECK_PROD_FOR_MODIFY_SQL_QUERY = "select count(*) from prod where PROD_ID = #PROD_ID# and PROD_POST_FLG = '0'";

    public static final String CHECK_RADL_FOR_MODIFY_SQL_QUERY = "select count(*) from radl where RADL_ID = #RADL_ID# and RADL_POST_FLG = '0'";

    public static final String CHECK_POP_FOR_MODIFY_SQL_QUERY = "select count(*) from pop where POP_ID = #POP_ID# and POP_POST_FLG = '0'";

    public static final String CHECK_NPROD_FOR_MODIFY_SQL_QUERY = "select count(*) from n_prod where NPROD_ID = #NPROD_ID# and NPROD_POST_FLG = '0'";

    public static final String PROD_MAKE_VALID_SQL_QUERY = "update PROD set PROD_ISVALID = 1,PROD_DATESTAMP=SYSTIMESTAMP where PROD_ID = #PROD_ID#";

    public static final String PROD_MAKE_INVALID_SQL_QUERY = "update PROD set PROD_ISVALID = 0,PROD_DATESTAMP=SYSTIMESTAMP where PROD_ID = #PROD_ID#";

    public static final String CHANGE_POSTING_RULE_SQL_QUERY = "update PSTING_RULE set PSTING_RULE_ID = #PSTING_RULE_ID#";

    public static final String CHECK_POSTING_SQL_QUERY = "select count(*) from(select PROD_ID from PROD where PROD_POST_FLG = '0' union all select RADL_ID from RADL where RADL_POST_FLG = '0' union all select NPROD_ID from N_PROD where NPROD_POST_FLG = '0' union all select POP_ID from POP where POP_POST_FLG = '0')";

    public static final String SELECT_POSTING_RULE_DETAILS_SQL_QUERY = "select PSTING_RULE_ID,PSTING_RULE_DESC from PSTING_RULE_MSTR order by PSTING_RULE_ID";

    public static final String CURRENT_POSTING_RULE_ID_SELECT_SQL_QUERY = "select PSTING_RULE_ID from PSTING_RULE";

    //	NON-PRODUCTION//

	public static final String NPRODN_TOT_HRS_SELECT_SQL_QUERY = "select NPROD_TOT_HRS from N_PROD where NPROD_ID = #NPROD_ID#";
    public static final String NPROD_MAKE_VALID_SQL_QUERY = "update N_PROD set NPROD_ISVALID = 1,NPROD_DATESTAMP=SYSTIMESTAMP where NPROD_ID = #NPROD_ID#";

    public static final String NPROD_MAKE_INVALID_SQL_QUERY = "update N_PROD set NPROD_ISVALID = 0,NPROD_DATESTAMP=SYSTIMESTAMP where NPROD_ID = #NPROD_ID#";

    public static final String NONPRODN_DETAILS_ADD_SQL_QUERY = "insert into N_PROD(NPROD_ID,NPROD_CRNT_DATE,SHIFT_ID,MC_CDE,NPROD_IDL_BRKDWN,RSN_ID,NPROD_TOT_HRS,NPROD_CREATEDBY) values(NPROD_ID.nextval,#NPROD_CRNT_DATE#,#SHIFT_ID#,#MC_CDE#,#NPROD_IDL_BRKDWN#,#RSN_ID#,#NPROD_TOT_HRS#,#NPROD_CREATEDBY#)";

    //public static final String NPRODN_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_N_PROD(NPROD_ID,NPROD_CRNT_DATE,SHIFT_ID,MC_CDE,NPROD_IDL_BRKDWN,RSN_ID,NPROD_TOT_HRS,NPROD_MODIFIEDBY,NPROD_MODIFYCOUNT) values(#NPROD_ID#,#NPROD_CRNT_DATE#,#SHIFT_ID#,#MC_CDE#,#NPROD_IDL_BRKDWN#,#RSN_ID#,#NPROD_TOT_HRS#,#NPROD_MODIFIEDBY#,#NPROD_MODIFYCOUNT#)";
    public static final String NPRODN_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_N_PROD select * from N_PROD where NPROD_ID = #NPROD_ID#";

    public static final String NPROD_MODIFY_COUNT_SELECT = "select NPROD_MODIFYCOUNT from N_PROD where NPROD_ID = #NPROD_ID#";

    public static final String NONPROD_ID_SELECT_SQL_QUERY = "select NPROD_ID.currval from dual";

    public static final String NPRODN_EMPHRS_ADD_SQL_QUERY = "insert into NPROD_EMP values(#NPROD_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#NPROD_MODIFYCOUNT#)";

    //public static final String LOG_NPRODN_EMPHRS_ADD_SQL_QUERY = "insert into LOG_NPROD_EMP values(#NPROD_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#NPROD_MODIFYCOUNT#)";
    public static final String LOG_NPRODN_EMPHRS_ADD_SQL_QUERY = "insert into LOG_NPROD_EMP select * from NPROD_EMP where NPROD_ID = #NPROD_ID#";

    public static final String NPRODN_EMP_HRS_DELETE_SQL_QUERY = "delete from NPROD_EMP where NPROD_ID = #NPROD_ID#";

    public static final String NPRODN_MC_HRS_REDUCE_SQL_QUERY = "update PROD_ACCNTNG PA set NPROD_HRS = NPROD_HRS-#NPROD_HRS#,ISHRS_ACCOUNTED=#ISHRS_ACCOUNTED# where PA.PROD_DATE IN (SELECT NPROD_CRNT_DATE FROM N_PROD WHERE NPROD_ID = #NPROD_ID#) AND PA.SHIFT_ID IN(SELECT SHIFT_ID FROM N_PROD WHERE NPROD_ID = #NPROD_ID#) AND PA.MC_CDE IN (SELECT MC_CDE FROM N_PROD WHERE NPROD_ID = #NPROD_ID#)";

    public static final String NPRODN_DETAILS_UPDATE_SQL_QUERY = "update N_PROD set MC_CDE =#MC_CDE#,NPROD_CRNT_DATE = #NPROD_CRNT_DATE#,SHIFT_ID=#SHIFT_ID#,NPROD_IDL_BRKDWN = #NPROD_IDL_BRKDWN#,RSN_ID = #RSN_ID#,NPROD_TOT_HRS = #NPROD_TOT_HRS#,NPROD_CREATEDBY = #NPROD_CREATEDBY#,NPROD_MODIFYCOUNT = NPROD_MODIFYCOUNT + 1,NPROD_DATESTAMP=SYSTIMESTAMP where NPROD_ID = #NPROD_ID# and NPROD_ISVALID = 1";

    public static final String GET_NPROD_DETAILS_SQL_QUERY = "select NPROD.*,SM.SHIFT_NAME,IDLBRKDWN.RSN from N_PROD NPROD,SHIFT_MSTR SM,IDL_BRKDWN_RSN IDLBRKDWN where NPROD.NPROD_ID = #NPROD_ID# and NPROD.SHIFT_ID = SM.SHIFT_ID and IDLBRKDWN.RSN_ID = NPROD.RSN_ID and NPROD_ISVALID = 1";

    public static final String GET_NPROD_EMP_DETAILS_SQL_QUERY = "select NPRODEMP.*,EMP.EMP_CDE,EMP.EMP_NAME,EMPTYP.EMP_TYP_NAME,EMPTYP.EMP_TYP_ID from NPROD_EMP NPRODEMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where NPRODEMP.NPROD_ID = #NPROD_ID# and NPRODEMP.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID";

    public static final String GET_ALL_NON_PRODUCTION_DETAILS_FILTER_QUERY = "select rownum r,NPROD_ID,MC_CDE,NPROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,NPROD_TOT_HRS,NPROD_IDL_BRKDWN,NPROD_DATESTAMP,NPROD_ISVALID from	(select distinct NPROD_ID,MC_CDE,NPROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,NPROD_TOT_HRS, NPROD_IDL_BRKDWN,NPROD_POST_FLG,NPROD_DATESTAMP,NPROD_ISVALID from (select NPROD_ID,MC_CDE,NPROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,NPROD_TOT_HRS, NPROD_IDL_BRKDWN,NPROD_POST_FLG, EMP_NAME, NPROD_DATESTAMP,NPROD_ISVALID from (select NPROD.NPROD_ID,NPROD.MC_CDE,NPROD.NPROD_CRNT_DATE,NPROD.SHIFT_ID,SM.SHIFT_NAME,NPROD_TOT_HRS, NPROD.NPROD_IDL_BRKDWN,NPROD.NPROD_POST_FLG,EM.EMP_NAME, NPROD.NPROD_DATESTAMP,NPROD.NPROD_ISVALID from N_PROD NPROD,SHIFT_MSTR SM,IDL_BRKDWN_RSN IDLBRKDWN, NPROD_EMP NPE, EMP_MSTR EM where NPROD.SHIFT_ID = SM.SHIFT_ID and NPROD.NPROD_ID = NPE.NPROD_ID and NPE.EMP_ID = EM.EMP_ID))";

    public static final String PRODN_ACCNTNG_UPDATE_BY_NPRODHRS_SQL_QUERY = "update PROD_ACCNTNG set NPROD_HRS = NPROD_HRS + #NPROD_HRS#,ISHRS_ACCOUNTED=#ISHRS_ACCOUNTED# where MC_CDE=#MC_CDE# and SHIFT_ID=#SHIFT_ID# and PROD_DATE=#PROD_DATE#";

    public static final String PRODN_ACCNTNG_NPRODHRS_ADD_SQL_QUERY = "insert into PROD_ACCNTNG(MC_CDE,PROD_DATE,SHIFT_ID,NPROD_HRS,ISHRS_ACCOUNTED) values(#MC_CDE#,#PROD_DATE#,#SHIFT_ID#,#NPROD_HRS#,#ISHRS_ACCOUNTED#)";

    public static final String ALL_IDLBRKDWN_REASON_SELECT_SQL_QUERY = "select RSN_ID,RSN from IDL_BRKDWN_RSN order by RSN";

    //RADL-PRODUCTION//
    public static final String RADL_PRODN_MC_HRS_REDUCE_SQL_QUERY = "update PROD_ACCNTNG PA SET PROD_HRS = #PROD_HRS# , ISHRS_ACCOUNTED = #ISHRS_ACCOUNTED# where PA.PROD_DATE IN (SELECT RADL_CRNT_DATE FROM RADL WHERE RADL_ID = #RADL_ID#) AND PA.SHIFT_ID IN(SELECT SHIFT_ID FROM RADL WHERE RADL_ID = #RADL_ID#) AND PA.MC_CDE IN (SELECT MC_CDE FROM RADL WHERE RADL_ID = #RADL_ID#)";
    public static final String RADL_MODIFY_COUNT_SELECT = "select RADL_MODIFYCOUNT from RADL where RADL_ID = #RADL_ID#";

    public static final String RADL_PRODN_DETAILS_UPDATE_SQL_QUERY = "update RADL set MC_CDE = #MC_CDE#,RADL_CRNT_DATE = #RADL_CRNT_DATE#,SHIFT_ID = #SHIFT_ID#,RADL_WORK_TYP = #RADL_WORK_TYP#,RADL_INCNTV_FLG = #RADL_INCNTV_FLG#,WOJB_ID = #WOJB_ID#,RADL_QTY_SNOS = #RADL_QTY_SNOS#,RADL_TOT_QTY = #RADL_TOT_QTY#,RADL_START_OPN = #RADL_START_OPN#,RADL_END_OPN = #RADL_END_OPN#,RADL_STD_HRS = #RADL_STD_HRS#,RADL_TOT_HRS = #RADL_TOT_HRS#,RADL_MATL_TYP_ID = #RADL_MATL_TYP_ID#,RADL_DMTR = #RADL_DMTR#,RADL_LENGTH = #RADL_LENGTH#,RADL_NO_OF_HOLES = #RADL_NO_OF_HOLES#,RADL_PRDMTR = #RADL_PRDMTR#,RADL_COMPLETION_FLG = #RADL_COMPLETION_FLG#,RADL_UPDATE_PYRL = #RADL_UPDATE_PYRL#,RADL_UPDATE_WO = #RADL_UPDATE_WO#,RADL_POST_FLG = #RADL_POST_FLG#,IS_DLTD = #IS_DLTD#,RADL_CREATEDBY = #RADL_CREATEDBY#, RADL_MODIFYCOUNT = RADL_MODIFYCOUNT + 1,RADL_DATESTAMP = SYSTIMESTAMP where RADL_ID = #RADL_ID# and RADL_ISVALID = 1";

    public static final String RADL_PRODN_EMP_HRS_DELETE_SQL_QUERY = "delete from RADL_EMP where RADL_ID = #RADL_ID#";

    public static final String RADL_PRODN_TOT_HRS_SELECT_SQL_QUERY = "select RADL_TOT_HRS from RADL where RADL_ID = #RADL_ID#";

    public static final String RADL_MAKE_VALID_SQL_QUERY = "update RADL set RADL_ISVALID = 1,RADL_DATESTAMP=SYSTIMESTAMP where RADL_ID = #RADL_ID#";

    public static final String RADL_MAKE_INVALID_SQL_QUERY = "update RADL set RADL_ISVALID = 0,RADL_DATESTAMP=SYSTIMESTAMP where RADL_ID = #RADL_ID#";

//    public static final String RADL_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_RADL(RADL_ID,MC_CDE,RADL_CRNT_DATE,SHIFT_ID,RADL_WORK_TYP,RADL_INCNTV_FLG,WOJB_ID,RADL_QTY_SNOS,RADL_TOT_QTY,RADL_START_OPN,RADL_END_OPN,RADL_STD_HRS,RADL_TOT_HRS,RADL_MATL_TYP_ID,RADL_DMTR,RADL_LENGTH,RADL_NO_OF_HOLES,RADL_PRDMTR,RADL_COMPLETION_FLG,RADL_MODIFIEDBY,RADL_MODIFYCOUNT) values(#RADL_ID#,#MC_CDE#,#RADL_CRNT_DATE#,#SHIFT_ID#,#RADL_WORK_TYP#,#RADL_INCNTV_FLG#,#WOJB_ID#,#RADL_QTY_SNOS#,#RADL_TOT_QTY#,#RADL_START_OPN#,#RADL_END_OPN#,#RADL_STD_HRS#,#RADL_TOT_HRS#,#RADL_MATL_TYP_ID#,#RADL_DMTR#,#RADL_LENGTH#,#RADL_NO_OF_HOLES#,#RADL_PRDMTR#,#RADL_COMPLETION_FLG#,#RADL_MODIFIEDBY#,#RADL_MODIFYCOUNT#)";
    public static final String RADL_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_RADL select * from RADL where RADL_ID = #RADL_ID#";

    public static final String RADL_PRODN_DETAILS_ADD_SQL_QUERY = "insert into RADL(RADL_ID,MC_CDE,RADL_CRNT_DATE,SHIFT_ID,RADL_WORK_TYP,RADL_INCNTV_FLG,WOJB_ID,RADL_QTY_SNOS,RADL_TOT_QTY,RADL_START_OPN,RADL_END_OPN,RADL_STD_HRS,RADL_TOT_HRS,RADL_MATL_TYP_ID,RADL_DMTR,RADL_LENGTH,RADL_NO_OF_HOLES,RADL_PRDMTR,RADL_COMPLETION_FLG,RADL_CREATEDBY) values(RADL_ID.nextval,#MC_CDE#,#RADL_CRNT_DATE#,#SHIFT_ID#,#RADL_WORK_TYP#,#RADL_INCNTV_FLG#,#WOJB_ID#,#RADL_QTY_SNOS#,#RADL_TOT_QTY#,#RADL_START_OPN#,#RADL_END_OPN#,#RADL_STD_HRS#,#RADL_TOT_HRS#,#RADL_MATL_TYP_ID#,#RADL_DMTR#,#RADL_LENGTH#,#RADL_NO_OF_HOLES#,#RADL_PRDMTR#,#RADL_COMPLETION_FLG#,#RADL_CREATEDBY#)";

    public static final String RADL_PRODN_EMPHRS_ADD_SQL_QUERY = "insert into RADL_EMP values(#RADL_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#INCNTV_SLRY_HRS#,#RADL_MODIFYCOUNT#)";

    //public static final String LOG_RADL_EMPHRS_ADD_SQL_QUERY = "insert into LOG_RADL_EMP values(#RADL_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#INCNTV_SLRY_HRS#,#RADL_MODIFYCOUNT#)";
    public static final String LOG_RADL_EMPHRS_ADD_SQL_QUERY = "insert into LOG_RADL_EMP select * from RADL_EMP where RADL_ID = #RADL_ID#";

    public static final String UNPOSTED_RADLPROD_ID_SELECT_SQL_QUERY = "select RAD.*,SM.SHIFT_NAME from RADL RAD,SHIFT_MSTR SM where RADL_CRNT_DATE between #FROM_DATE# and #TO_DATE# and RADL_POST_FLG = '0' and SM.SHIFT_ID = RAD.SHIFT_ID and RADL_ISVALID = 1";

    public static final String RADL_PRODN_DETAILS_POST_SQL_QUERY = "update RADL set RADL_POST_FLG = '1',RADL_DATESTAMP=SYSTIMESTAMP where RADL_ID=#RADL_ID# and RADL_ISVALID = 1";

    public static final String RADL_PRODN_DETAILS_SELECT_SQL_QUERY = "select WOJB_ID,RADL_QTY_SNOS,RADL_TOT_QTY,RADL_START_OPN,RADL_END_OPN,RADL_WORK_TYP,RADL_COMPLETION_FLG from RADL where RADL_ID=#RADL_ID# and RADL_ISVALID = 1";

    public static final String GET_ALL_RADIAL_PRODUCTION_DETAILS_FILTER_QUERY = "select rownum r,RADL_ID,MC_CDE,RADL_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,RADL_DATESTAMP,RADL_ISVALID from(select RADL_ID,MC_CDE,RADL_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,RADL_POST_FLG,RADL_DATESTAMP,RADL_ISVALID from(select RD.RADL_ID,RD.MC_CDE,RD.RADL_CRNT_DATE,RD.SHIFT_ID,SM.SHIFT_NAME,RD.WOJB_ID,WOJH.WO_ID,WOJHS.WO_NO,WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,RD.RADL_POST_FLG,RD.RADL_DATESTAMP,RD.RADL_ISVALID from RADL RD,WO_JB_HSTRY WOJHS,SHIFT_MSTR SM,WO_JB_HEADER WOJH where RD.WOJB_ID = WOJHS.WOJB_ID and WOJHS.WOJB_ID = WOJH.WOJB_ID and RD.SHIFT_ID = SM.SHIFT_ID)";

    public static final String GET_RADL_MATL_TYPE_LIST = "select RADL_MATL_TYP_ID,RADL_MATL_TYP from RADL_MATL_TYP_MSTR order by RADL_MATL_TYP";

    public static final String RADL_ID_SELECT_SQL_QUERY = "select RADL_ID.currval from dual";

    public static final String GET_RADL_PROD_DETAILS_SQL_QUERY = "select PR.*,SM.SHIFT_NAME,WOJHS.WO_NO,WH.WO_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP from RADL PR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_HEADER WH where PR.RADL_ID = #RADL_ID# and PR.WOJB_ID = WOJHS.WOJB_ID and PR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WO_NO=WH.WO_NO";

    //POP//
    public static final String POP_MODIFY_COUNT_SELECT = "select POP_MODIFYCOUNT from POP where POP_ID = #POP_ID#";

    public static final String POP_DETAILS_ADD_SQL_QUERY = "insert into POP(POP_ID,POP_CRNT_DATE,SHIFT_ID,POP_RSN,POP_UPDATE_PYRL,POP_POST_FLG,IS_DLTD,POP_CREATEDBY) values(POP_ID.nextval,#POP_CRNT_DATE#,#SHIFT_ID#,#POP_RSN#,#POP_UPDATE_PYRL#,#POP_POST_FLG#,#IS_DLTD#,#POP_CREATEDBY#)";

    //public static final String POP_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_POP(POP_ID,MC_CDE,POP_CRNT_DATE,SHIFT_ID,POP_RSN,POP_UPDATE_PYRL,POP_POST_FLG,IS_DLTD,POP_MODIFIEDBY,POP_MODIFYCOUNT) values(#POP_ID#,#MC_CDE#,#POP_CRNT_DATE#,#SHIFT_ID#,#POP_RSN#,#POP_UPDATE_PYRL#,#POP_POST_FLG#,#IS_DLTD#,#POP_MODIFIEDBY#,#POP_MODIFYCOUNT#)";
    public static final String POP_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_POP select * from POP where POP_ID = #POP_ID#";

    public static final String POPID_SELECT_SQL_QUERY = "select POP_ID.currval from dual";

    public static final String POP_EMPHRS_ADD_SQL_QUERY = "insert into POP_EMP values(#POP_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#POP_MODIFYCOUNT#)";

    //public static final String LOG_POP_EMPHRS_ADD_SQL_QUERY = "insert into LOG_POP_EMP values(#POP_ID#,#EMP_ID#,#DT_HRS#,#OT_HRS#,#DT_SLRY_HRS#,#OT_SLRY_HRS#,#POP_MODIFYCOUNT#)";
    public static final String LOG_POP_EMPHRS_ADD_SQL_QUERY = "insert into LOG_POP_EMP select * from POP_EMP where POP_ID = #POP_ID#";

    public static final String POP_EMP_HRS_DELETE_SQL_QUERY = "delete from POP_EMP where POP_ID = #POP_ID#";

    public static final String POP_DETAILS_UPDATE_SQL_QUERY = "update POP set POP_CRNT_DATE = #POP_CRNT_DATE#,SHIFT_ID = #SHIFT_ID#,POP_RSN = #POP_RSN#,POP_UPDATE_PYRL = #POP_UPDATE_PYRL#,POP_POST_FLG = #POP_POST_FLG#,IS_DLTD = #IS_DLTD#,POP_CREATEDBY = #POP_CREATEDBY#,POP_MODIFYCOUNT = POP_MODIFYCOUNT + 1,POP_DATESTAMP=SYSTIMESTAMP where POP_ID = #POP_ID# and POP_ISVALID = 1";

    public static final String GET_POP_DETAILS_SQL_QUERY = "select PP.*,SM.SHIFT_NAME from POP PP,SHIFT_MSTR SM where PP.POP_ID = #POP_ID# and PP.SHIFT_ID = SM.SHIFT_ID and POP_ISVALID = 1";

    public static final String GET_POP_EMP_DETAILS_SQL_QUERY = "select POPEMP.*,EMP.EMP_CDE,EMP.EMP_NAME,EMPTYP.EMP_TYP_NAME,EMPTYP.EMP_TYP_ID from POP_EMP POPEMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where POP_ID = #POP_ID# and POPEMP.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID";

    public static final String GET_ALL_POP_DETAILS_FILTER_QUERY = "select rownum r,POP_ID,POP_CRNT_DATE,SHIFT_ID,SHIFT_NAME,POP_RSN,POP_ISVALID,POP_DATESTAMP from(select distinct POP_ID,POP_CRNT_DATE,SHIFT_ID,SHIFT_NAME,POP_RSN,POP_POST_FLG,POP_ISVALID,POP_DATESTAMP from (select POP_ID,POP_CRNT_DATE,SHIFT_ID,SHIFT_NAME,POP_RSN,POP_POST_FLG,POP_ISVALID, EMP_NAME, POP_DATESTAMP from(select PP.POP_ID,PP.POP_CRNT_DATE,PP.SHIFT_ID,SM.SHIFT_NAME,PP.POP_RSN,PP.POP_POST_FLG,PP.POP_ISVALID, EM.EMP_NAME, PP.POP_DATESTAMP from POP PP,SHIFT_MSTR SM, POP_EMP PE, EMP_MSTR EM where PP.SHIFT_ID = SM.SHIFT_ID AND PP.POP_ID = PE.POP_ID AND PE.EMP_ID = EM.EMP_ID))";

    public static final String UNPOSTED_POP_DETAILS_SELECT_SQL_QUERY = "select PP.POP_ID,PP.POP_CRNT_DATE,PP.SHIFT_ID,PP.POP_RSN,SM.SHIFT_NAME from POP PP,SHIFT_MSTR SM where PP.POP_CRNT_DATE >= #FROM_DATE# and PP.POP_CRNT_DATE <= #TO_DATE# and PP.POP_POST_FLG = '0' and PP.SHIFT_ID = SM.SHIFT_ID and POP_ISVALID != 0";

    public static final String UNPOSTED_POP_EMP_DETAILS_SELECT_SQL_QUERY = "select POPEMP.POP_ID,POPEMP.EMP_ID,EMP.EMP_NAME,EMPTYP.EMP_TYP_NAME,POPEMP.DT_HRS,POPEMP.OT_HRS from POP_EMP POPEMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where POPEMP.POP_ID = #POP_ID# and POPEMP.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID";

    public static final String POST_POP_DETAILS_SQL_QUERY = "update POP set POP_POST_FLG = '1',POP_DATESTAMP=SYSTIMESTAMP where POP_ID = #POP_ID# and POP_ISVALID = 1";

    public static final String POP_MAKE_VALID_SQL_QUERY = "update POP set POP_ISVALID = 1,POP_DATESTAMP=SYSTIMESTAMP where POP_ID = #POP_ID#";

    public static final String POP_MAKE_INVALID_SQL_QUERY = "update POP set POP_ISVALID = 0,POP_DATESTAMP=SYSTIMESTAMP where POP_ID = #POP_ID# and POP_ISVALID = 1";

    public static final String GET_ALL_REWORK_DETAILS_FILTER_QUERY = "select rownum r,RWK_LOG_ID,RWK_CATEGORY,RWK_RSN,WO_NO,JB_NAME,RWK_DATE,RWKLOG_DATESTAMP,RWKLOG_ISVALID from(select RWK_LOG_ID,RWK_CATEGORY,RWK_RSN,WO_NO,JB_NAME,RWK_DATE,RWKLOG_DATESTAMP,RWKLOG_ISVALID  from(select distinct RL.RWK_LOG_ID,RC.RWK_CATEGORY,RM.RWK_RSN,WOJHS.WO_NO,WOJHS.JB_NAME,RL.RWK_DATE,RL.RWKLOG_DATESTAMP,RL.RWKLOG_ISVALID  from RWK_LOG RL,RWK_MSTR RM,RWK_CATEGORY RC,WO_JB_OPN WOJO,WO_JB_STAT WOJS,WO_JB_HSTRY WOJHS where RL.RWK_ID = RM.RWK_ID and RM.RWK_CATEGORY_ID = RC.RWK_CATEGORY_ID and RL.WOJBOPN_ID = WOJO.WOJBOPN_ID and WOJO.WOJBSTAT_ID = WOJS.WOJBSTAT_ID and WOJS.WOJB_ID = WOJHS.WOJB_ID)";

    public static final String GET_RADL_PROD_EMP_DETAILS_SQL_QUERY = "select RADLEMP.*,EMP.EMP_CDE,EMP.EMP_NAME,EMPTYP.EMP_TYP_NAME,EMPTYP.EMP_TYP_ID from RADL_EMP RADLEMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where RADLEMP.RADL_ID = #RADL_ID# and RADLEMP.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID";

    
    
    /////FINAL - PRODUCTION
    
    public static final String FINAL_PRODN_DETAILS_ADD_SQL_QUERY = "insert into F_PROD(FPROD_ID,FPROD_CRNT_DATE,SHIFT_ID,WOJB_ID,FPROD_QTY_SNOS,FPROD_TOT_QTY,FPROD_START_OPN,FPROD_END_OPN,FPROD_TOT_HRS,FPROD_CREATEDBY) values(FPROD_ID.nextval,#FPROD_CRNT_DATE#,#SHIFT_ID#,#WOJB_ID#,#FPROD_QTY_SNOS#,#FPROD_TOT_QTY#,#FPROD_START_OPN#,#FPROD_END_OPN#,#FPROD_TOT_HRS#,#FPROD_CREATEDBY#)";
    public static final String FPROD_ID_SELECT_SQL_QUERY = "select FPROD_ID.currval from dual";
    public static final String FINAL_PRODN_EMPHRS_ADD_SQL_QUERY = "insert into FPROD_EMP values(#FPROD_ID#,#EMP_ID#,#FPROD_MODIFYCOUNT#)";
    public static final String LOG_FINAL_PRODN_EMPHRS_ADD_SQL_QUERY = "insert into LOG_FPROD_EMP select * from FPROD_EMP where FPROD_ID = #FPROD_ID#";
    public static final String FINAL_PRODN_EMP_HRS_DELETE_SQL_QUERY = "delete from FPROD_EMP where FPROD_ID = #FPROD_ID#";
    
    public static final String CHECK_FPROD_FOR_MODIFY_SQL_QUERY = "select count(*) from F_PROD where FPROD_ID = #FPROD_ID# and FPROD_POST_FLG = '0'";
    
    public static final String FINAL_PRODN_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_F_PROD select * FROM F_PROD where FPROD_ID = #FPROD_ID#";
    public static final String FINAL_PRODN_DETAILS_UPDATE_SQL_QUERY = "update F_PROD set FPROD_CRNT_DATE=#FPROD_CRNT_DATE#,SHIFT_ID=#SHIFT_ID#,WOJB_ID=#WOJB_ID#,FPROD_QTY_SNOS=#FPROD_QTY_SNOS#,FPROD_TOT_QTY=#FPROD_TOT_QTY#,FPROD_START_OPN=#FPROD_START_OPN#,FPROD_END_OPN=#FPROD_END_OPN#,FPROD_TOT_HRS = #FPROD_TOT_HRS#,FPROD_POST_FLG=#FPROD_POST_FLG#,FPROD_CREATEDBY = #FPROD_CREATEDBY#,FPROD_MODIFYCOUNT = FPROD_MODIFYCOUNT + 1,FPROD_DATESTAMP = SYSTIMESTAMP where FPROD_ID = #FPROD_ID# and FPROD_ISVALID = 1";
    public static final String FINAL_PROD_MODIFY_COUNT_SELECT = "select FPROD_MODIFYCOUNT from F_PROD where FPROD_ID = #FPROD_ID#";
    
    public static final String GET_FINAL_PROD_DETAILS_SQL_QUERY = "select FPR.FPROD_CRNT_DATE,FPR.SHIFT_ID,SM.SHIFT_NAME,FPR.WOJB_ID,WOJHS.WO_NO,WH.WO_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,FPR.FPROD_QTY_SNOS,FPR.FPROD_TOT_QTY,FPR.FPROD_START_OPN,FPR.FPROD_END_OPN,FPR.FPROD_TOT_HRS,FPR.FPROD_POST_FLG,FPROD_MODIFYCOUNT,FPROD_CREATEDBY,FPROD_ISVALID,FPR.FPROD_DATESTAMP from F_PROD FPR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_HEADER WH where FPR.FPROD_ID = #FPROD_ID# and FPR.WOJB_ID = WOJHS.WOJB_ID and FPR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WO_NO=WH.WO_NO";
    public static final String GET_FINAL_PROD_EMP_DETAILS_SQL_QUERY = "select FPRODEMP.*,EMP.EMP_CDE,EMP.EMP_NAME,EMPTYP.EMP_TYP_NAME,EMPTYP.EMP_TYP_ID from FPROD_EMP FPRODEMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where FPRODEMP.FPROD_ID = #FPROD_ID# and FPRODEMP.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID";
    
    public static final String GET_ALL_FINAL_PRODUCTION_DETAILS_FILTER_QUERY = "select rownum r,FPROD_ID,FPROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,FPROD_DATESTAMP,FPROD_ISVALID from(select FPROD_ID,FPROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,FPROD_POST_FLG,FPROD_DATESTAMP,FPROD_ISVALID from(select FPR.FPROD_ID,FPR.FPROD_CRNT_DATE,FPR.SHIFT_ID,SM.SHIFT_NAME,FPR.WOJB_ID,WOJH.WO_ID,WOJHS.WO_NO,WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,FPR.FPROD_POST_FLG,FPR.FPROD_DATESTAMP,FPR.FPROD_ISVALID from F_PROD FPR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_JB_HEADER WOJH where FPR.WOJB_ID = WOJHS.WOJB_ID and FPR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WOJB_ID = WOJH.WOJB_ID)";
    public static final String GET_ALL_WO_JB_STATUS_DETAILS_FILTER_QUERY = "select rownum r ,WO_NO,WO_DATE,JB_NAME,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP,WOJBSTAT_SNO,WOJBSTAT_ID,WOJBSTAT_SNO_STAT from (select WO_NO,WO_DATE,JB_NAME,JB_DWG_NO,JB_RVSN_NO,JB_MATL_TYP,WOJBSTAT_SNO,WOJBSTAT_ID,WOJBSTAT_SNO_STAT,USER_NAME from (select WH.WO_NO,WH.WO_DATE,WOJH.JB_NAME,WOJH.JB_DWG_NO,WOJH.JB_RVSN_NO,WOJH.JB_MATL_TYP,WJS.WOJBSTAT_SNO,WJS.WOJBSTAT_ID,WJS.WOJBSTAT_SNO_STAT,UM.USER_NAME from WO_HEADER WH,WO_JB_HEADER WJH,WO_JB_STAT WJS,WO_JB_HSTRY WOJH,USER_MSTR UM,CNTCT_MSTR CM where WH.WO_ID = WJH.WO_ID and WJH.WOJB_ID = WJS.WOJB_ID and WOJH.WOJB_ID = WJH.WOJB_ID and WOJH.CUST_ID = CM.CNTCT_COMPANY and CM.CNTCT_ID = UM.CNTCT_ID)";
    public static final String CHECK_DESPATCH_CLEARANCE_OPN_SQL_QUERY = "select count(*) COUNT from (select WOJBOPN_ID from WO_JB_OPN WJO,OPN_GP_MSTR OGM where WJO.WOJBSTAT_ID = #WOJBSTAT_ID# and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'DESPATCH' and WJO.WOJBOPN_STAT = 'O' UNION ALL select WOJBOPN_ID from WO_JB_OPN WJO,OPN_GP_MSTR OGM where WJO.WOJBSTAT_ID = #WOJBSTAT_ID# and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL' and WJO.WOJBOPN_STAT = 'O')";
    
    
    
    public static final String UNPOSTED_FINAL_PROD_ID_SELECT_SQL_QUERY = "select FPR.*,SM.SHIFT_NAME from F_PROD FPR,SHIFT_MSTR SM where FPROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# and FPROD_POST_FLG = '0' and SM.SHIFT_ID = FPR.SHIFT_ID and FPROD_ISVALID = 1";
    public static final String FINAL_PRODN_DETAILS_POST_SQL_QUERY = "update F_PROD set FPROD_POST_FLG = '1',FPROD_DATESTAMP = SYSTIMESTAMP where FPROD_ID=#FPROD_ID#";
    
    public static final String FINAL_PRODN_DETAILS_SELECT_SQL_QUERY = "select WOJB_ID,FPROD_QTY_SNOS,FPROD_TOT_QTY,FPROD_START_OPN,FPROD_END_OPN from F_PROD where FPROD_ID=#FPROD_ID# and FPROD_ISVALID = 1";
    
    public static final String GET_FINAL_PRODDETAILS_SQL_QUERY = "select FPROD_ID,FPROD_QTY_SNOS,FPROD_START_OPN,FPROD_END_OPN from F_PROD where WOJB_ID = #WOJB_ID# and FPROD_POST_FLG ='0' and FPROD_ISVALID = 1";
    public static final String GET_PENDING_FINAL_PRODN_JOBSTAT_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN WJO,OPN_GP_MSTR OGM,(select COUNT(1) CNT from WO_JB_OPN WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '1')b where b.CNT = 0 and  WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL'";
    
    public static final String GET_POSTED_FINAL_PRODN_JOBSTAT_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN  WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('C') and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL'";
    
    public static final String GET_FINAL_PRODDETAILS_FOR_UPDATE_SQL_QUERY = "select FPROD_ID,FPROD_QTY_SNOS,FPROD_START_OPN,FPROD_END_OPN from F_PROD where WOJB_ID = #WOJB_ID# and FPROD_POST_FLG ='0' and FPROD_ID !=#FPROD_ID# and FPROD_ISVALID = 1";
    
    public static final String FPROD_MAKE_VALID_SQL_QUERY = "update F_PROD set FPROD_ISVALID = 1,FPROD_DATESTAMP=SYSTIMESTAMP where FPROD_ID = #FPROD_ID#";
    public static final String FPROD_MAKE_INVALID_SQL_QUERY = "update F_PROD set FPROD_ISVALID = 0,FPROD_DATESTAMP=SYSTIMESTAMP where FPROD_ID = #FPROD_ID#";
    //DESPATCH//
    
    public static final String DESPATCH_DETAILS_ADD_SQL_QUERY = "insert into DESPATCH(DESPATCH_ID,DESPATCH_CRNT_DATE,SHIFT_ID,WOJB_ID,DESPATCH_QTY_SNOS,DESPATCH_TOT_QTY,DESPATCH_START_OPN,DESPATCH_END_OPN,DESPATCH_CREATEDBY) values(DESPATCH_ID.nextval,#DESPATCH_CRNT_DATE#,#SHIFT_ID#,#WOJB_ID#,#DESPATCH_QTY_SNOS#,#DESPATCH_TOT_QTY#,#DESPATCH_START_OPN#,#DESPATCH_END_OPN#,#DESPATCH_CREATEDBY#)";
    public static final String DESPATCH_DETAILS_LOG_ADD_SQL_QUERY = "insert into LOG_DESPATCH select * FROM DESPATCH where DESPATCH_ID = #DESPATCH_ID#";
    public static final String DESPATCH_DETAILS_UPDATE_SQL_QUERY = "update DESPATCH set DESPATCH_CRNT_DATE=#DESPATCH_CRNT_DATE#,SHIFT_ID=#SHIFT_ID#,WOJB_ID=#WOJB_ID#,DESPATCH_QTY_SNOS=#DESPATCH_QTY_SNOS#,DESPATCH_TOT_QTY=#DESPATCH_TOT_QTY#,DESPATCH_START_OPN=#DESPATCH_START_OPN#,DESPATCH_END_OPN=#DESPATCH_END_OPN#,DESPATCH_POST_FLG=#DESPATCH_POST_FLG#,DESPATCH_CREATEDBY = #DESPATCH_CREATEDBY#,DESPATCH_MODIFYCOUNT = DESPATCH_MODIFYCOUNT + 1,DESPATCH_DATESTAMP = SYSTIMESTAMP where DESPATCH_ID = #DESPATCH_ID# and DESPATCH_ISVALID = 1";
    public static final String GET_ALL_DESPATCH_DETAILS_FILTER_QUERY = "select rownum r,DESPATCH_ID,DESPATCH_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,DESPATCH_DATESTAMP,DESPATCH_ISVALID from(select DESPATCH_ID,DESPATCH_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,DESPATCH_POST_FLG,DESPATCH_DATESTAMP,DESPATCH_ISVALID from(select FPR.DESPATCH_ID,FPR.DESPATCH_CRNT_DATE,FPR.SHIFT_ID,SM.SHIFT_NAME,FPR.WOJB_ID,WOJH.WO_ID,WOJHS.WO_NO,WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,FPR.DESPATCH_POST_FLG,FPR.DESPATCH_DATESTAMP,FPR.DESPATCH_ISVALID from DESPATCH FPR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_JB_HEADER WOJH where FPR.WOJB_ID = WOJHS.WOJB_ID and FPR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WOJB_ID = WOJH.WOJB_ID)";
    public static final String GET_DESPATCH_DETAILS_SQL_QUERY = "select FPR.DESPATCH_CRNT_DATE,FPR.SHIFT_ID,SM.SHIFT_NAME,FPR.WOJB_ID,WOJHS.WO_NO,WH.WO_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,FPR.DESPATCH_QTY_SNOS,FPR.DESPATCH_TOT_QTY,FPR.DESPATCH_START_OPN,FPR.DESPATCH_END_OPN,FPR.DESPATCH_POST_FLG,DESPATCH_MODIFYCOUNT,DESPATCH_CREATEDBY,DESPATCH_ISVALID,FPR.DESPATCH_DATESTAMP from DESPATCH FPR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_HEADER WH where FPR.DESPATCH_ID = #DESPATCH_ID# and FPR.WOJB_ID = WOJHS.WOJB_ID and FPR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WO_NO=WH.WO_NO";
    public static final String CHECK_DESPATCH_FOR_MODIFY_SQL_QUERY = "select count(*) from DESPATCH where DESPATCH_ID = #DESPATCH_ID# and DESPATCH_POST_FLG = '0'";
    public static final String UNPOSTED_DESPATCH_ID_SELECT_SQL_QUERY = "select FPR.*,SM.SHIFT_NAME from DESPATCH FPR,SHIFT_MSTR SM where DESPATCH_CRNT_DATE between #FROM_DATE# and #TO_DATE# and DESPATCH_POST_FLG = '0' and SM.SHIFT_ID = FPR.SHIFT_ID and DESPATCH_ISVALID = 1";
    public static final String DESPATCH_DETAILS_POST_SQL_QUERY = "update DESPATCH set DESPATCH_POST_FLG = '1',DESPATCH_DATESTAMP = SYSTIMESTAMP where DESPATCH_ID = #DESPATCH_ID#";
    public static final String DESPATCH_DETAILS_SELECT_SQL_QUERY = "select WOJB_ID,DESPATCH_QTY_SNOS,DESPATCH_TOT_QTY,DESPATCH_START_OPN,DESPATCH_END_OPN from DESPATCH where DESPATCH_ID=#DESPATCH_ID# and DESPATCH_ISVALID = 1";
    public static final String GET_DESPATCH_CLEARANCE_DETAILS_SQL_QUERY = "select DESPATCH_ID,DESPATCH_QTY_SNOS,DESPATCH_START_OPN,DESPATCH_END_OPN from DESPATCH where WOJB_ID = #WOJB_ID# and DESPATCH_POST_FLG ='0' and DESPATCH_ISVALID = 1";
    public static final String GET_PENDING_DESPATCH_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN WJO,OPN_GP_MSTR OGM,(select COUNT(1) CNT from WO_JB_OPN WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and (OGM.OPN_GP_MCRELATED = '1' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL'))b where b.CNT = 0 and  WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'DESPATCH'";
    public static final String GET_POSTED_DESPATCH_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN  WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('C') and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'DESPATCH'";
    public static final String DESPATCH_MAKE_VALID_SQL_QUERY = "update DESPATCH set DESPATCH_ISVALID = 1,DESPATCH_DATESTAMP=SYSTIMESTAMP where DESPATCH_ID = #DESPATCH_ID#";
    public static final String DESPATCH_MAKE_INVALID_SQL_QUERY = "update DESPATCH set DESPATCH_ISVALID = 0,DESPATCH_DATESTAMP=SYSTIMESTAMP where DESPATCH_ID = #DESPATCH_ID#";
    public static final String GET_DESPATCH_DETAILS_FOR_UPDATE_SQL_QUERY = "select DESPATCH_ID,DESPATCH_QTY_SNOS,DESPATCH_START_OPN,DESPATCH_END_OPN from DESPATCH where WOJB_ID = #WOJB_ID# and DESPATCH_POST_FLG ='0' and DESPATCH_ID != #DESPATCH_ID# and DESPATCH_ISVALID = 1";
    
    //SHIPMENT//
    
    public static final String GET_ALL_SHIPMENT_DETAILS_FILTER_QUERY = "select rownum r,SHIPMENT_ID,SHIPMENT_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,SHIPMENT_DATESTAMP,SHIPMENT_ISVALID from(select SHIPMENT_ID,SHIPMENT_CRNT_DATE,SHIFT_ID,SHIFT_NAME,WO_NO,JB_NAME,SHIPMENT_POST_FLG,SHIPMENT_DATESTAMP,SHIPMENT_ISVALID from(select FPR.SHIPMENT_ID,FPR.SHIPMENT_CRNT_DATE,FPR.SHIFT_ID,SM.SHIFT_NAME,FPR.WOJB_ID,WOJH.WO_ID,WOJHS.WO_NO,WOJH.JB_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,FPR.SHIPMENT_POST_FLG,FPR.SHIPMENT_DATESTAMP,FPR.SHIPMENT_ISVALID from SHIPMENT FPR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_JB_HEADER WOJH where FPR.WOJB_ID = WOJHS.WOJB_ID and FPR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WOJB_ID = WOJH.WOJB_ID)";
    public static final String SHIPMENT_DETAILS_ADD_SQL_QUERY = "insert into SHIPMENT(SHIPMENT_ID,SHIPMENT_CRNT_DATE,SHIFT_ID,WOJB_ID,SHIPMENT_QTY_SNOS,SHIPMENT_TOT_QTY,SHIPMENT_START_OPN,SHIPMENT_END_OPN,SHIPMENT_DCNO,SHIPMENT_CREATEDBY) values(SHIPMENT_ID.nextval,#SHIPMENT_CRNT_DATE#,#SHIFT_ID#,#WOJB_ID#,#SHIPMENT_QTY_SNOS#,#SHIPMENT_TOT_QTY#,#SHIPMENT_START_OPN#,#SHIPMENT_END_OPN#,#SHIPMENT_DCNO#,#SHIPMENT_CREATEDBY#)";
    public static final String SHIPMENT_DETAILS_LOG_ADD_SQL_QUERY  = "insert into LOG_SHIPMENT select * FROM SHIPMENT where SHIPMENT_ID = #SHIPMENT_ID#";
    public static final String SHIPMENT_DETAILS_UPDATE_SQL_QUERY = "update SHIPMENT set SHIPMENT_CRNT_DATE=#SHIPMENT_CRNT_DATE#,SHIFT_ID=#SHIFT_ID#,WOJB_ID=#WOJB_ID#,SHIPMENT_QTY_SNOS=#SHIPMENT_QTY_SNOS#,SHIPMENT_TOT_QTY=#SHIPMENT_TOT_QTY#,SHIPMENT_START_OPN=#SHIPMENT_START_OPN#,SHIPMENT_END_OPN=#SHIPMENT_END_OPN#,SHIPMENT_DCNO = #SHIPMENT_DCNO#,SHIPMENT_POST_FLG=#SHIPMENT_POST_FLG#,SHIPMENT_CREATEDBY = #SHIPMENT_CREATEDBY#,SHIPMENT_MODIFYCOUNT = SHIPMENT_MODIFYCOUNT + 1,SHIPMENT_DATESTAMP = SYSTIMESTAMP where SHIPMENT_ID = #SHIPMENT_ID# and SHIPMENT_ISVALID = 1";
    public static final String GET_SHIPMENT_DETAILS_SQL_QUERY = "select FPR.SHIPMENT_CRNT_DATE,FPR.SHIFT_ID,SM.SHIFT_NAME,FPR.WOJB_ID,WOJHS.WO_NO,WH.WO_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,FPR.SHIPMENT_QTY_SNOS,FPR.SHIPMENT_TOT_QTY,FPR.SHIPMENT_START_OPN,FPR.SHIPMENT_END_OPN,FPR.SHIPMENT_DCNO,FPR.SHIPMENT_POST_FLG,SHIPMENT_MODIFYCOUNT,SHIPMENT_CREATEDBY,SHIPMENT_ISVALID,FPR.SHIPMENT_DATESTAMP from SHIPMENT FPR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_HEADER WH where FPR.SHIPMENT_ID = #SHIPMENT_ID# and FPR.WOJB_ID = WOJHS.WOJB_ID and FPR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WO_NO=WH.WO_NO";
    public static final String UNPOSTED_SHIPMENT_ID_SELECT_SQL_QUERY = "select FPR.*,SM.SHIFT_NAME from SHIPMENT FPR,SHIFT_MSTR SM where SHIPMENT_CRNT_DATE between #FROM_DATE# and #TO_DATE# and SHIPMENT_POST_FLG = '0' and SM.SHIFT_ID = FPR.SHIFT_ID and SHIPMENT_ISVALID = 1";
    public static final String SHIPMENT_DETAILS_POST_SQL_QUERY = "update SHIPMENT set SHIPMENT_POST_FLG = '1',SHIPMENT_DATESTAMP = SYSTIMESTAMP where SHIPMENT_ID = #SHIPMENT_ID#";
    public static final String SHIPMENT_DETAILS_SELECT_SQL_QUERY = "select WOJB_ID,SHIPMENT_QTY_SNOS,SHIPMENT_TOT_QTY,SHIPMENT_START_OPN,SHIPMENT_END_OPN from SHIPMENT where SHIPMENT_ID=#SHIPMENT_ID# and SHIPMENT_ISVALID = 1";
    public static final String GET_SHIPMENT_CLEARANCE_DETAILS_SQL_QUERY = "select SHIPMENT_ID,SHIPMENT_QTY_SNOS,SHIPMENT_START_OPN,SHIPMENT_END_OPN from SHIPMENT where WOJB_ID = #WOJB_ID# and SHIPMENT_POST_FLG ='0' and SHIPMENT_ISVALID = 1";
    public static final String GET_PENDING_SHIPMENT_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN WJO,OPN_GP_MSTR OGM,(select COUNT(1) CNT from WO_JB_OPN WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and (OGM.OPN_GP_MCRELATED = '1' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'DESPATCH' ))b where b.CNT = 0 and  WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'SHIPMENT'";
    
    public static final String GET_POSTED_SHIPMENT_OPERATION_SNOS_SQL_QUERY = "select WOJBOPN_OPN_SNO from WO_JB_OPN  WJO,OPN_GP_MSTR OGM where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT IN('C') and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'SHIPMENT'";
    public static final String CHECK_SHIPMENT_FOR_MODIFY_SQL_QUERY = "select count(*) from SHIPMENT where SHIPMENT_ID = #SHIPMENT_ID# and SHIPMENT_POST_FLG = '0'";
    public static final String SHIPMENT_MAKE_VALID_SQL_QUERY = "update SHIPMENT set SHIPMENT_ISVALID = 1,SHIPMENT_DATESTAMP=SYSTIMESTAMP where SHIPMENT_ID = #SHIPMENT_ID#";
    public static final String SHIPMENT_MAKE_INVALID_SQL_QUERY = "update SHIPMENT set SHIPMENT_ISVALID = 0,SHIPMENT_DATESTAMP=SYSTIMESTAMP where SHIPMENT_ID = #SHIPMENT_ID#";
    public static final String GET_SHIPMENT_DETAILS_FOR_UPDATE_SQL_QUERY = "select SHIPMENT_ID,SHIPMENT_QTY_SNOS,SHIPMENT_START_OPN,SHIPMENT_END_OPN from SHIPMENT where WOJB_ID = #WOJB_ID# and SHIPMENT_POST_FLG ='0' and SHIPMENT_ID != #SHIPMENT_ID# and SHIPMENT_ISVALID = 1";
    public static final String GET_ALL_JOB_STATUS_DETAILS_SQL_QUERY = "select rownum r,JB_ID,JB_NAME,JB_DWG_NO,USER_NAME from (select JB_ID,JB_NAME,JB_DWG_NO,USER_NAME from (select distinct WJH.JB_ID,WJHS.JB_NAME,JB_DWG_NO,USER_NAME from WO_JB_HEADER WJH,JB_MSTR JM,WO_JB_HSTRY WJHS,USER_MSTR UM,CNTCT_MSTR CONM where WJH.JB_ID = JM.JB_ID and JM.JB_TYP = 'N' and (WJH.WOJB_STAT IN('O','A') OR (WJH.WOJB_STAT = 'C' and WJHS.WO_DATE between #FROM_DATE# and #TO_DATE#)) and WJH.WOJB_ID = WJHS.WOJB_ID and UM.CNTCT_ID = CONM.CNTCT_ID and CONM.CNTCT_COMPANY = WJHS.CUST_ID)";
    
    public static final String GET_JOB_STATUS_DETAILS_FOR_CUSTOMER_SQL_QUERY = "select rownum r,JB_ID,JB_NAME,JB_DWG_NO from (select JB_ID,JB_NAME,JB_DWG_NO from (select distinct WJH.JB_ID,WJHS.JB_NAME,JB_DWG_NO from WO_JB_HEADER WJH,JB_MSTR JM,WO_JB_HSTRY WJHS where WJH.JB_ID = JM.JB_ID and JM.JB_TYP = 'N' and (WJH.WOJB_STAT IN('O','A') OR (WJH.WOJB_STAT = 'C' and WJHS.WO_DATE between #FROM_DATE# and #TO_DATE#)) and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = #CUST_ID#)";
    public static final String GET_JOB_STATUS_DETAILS_FOR_SENDING_MAIL_TO_CUSTOMER_SQL_QUERY = "select JB_ID,JB_NAME,JB_DWG_NO from (select distinct WJH.JB_ID,WJHS.JB_NAME,JB_DWG_NO from WO_JB_HEADER WJH, JB_MSTR JM, WO_JB_HSTRY WJHS where WJH.JB_ID = JM.JB_ID and JM.JB_TYP = 'N' and (WJH.WOJB_STAT IN('O','A') OR (WJH.WOJB_STAT = 'C' and WJHS.WO_DATE between #FROM_DATE# and #TO_DATE#))and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = #CUST_ID#)A ORDER BY JB_NAME, JB_DWG_NO"; 
    public static final String GET_CUSTOMER_ORDER_SQL_QUERY = "select JB_ID,trunc(WJHS.WO_DATE) WODATE,WJH.WOJB_DCNO CUSTDCNO,SUM(WJH.WOJB_QTY) JBQTY from WO_JB_HEADER WJH,WO_JB_HSTRY WJHS where WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = #CUST_ID# and JB_ID = #JB_ID# and TRUNC(WJHS.WO_DATE) between #FROM_DATE# and #TO_DATE# group by TRUNC(WJHS.WO_DATE),JB_ID,WJH.WOJB_DCNO";
    public static final String SELECT_BALANCE_FORWARD_DETAILS_FOR_CUSTOMER_SQL_QUERY = "select JB_ID,count(WOJBSTAT_ID) JBQTY from WO_JB_HEADER WJH,WO_JB_STAT WJS,WO_JB_HSTRY WJHS where WJH.WOJB_ID = WJS.WOJB_ID and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = #CUST_ID# and WJH.JB_ID = #JB_ID# and WJS.WOJBSTAT_SNO_STAT IN('O','A') and trunc(WJHS.WO_DATE)  not between #FROM_DATE# and #TO_DATE# group by JB_ID";
    public static final String DESPATCHED_DETAILS_FOR_CUSTOMER_SELECT_SQL_QUERY = "select SMNT.SHIPMENT_CRNT_DATE DESPATCHEDDATE,SMNT.SHIPMENT_DCNO CUSTDCNO,SUM(SMNT.SHIPMENT_TOT_QTY) JBQTY from SHIPMENT SMNT where SMNT.WOJB_ID IN(select distinct WJH.WOJB_ID  from WO_JB_HEADER WJH,WO_JB_STAT WJS,WO_JB_HSTRY WJHS,SHIPMENT SMNT where WJH.JB_ID = #JB_ID# and WJH.WOJB_ID = WJS.WOJB_ID and WJS.WOJBSTAT_SNO_STAT = 'C' and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = #CUST_ID#) and SMNT.SHIPMENT_CRNT_DATE between #FROM_DATE# and #TO_DATE# group by SMNT.SHIPMENT_CRNT_DATE,SMNT.SHIPMENT_DCNO"; 
    public static final String FETCH_NOT_TAKEN_UP_FOR_CUSTOMER_SQL_QUERY = "select STAT,SUM(JBQTY) JBQTY from(select wjh.wojb_id,wjs.wojbstat_sno_stat STAT, count(wjs.wojbstat_id) JBQTY  from WO_JB_HEADER wjh,  WO_JB_STAT wjs,WO_JB_HSTRY wjhs,USER_MSTR UM,CNTCT_MSTR CM where wjh.JB_ID = #JB_ID# and wjh.WOJB_ID = wjhs.WOJB_ID and wjh.wojb_id = wjs.wojb_id and wjhs.CUST_ID = #CUST_ID# and wjs.wojbstat_sno_stat = 'O' group by wjh.wojb_id, wjs.wojbstat_sno_stat order by 1)A group by STAT";
    public static final String FETCH_WORK_IN_PROCESS_FOR_CUSTOMER_SQL_QUERY = "select STAT,SUM(JBQTY) JBQTY from(select wjh.wojb_id,wjs.wojbstat_sno_stat STAT, count(wjs.wojbstat_id) JBQTY  from WO_JB_HEADER wjh,  WO_JB_STAT wjs,WO_JB_HSTRY wjhs where wjh.JB_ID = #JB_ID# and wjh.WOJB_ID = wjhs.WOJB_ID and wjh.wojb_id = wjs.wojb_id and wjhs.CUST_ID = #CUST_ID# and wjs.wojbstat_sno_stat = 'A' group by wjh.wojb_id, wjs.wojbstat_sno_stat order by 1)A group by STAT";
    public static final String FETCH_READY_TO_DESPATCH_FOR_CUSTOMER_SQL_QUERY = "SELECT COUNT(wojbstat_id) JBQTY FROM ( select wjs.wojbstat_id from WO_JB_HEADER wjh, WO_JB_STAT wjs, WO_JB_OPN wjo, WO_JB_HSTRY wjhs where wjhs.WOJB_ID = wjh.WOJB_ID and wjh.wojb_id = wjs.wojb_id and wjh.jb_id = #JB_ID# and wjs.WOJBSTAT_ID = wjo.WOJBSTAT_ID   and wjo.wojbopn_stat = 'O' and wjhs.CUST_ID = #CUST_ID# group by wjh.wojb_id, wjh.wojb_qty, wjs.wojbstat_id  having count(1) < 2)";
    
    public static final String CUSTOMER_ORDER_SELECT_SQL_QUERY = "select JB_ID,trunc(WJHS.WO_DATE) WODATE,WJH.WOJB_DCNO CUSTDCNO,SUM(WJH.WOJB_QTY) JBQTY from WO_JB_HEADER WJH,WO_JB_HSTRY WJHS,USER_MSTR UM,CNTCT_MSTR CM where WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = CM.CNTCT_COMPANY and UM.USER_NAME = #USER_NAME# and UM.CNTCT_ID = CM.CNTCT_ID and JB_ID = #JB_ID# and TRUNC(WJHS.WO_DATE) between #FROM_DATE# and #TO_DATE# group by TRUNC(WJHS.WO_DATE),JB_ID,WJH.WOJB_DCNO";
    //public static final String SELECT_BALANCE_FORWARD_DETAILS_SQL_QUERY = "select JB_ID,SUM(WJH.WOJB_QTY) JBQTY from WO_JB_HEADER WJH,WO_JB_HSTRY WJHS,USER_MSTR UM,CNTCT_MSTR CM  where WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = CM.CNTCT_COMPANY and UM.USER_NAME = #USER_NAME# and UM.CNTCT_ID = CM.CNTCT_ID and WJH.JB_ID = #JB_ID# and WJH.WOJB_STAT IN('O','A') and trunc(WJHS.WO_DATE)  not between #FROM_DATE# and #TO_DATE# group by JB_ID";
    public static final String SELECT_BALANCE_FORWARD_DETAILS_SQL_QUERY = "select JB_ID,count(WOJBSTAT_ID) JBQTY from WO_JB_HEADER WJH,WO_JB_STAT WJS,WO_JB_HSTRY WJHS,USER_MSTR UM,CNTCT_MSTR CM  where WJH.WOJB_ID = WJS.WOJB_ID and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = CM.CNTCT_COMPANY and UM.USER_NAME = #USER_NAME# and UM.CNTCT_ID = CM.CNTCT_ID and WJH.JB_ID = #JB_ID# and WJS.WOJBSTAT_SNO_STAT IN('O','A') and trunc(WJHS.WO_DATE)  not between #FROM_DATE# and #TO_DATE# group by JB_ID";
    //public static final String FETCH_WORK_IN_PROCESS_SQL_QUERY = "select JB_ID,SUM(WOJB_QTY) JBQTY from (select DISTINCT WJH.WOJB_ID,WJH.JB_ID,WJH.WOJB_QTY from WO_JB_OPN WJO,OPN_GP_MSTR OGM,WO_JB_HEADER WJH,WO_JB_STAT WJS where WJH.WOJB_STAT = 'A' and WJH.JB_ID = #JB_ID# and WJH.WOJB_ID = WJS.WOJB_ID and WJS.WOJBSTAT_ID = WJO.WOJBSTAT_ID and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and (OGM.OPN_GP_MCRELATED = '1' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'DESPATCH')) group by JB_ID";
    //public static final String FETCH_READY_TO_DESPATCH_SQL_QUERY = "select JB_ID,SUM(WOJB_QTY) JBQTY from (select distinct WJH.WOJB_ID,WJH.JB_ID,WJH.WOJB_QTY from WO_JB_OPN WJO,OPN_GP_MSTR OGM,WO_JB_HEADER WJH,WO_JB_STAT WJS,(select COUNT(1) CNT from WO_JB_OPN WJO,OPN_GP_MSTR OGM,WO_JB_HEADER WJH,WO_JB_STAT WJS where WJH.JB_ID = #JB_ID# and WJH.WOJB_ID = WJS.WOJB_ID and WJS.WOJBSTAT_ID = WJO.WOJBSTAT_ID and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and (OGM.OPN_GP_MCRELATED = '1' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'DESPATCH' ))b where b.CNT = 0 and  WJH.JB_ID = #JB_ID# and WJH.WOJB_ID = WJS.WOJB_ID and WJS.WOJBSTAT_ID = WJO.WOJBSTAT_ID and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'SHIPMENT') group by JB_ID";
    
    public static final String FETCH_NOT_TAKEN_UP_SQL_QUERY = "select STAT,SUM(JBQTY) JBQTY from(select wjh.wojb_id,wjs.wojbstat_sno_stat STAT, count(wjs.wojbstat_id) JBQTY  from WO_JB_HEADER wjh,  WO_JB_STAT wjs,WO_JB_HSTRY wjhs,USER_MSTR UM,CNTCT_MSTR CM where wjh.JB_ID = #JB_ID# and wjh.WOJB_ID = wjhs.WOJB_ID and wjh.wojb_id = wjs.wojb_id and wjhs.CUST_ID = CM.CNTCT_COMPANY and UM.USER_NAME = #USER_NAME# and wjs.wojbstat_sno_stat = 'O' and CM.CNTCT_ID = UM.CNTCT_ID group by wjh.wojb_id, wjs.wojbstat_sno_stat order by 1)A group by STAT";
    
    public static final String FETCH_WORK_IN_PROCESS_SQL_QUERY = "select STAT,SUM(JBQTY) JBQTY from(select wjh.wojb_id,wjs.wojbstat_sno_stat STAT, count(wjs.wojbstat_id) JBQTY  from WO_JB_HEADER wjh,  WO_JB_STAT wjs,WO_JB_HSTRY wjhs,USER_MSTR UM,CNTCT_MSTR CM where wjh.JB_ID = #JB_ID# and wjh.WOJB_ID = wjhs.WOJB_ID and wjh.wojb_id = wjs.wojb_id and wjhs.CUST_ID = CM.CNTCT_COMPANY and UM.USER_NAME = #USER_NAME# and wjs.wojbstat_sno_stat = 'A' and CM.CNTCT_ID = UM.CNTCT_ID group by wjh.wojb_id, wjs.wojbstat_sno_stat order by 1)A group by STAT";
    public static final String FETCH_READY_TO_DESPATCH_SQL_QUERY = "SELECT COUNT(wojbstat_id) JBQTY FROM ( select wjs.wojbstat_id from WO_JB_HEADER wjh, WO_JB_STAT wjs, WO_JB_OPN wjo, WO_JB_HSTRY wjhs,USER_MSTR UM,CNTCT_MSTR CM where wjhs.WOJB_ID = wjh.WOJB_ID and wjh.wojb_id = wjs.wojb_id and wjh.jb_id = #JB_ID# and wjs.WOJBSTAT_ID = wjo.WOJBSTAT_ID   and wjo.wojbopn_stat = 'O' and wjhs.CUST_ID = CM.CNTCT_COMPANY and UM.USER_NAME = #USER_NAME# and CM.CNTCT_ID = UM.CNTCT_ID group by wjh.wojb_id, wjh.wojb_qty, wjs.wojbstat_id  having count(1) < 2)";
    //public static final String WOJOBID_GET_SQL_QUERY = "select WOJB_ID from WO_JB_HEADER where JB_ID = #JB_ID#";
    //public static final String WOJBSTATID_GET_SQL_QUERY = "select WOJBSTAT_ID from WO_JB_STAT where WOJB_ID = #WOJB_ID#";
    //public static final String FETCH_READY_TO_DESPATCH_SQL_QUERY = "select COUNT(1) from WO_JB_OPN WJO,OPN_GP_MSTR OGM,(select COUNT(1) CNT from WO_JB_OPN WJO,OPN_GP_MSTR OGM where WJO.WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and (OGM.OPN_GP_MCRELATED = '1' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'FINAL' OR OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'DESPATCH' ))b where b.CNT = 0 and WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_STAT = 'O' and WJO.OPN_GP_ID = OGM.OPN_GP_ID and OGM.OPN_GP_MCRELATED = '0' and UPPER(OGM.OPN_GP_CODE) LIKE 'SHIPMENT'";
    public static final String DESPATCHED_DETAILS_SELECT_SQL_QUERY = "select SMNT.SHIPMENT_CRNT_DATE DESPATCHEDDATE,SMNT.SHIPMENT_DCNO CUSTDCNO,SUM(SMNT.SHIPMENT_TOT_QTY) JBQTY from SHIPMENT SMNT where SMNT.WOJB_ID IN(select distinct WJH.WOJB_ID  from WO_JB_HEADER WJH,WO_JB_STAT WJS,WO_JB_HSTRY WJHS,USER_MSTR UM,CNTCT_MSTR CM,SHIPMENT SMNT where WJH.JB_ID = #JB_ID# and WJH.WOJB_ID = WJS.WOJB_ID and WJS.WOJBSTAT_SNO_STAT = 'C' and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = CM.CNTCT_COMPANY and CM.CNTCT_ID = UM.CNTCT_ID and UM.USER_NAME = #USER_NAME#) and SMNT.SHIPMENT_CRNT_DATE between #FROM_DATE# and #TO_DATE# group by SMNT.SHIPMENT_CRNT_DATE,SMNT.SHIPMENT_DCNO";
    
    
    //REWORK LOG//
    public static final String PRODN_OPN_STATUS_CHANGE_TO_R_SQL_QUERY = "update WO_JB_OPN set WOJBOPN_STAT = 'R' where WOJBOPN_ID = #WOJBOPN_ID#";

    public static final String PRODN_OPN_STATUS_CHECK_R_SQL_QUERY = "SELECT COUNT(*) FROM WO_JB_OPN WHERE WOJBOPN_STAT !='R' AND WOJBSTAT_ID=(SELECT WOJBSTAT_ID FROM WO_JB_OPN WHERE WOJBOPN_ID=#WOJBOPN_ID#)";

    public static final String PRODN_QTY_STATUS_CHANGE_TO_R_SQL_QUERY = "UPDATE WO_JB_STAT SET WOJBSTAT_SNO_STAT = 'R' where WOJBSTAT_ID = (SELECT WOJBSTAT_ID FROM WO_JB_OPN WHERE WOJBOPN_ID=#WOJBOPN_ID#)";

    public static final String PRODN_QTY_STATUS_CHANGE_TO_A_SQL_QUERY = "UPDATE WO_JB_STAT SET WOJBSTAT_SNO_STAT = 'A' where WOJBSTAT_ID = (SELECT WOJBSTAT_ID FROM WO_JB_OPN WHERE WOJBOPN_ID=#WOJBOPN_ID#)";

    public static final String PRODN_QTY_STATUS_CHECK_R_SQL_QUERY = "SELECT COUNT(*) FROM WO_JB_STAT WHERE WOJBSTAT_SNO_STAT !='R' AND WOJB_ID = (SELECT WOJB_ID FROM WO_JB_STAT WHERE WOJBSTAT_ID = (SELECT WOJBSTAT_ID FROM WO_JB_OPN WHERE WOJBOPN_ID=#WOJBOPN_ID#))";

    public static final String PRODN_JOB_STATUS_CHANGE_TO_R_SQL_QUERY = "UPDATE WO_JB_HEADER SET WOJB_STAT = 'R' where WOJB_ID =(SELECT WOJB_ID FROM WO_JB_STAT WHERE WOJBSTAT_ID = (SELECT WOJBSTAT_ID FROM WO_JB_OPN WHERE WOJBOPN_ID=#WOJBOPN_ID#))";

    public static final String PRODN_JOB_STATUS_CHANGE_TO_A_SQL_QUERY = "UPDATE WO_JB_HEADER SET WOJB_STAT = 'A' where WOJB_ID =(SELECT WOJB_ID FROM WO_JB_STAT WHERE WOJBSTAT_ID = (SELECT WOJBSTAT_ID FROM WO_JB_OPN WHERE WOJBOPN_ID=#WOJBOPN_ID#))";

    public static final String PRODN_WO_STATUS_CHANGE_TO_A_SQL_QUERY = "UPDATE WO_HEADER SET WO_STAT = 'A' where WO_ID = (SELECT WO_ID FROM WO_JB_HEADER WHERE WOJB_ID = (SELECT WOJB_ID FROM WO_JB_STAT WHERE WOJBSTAT_ID = (SELECT WOJBSTAT_ID FROM WO_JB_OPN WHERE WOJBOPN_ID=#WOJBOPN_ID#)))";

    public static final String GET_RWKLOG_DETAILS_SQL_QUERY = "select RWK_CATEGORY,RWK_RSN,RWKLOG_AUTHRZDBY,RWKLOG_ISVALID,RWK_DATE,WOJHS.WO_NO,WOJHS.JB_NAME from RWK_LOG RL,RWK_MSTR RM,RWK_CATEGORY RC,WO_JB_OPN WOJO,WO_JB_STAT WOJS,WO_JB_HSTRY WOJHS where RM.RWK_CATEGORY_ID = RC.RWK_CATEGORY_ID and RM.RWK_ID = RL.RWK_ID and RL.WOJBOPN_ID = WOJO.WOJBOPN_ID and WOJO.WOJBSTAT_ID = WOJS.WOJBSTAT_ID and WOJS.WOJB_ID = WOJHS.WOJB_ID and RL.RWK_LOG_ID = #RWK_LOG_ID#";

    public static final String GET_RWKLOG_EMPLOYEE_DETAILS_SQL_QUERY = " select EMP_TYP_NAME,EMP_NAME,EM.EMP_TYP_ID,RLE.EMP_ID from RWK_LOG RL,RWK_LOG_EMP RLE,EMP_MSTR EM,EMP_TYP_MSTR ETM where RL.RWK_LOG_ID = #RWK_LOG_ID# and RL.RWK_LOG_ID = RLE.RWK_LOG_ID and RLE.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID";

    public static final String GET_RWKLOG_OPN_DETAILS_SQL_QUERY = " select OPN_GP_CODE,WOJBOPN_OPN_SNO,WOJBOPN_OPN_NAME,WOJBOPN_OPN_STDHRS from WO_JB_OPN WOJO,RWK_LOG RL,OPN_GP_MSTR OGM where RL.WOJBOPN_ID = WOJO.WOJBOPN_ID and WOJO.OPN_GP_ID = OGM.OPN_GP_ID and RWK_LOG_ID = #RWK_LOG_ID#";

    public static final String GET_RWKLOG_JBQTY_DETAILS_SQL_QUERY = "select WOJBSTAT_SNO from WO_JB_OPN WOJO,RWK_LOG RL,WO_JB_STAT WJS where RL.WOJBOPN_ID = WOJO.WOJBOPN_ID and WOJO.WOJBSTAT_ID = WJS.WOJBSTAT_ID and RWK_LOG_ID = #RWK_LOG_ID#";

    public static final String CHECK_OPERATIONS_FOR_REWORK = "select count(*) from RWK_LOG RL,(select WOJBOPN_ID from WO_JB_OPN where WOJBSTAT_ID = #WOJBSTAT_ID# and WOJBOPN_OPN_SNO = #WOJBOPN_OPN_SNO#) temp where RL.WOJBOPN_ID = temp.WOJBOPN_ID";

    public static final String REWORK_LOG_MAKE_VALID_QUERY = "update RWK_LOG set RWKLOG_ISVALID = 1,RWKLOG_DATESTAMP = SYSTIMESTAMP where RWK_LOG_ID = #RWK_LOG_ID#";

    public static final String REWORK_LOG_MAKE_INVALID_QUERY = "update RWK_LOG set RWKLOG_ISVALID = 0,RWKLOG_DATESTAMP = SYSTIMESTAMP where RWK_LOG_ID = #RWK_LOG_ID#";

    //public static final String CHECK_INCENTIVE_FOR_PRODUCTION = "select count(1),max(JBOPN_INCENTIVE) INCENTIVE_FLG from (select distinct(JBOPN_INCENTIVE) from JB_OPN_MSTR JOM,WO_JB_HEADER WJH where WJH.WOJB_ID = #WOJB_ID# and WJH.JB_ID = JOM.JB_ID and JOM.JBOPN_SNO >= #START_OPN# and JOM.JBOPN_SNO <= #END_OPN#)";
    public static final String CHECK_INCENTIVE_FOR_PRODUCTION = "select count(1),max(WOJBOPN_INCENTIVE) INCENTIVE_FLG from (select DISTINCT(WOJBOPN_INCENTIVE) from (select DISTINCT WOJBOPN_OPN_SNO,WOJBOPN_OPN_STDHRS,WOJBOPN_INCENTIVE from WO_JB_STAT WJS,WO_JB_OPN WJO WHERE WJS.WOJBSTAT_ID = WJO.WOJBSTAT_ID and WJS.WOJB_ID = #WOJB_ID#) where WOJBOPN_OPN_SNO >= #START_OPN# and WOJBOPN_OPN_SNO <= #END_OPN#)";
    
    	//"select jom.jbopn_sno from wo_jb_header wojh,jb_opn_mstr jom where wojh.wojb_id = #WOJB_ID# and jom.jbopn_sno >= #START_OPN# and jom.jbopn_sno <= #END_OPN# and jom.jbopn_incentive = '1'";

                                                       //PAY ROLL//
    public static final String PROD_ENTRIES_SELECT_SQL_QUERY = "select PROD_ID from PROD a, PYRL_CYCLE_STAT b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.PROD_POST_FLG = '1' and a.PROD_ISVALID = '1' and a.prod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE";
    public static final String PROD_EMP_DETAILS_UPDATE_SQL_QUERY = "update PROD_EMP set DT_SLRY_HRS = #DT_SLRY_HRS#,OT_SLRY_HRS = #OT_SLRY_HRS#,INCNTV_SLRY_HRS = #INCNTV_SLRY_HRS# where PROD_ID = #PROD_ID# and EMP_ID = #EMP_ID#";
    public static final String PROD_EMP_DETAILS_SELECT_SQL_QUERY = "select EM.EMP_ID,ETM.EMP_TYP_ID,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,P.PROD_WORK_TYP,P.PROD_INCNTV_FLG,PE.DT_HRS,PE.OT_HRS,P.PROD_TOT_HRS,P.WOJB_ID,P.PROD_START_OPN,P.PROD_END_OPN,P.PROD_QTY_SNOS from PROD P,PROD_EMP PE,EMP_MSTR EM,EMP_TYP_MSTR ETM where P.PROD_ID = #PROD_ID# and PROD_ISVALID = '1' and P.PROD_ID = PE.PROD_ID and PE.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID";

    public static final String RADL_ENTRIES_SELECT_SQL_QUERY = "select RADL_ID from RADL a, PYRL_CYCLE_STAT b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.RADL_POST_FLG = '1' and RADL_ISVALID = '1' and a.radl_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE";
    public static final String RADL_EMP_DETAILS_UPDATE_SQL_QUERY = "update RADL_EMP set DT_SLRY_HRS = #DT_SLRY_HRS#,OT_SLRY_HRS = #OT_SLRY_HRS#,INCNTV_SLRY_HRS = #INCNTV_SLRY_HRS# where RADL_ID = #RADL_ID# and EMP_ID = #EMP_ID#";
    public static final String RADL_EMP_DETAILS_SELECT_SQL_QUERY = "select EM.EMP_ID,ETM.EMP_TYP_ID,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,P.RADL_WORK_TYP,P.RADL_INCNTV_FLG,PE.DT_HRS,PE.OT_HRS,P.RADL_TOT_HRS,P.RADL_STD_HRS from RADL P,RADL_EMP PE,EMP_MSTR EM,EMP_TYP_MSTR ETM where P.RADL_ID = #RADL_ID# and RADL_ISVALID = '1' and P.RADL_ID = PE.RADL_ID and PE.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID";

    public static final String NPROD_ENTRIES_SELECT_SQL_QUERY = "select NPROD_ID from N_PROD a, PYRL_CYCLE_STAT b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.NPROD_POST_FLG = '1' and NPROD_ISVALID = '1' and a.nprod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE";
    public static final String NPROD_EMP_DETAILS_UPDATE_SQL_QUERY = "update NPROD_EMP set DT_SLRY_HRS = #DT_SLRY_HRS#,OT_SLRY_HRS = #OT_SLRY_HRS# where NPROD_ID = #NPROD_ID# and EMP_ID = #EMP_ID#";
    public static final String NPROD_EMP_DETAILS_SELECT_SQL_QUERY = "select EM.EMP_ID,ETM.EMP_TYP_ID,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,PE.DT_HRS,PE.OT_HRS,P.NPROD_TOT_HRS from N_PROD P,NPROD_EMP PE,EMP_MSTR EM,EMP_TYP_MSTR ETM where P.NPROD_ID = #NPROD_ID# and NPROD_ISVALID = '1' and P.NPROD_ID = PE.NPROD_ID and PE.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID";

    public static final String POP_ENTRIES_SELECT_SQL_QUERY = "select POP_ID from POP a, PYRL_CYCLE_STAT b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.POP_POST_FLG = '1' and POP_ISVALID = '1' and a.pop_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE";
    public static final String POP_EMP_DETAILS_UPDATE_SQL_QUERY = "update POP_EMP set DT_SLRY_HRS = #DT_SLRY_HRS#,OT_SLRY_HRS = #OT_SLRY_HRS# where POP_ID = #POP_ID# and EMP_ID = #EMP_ID#";
    public static final String POP_EMP_DETAILS_SELECT_SQL_QUERY = "select EM.EMP_ID,ETM.EMP_TYP_ID,EMP_TYP_DT,EMP_TYP_OT,EMP_TYP_INCENTIVE,PE.DT_HRS,PE.OT_HRS from POP P,POP_EMP PE,EMP_MSTR EM,EMP_TYP_MSTR ETM where P.POP_ID = #POP_ID# and POP_ISVALID = '1' and P.POP_ID = PE.POP_ID and PE.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID";


    public static final String PYRL_IDS_INFO_FILTER_SQL_QUERY = "select rownum r,PYRL_CYCLE_STAT_FROM_DATE,PYRL_CYCLE_STAT_TO_DATE,IS_PYRL_CREATED,IS_PYRL_CLOSED from (select PYRL_CYCLE_STAT_FROM_DATE,PYRL_CYCLE_STAT_TO_DATE,IS_PYRL_CREATED,IS_PYRL_CLOSED from ( select  distinct PYRL_CYCLE_STAT_FROM_DATE,PYRL_CYCLE_STAT_TO_DATE,IS_PYRL_CREATED,IS_PYRL_CLOSED from PYRL_CYCLE_STAT)";

    public static final String PYRL_ID_INFO_SELECT_SQL_QUERY = "select PYRL_CYCLE_STAT_FROM_DATE,PYRL_CYCLE_STAT_TO_DATE from PYRL_CYCLE_STAT";

    public static final String PAYROLL_CYCLE_TYPE_SELECT_SQL_QUERY = "select * from PYRL_CYCLE_CONFIG";

    public static final String PAYRL_CYCLE_ADD_SQL_QUERY = "insert into PYRL_CYCLE_STAT(PYRL_CYCLE_STAT_ID,PYRL_CYCLE_STAT_FROM_DATE,PYRL_CYCLE_STAT_TO_DATE) values(PYRL_CYCLE_STAT_ID.nextval,#FROM_DATE#,#TO_DATE#)";

    public static final String GET_ALL_PAYROLL_CYCLE_STAT = "select * from PYRL_CYCLE_STAT where IS_PYRL_CLOSED = '0'";

    public static final String GET_ALL_PAYROLL_CYCLE_STAT_FOR_PAYROLL = "select * from PYRL_CYCLE_STAT where IS_PYRL_CREATED = '1' and IS_PYRL_CLOSED = '0'";
    public static final String GET_CLOSED_PAYROLL_CYCLE_STAT_FOR_PAYROLL = "select * from PYRL_CYCLE_STAT where IS_PYRL_CREATED = '1' and IS_PYRL_CLOSED = '0'";

    public static final String PYRL_EMPLOYEE_DETAILS_SELECT_SQL_QUERY = "select temp.emp_id,emp_name,sum(dt_hrs) DT_HRS, sum(ot_hrs) OT_HRS, sum(dt_slry_hrs) DT_SLRY_HRS,sum(ot_slry_hrs) OT_SLRY_HRS, sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from ( select PROD_ID, EMP_ID, DT_HRS, OT_HRS, DT_SLRY_HRS, OT_SLRY_HRS, INCNTV_SLRY_HRS  from prod_emp where prod_id in (select prod_id from prod a, pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.PROD_POST_FLG = '1' and a.PROD_UPDATE_PYRL = '0' and a.prod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE) union all select NPROD_ID, EMP_ID, DT_HRS, OT_HRS, DT_SLRY_HRS, OT_SLRY_HRS, 0 dummy from nprod_emp where nprod_id in (select nprod_id from n_prod a, pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.NPROD_POST_FLG = '1' and a.NPROD_UPDATE_PYRL = '0' and a.nprod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE) union all select RADL_ID, EMP_ID, DT_HRS, OT_HRS, DT_SLRY_HRS, OT_SLRY_HRS, INCNTV_SLRY_HRS from radl_emp where radl_id in (select radl_id from radl a, pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.RADL_POST_FLG='1' and a.RADL_UPDATE_PYRL = '0' and a.radl_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE ) union all select POP_ID, EMP_ID, DT_HRS, OT_HRS, DT_SLRY_HRS, OT_SLRY_HRS, 0 dummy from pop_emp a where pop_id in (select pop_id from pop a, pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.POP_POST_FLG = '1' and a.POP_UPDATE_PYRL = '0' and a.pop_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE )) temp,EMP_MSTR where temp.EMP_ID = EMP_MSTR.EMP_ID group by temp.emp_id,emp_name";

    public static final String PYRL_EMPLOYEE_HRS_DETAILS_SELECT_SQL_QUERY = "select 'Production - Direct' SOURCE,temp.PROD_CRNT_DATE,temp.SHIFT_NAME,temp.SHIFT_ID,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from(select PROD_ID,PROD_CRNT_DATE,SHIFT_NAME,c.SHIFT_ID from prod a, pyrl_cycle_stat b,shift_mstr c where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.PROD_POST_FLG = '1' and a.PROD_UPDATE_PYRL = '0' and a.prod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and a.shift_id = c.shift_id) temp,PROD_EMP where temp.PROD_ID = PROD_EMP.PROD_ID and PROD_EMP.EMP_ID = #EMP_ID# group by PROD_CRNT_DATE,SHIFT_NAME,SHIFT_ID union all select 'Radial Production' SOURCE,temp.RADL_CRNT_DATE,temp.SHIFT_NAME,temp.SHIFT_ID,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from(select RADL_ID,RADL_CRNT_DATE,SHIFT_NAME,c.SHIFT_ID from radl a, pyrl_cycle_stat b,shift_mstr c where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.RADL_POST_FLG='1' and a.RADL_UPDATE_PYRL = '0' and a.radl_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and a.shift_id = c.shift_id) temp,RADL_EMP where temp.RADL_ID = RADL_EMP.RADL_ID and RADL_EMP.EMP_ID = #EMP_ID# group by RADL_CRNT_DATE,SHIFT_NAME,SHIFT_ID union all select 'Non Production' SOURCE,temp.NPROD_CRNT_DATE,temp.SHIFT_NAME,temp.SHIFT_ID,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,0 INCNTV_SLRY_HRS from(select NPROD_ID,NPROD_CRNT_DATE,SHIFT_NAME,c.SHIFT_ID from n_prod a, pyrl_cycle_stat b,shift_mstr c where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.NPROD_POST_FLG = '1' and a.NPROD_UPDATE_PYRL = '0' and a.nprod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and a.shift_id = c.shift_id) temp,NPROD_EMP where temp.NPROD_ID = NPROD_EMP.NPROD_ID and NPROD_EMP.EMP_ID = #EMP_ID# group by NPROD_CRNT_DATE,SHIFT_NAME,SHIFT_ID union all select 'Production - InDirect' SOURCE,temp.POP_CRNT_DATE,temp.SHIFT_NAME,temp.SHIFT_ID,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,0 INCNTV_SLRY_HRS from(select POP_ID,POP_CRNT_DATE,SHIFT_NAME,c.SHIFT_ID from pop a, pyrl_cycle_stat b,shift_mstr c where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID#  and a.POP_POST_FLG = '1' and a.POP_UPDATE_PYRL = '0' and a.pop_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and a.shift_id = c.shift_id) temp,POP_EMP where temp.POP_ID = POP_EMP.POP_ID and POP_EMP.EMP_ID = #EMP_ID# group by POP_CRNT_DATE,SHIFT_NAME,SHIFT_ID";

    public static final String PYRL_EMPLOYEE_HRS_FOR_DATE_SELECT_SQL_QUERY = "select 'Production - Direct' SOURCE,temp.EMP_NAME,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from(select EMP_NAME,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,INCNTV_SLRY_HRS from prod a,prod_emp b,emp_mstr em where em.EMP_ID = b.EMP_ID and a.PROD_ID = b.PROD_ID and a.PROD_POST_FLG = '1' and a.PROD_UPDATE_PYRL = '0' and a.PROD_CRNT_DATE = #PROD_CRNT_DATE# and a.SHIFT_ID = #SHIFT_ID#) temp group by EMP_NAME union all select 'Non Production' SOURCE,temp.EMP_NAME,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from(select EMP_NAME,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,0 INCNTV_SLRY_HRS from n_prod a,nprod_emp b,emp_mstr em where em.EMP_ID = b.EMP_ID and a.NPROD_ID = b.NPROD_ID and a.NPROD_POST_FLG = '1' and a.NPROD_UPDATE_PYRL = '0' and a.NPROD_CRNT_DATE = #PROD_CRNT_DATE# and a.SHIFT_ID = #SHIFT_ID#) temp group by EMP_NAME union all select 'Production - InDirect' SOURCE,temp.EMP_NAME,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from(select EMP_NAME,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,0 INCNTV_SLRY_HRS from pop a,pop_emp b,emp_mstr em where em.EMP_ID = b.EMP_ID and a.POP_ID = b.POP_ID and a.POP_POST_FLG = '1' and a.POP_UPDATE_PYRL = '0' and a.POP_CRNT_DATE = #PROD_CRNT_DATE# and a.SHIFT_ID = #SHIFT_ID#) temp group by EMP_NAME  union all select 'Radial Production' SOURCE,temp.EMP_NAME,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from(select EMP_NAME,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,INCNTV_SLRY_HRS from radl a,radl_emp b,emp_mstr em where em.EMP_ID = b.EMP_ID and a.RADL_ID = b.RADL_ID and a.RADL_POST_FLG='1' and a.RADL_UPDATE_PYRL = '0' and a.RADL_CRNT_DATE = #PROD_CRNT_DATE# and a.SHIFT_ID = #SHIFT_ID#) temp group by EMP_NAME";

    public static final String PAYRL_CYCLE_TYPE_ADD_SQL_QUERY = "insert into PYRL_CYCLE_CONFIG values(#CYCLE_TYPE#,#CYCLE#)";

    public static final String PAYRL_CYCLE_TYPE_UPDATE_SQL_QUERY = "update PYRL_CYCLE_CONFIG set CYCLE_TYPE = #CYCLE_TYPE#,CYCLES = #CYCLE#";

    public static final String PYRL_INTERFACE_ADD_SQL_QUERY = "insert into PREPYRL values(PREPYRL_ID.nextval,#SHIFT_ID#,#PROD_CRNT_DATE#,#PREPYRL_DT_HRS#,#PREPYRL_OT_HRS#,#PREPYRL_RGLRSLRY_HRS#,#PREPYRL_OTSLRY_HRS#,#PREPYRL_INCNTVSLRY_HRS#,#PYRL_CYCLE_STAT_ID#,#EMP_ID#,#PREPYRL_DATA_SRC#,#PREPYRL_CREATEDBY#)";

    public static final String GET_FOR_PYRL_SQL_QUERY = "select PREPYRL_ID,PROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,EMP_ID,EMP_NAME,PREPYRL_DT_HRS, PREPYRL_OT_HRS, PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS from (select rownum r, PREPYRL_ID,PROD_CRNT_DATE,p.SHIFT_ID,SHIFT_NAME,p.EMP_ID,EMP_NAME, p.PREPYRL_DT_HRS, p.PREPYRL_OT_HRS, PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS from PREPYRL p,SHIFT_MSTR s,EMP_MSTR e where p.SHIFT_ID = s.SHIFT_ID and p.EMP_ID = e.EMP_ID and PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# and PREPYRL_ID not in(select PREPYRL_ID from PYRL where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)) where r>=#START_INDEX# and r<#START_INDEX#+#DISP_COUNT# order by PROD_CRNT_DATE,SHIFT_ID,EMP_NAME";

    //public static final String GET_FOR_CLOSE_PYRL_SQL_QUERY = "select
    // PA_COUNT,PREPYRL_ID,PROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,EMP_ID,EMP_NAME,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS
    // from (select rownum r,
    // p.PREPYRL_ID,PROD_CRNT_DATE,p.SHIFT_ID,SHIFT_NAME,p.EMP_ID,EMP_NAME,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS,PA.PA_COUNT
    // from PYRL p,SHIFT_MSTR s,EMP_MSTR e,PYRL_ADJSTMNT PA where p.SHIFT_ID =
    // s.SHIFT_ID and p.EMP_ID = e.EMP_ID and p.PREPYRL_ID = PA.PREPYRL_ID and
    // p.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#) where r>=#START_INDEX# and
    // r<#START_INDEX#+#DISP_COUNT#";

    public static final String GET_FOR_CLOSE_PYRL_SQL_QUERY = "select PREPYRL_ID,PROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,EMP_ID,EMP_NAME,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS,PA_COUNT from (select rownum r,PREPYRL_ID,PROD_CRNT_DATE,SHIFT_ID,SHIFT_NAME,EMP_ID,EMP_NAME,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS,PA_COUNT from  (select p.PREPYRL_ID,PROD_CRNT_DATE,p.SHIFT_ID,SHIFT_NAME,p.EMP_ID,EMP_NAME,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS,0 PA_COUNT from PYRL p,SHIFT_MSTR s,EMP_MSTR e  where p.SHIFT_ID = s.SHIFT_ID and p.EMP_ID = e.EMP_ID  and p.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# and p.PREPYRL_ID not in (select P.PREPYRL_ID from PYRL P,PYRL_ADJSTMNT PA where P.PREPYRL_ID = PA.PREPYRL_ID) union all select p.PREPYRL_ID,PROD_CRNT_DATE,p.SHIFT_ID,SHIFT_NAME,p.EMP_ID,EMP_NAME,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS,p.PA_COUNT from PYRL p,SHIFT_MSTR s,EMP_MSTR e,PYRL_ADJSTMNT PA  where p.SHIFT_ID = s.SHIFT_ID and p.EMP_ID = e.EMP_ID  and p.PREPYRL_ID = PA.PREPYRL_ID and p.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# and p.PREPYRL_ID in (select P.PREPYRL_ID from PYRL P,PYRL_ADJSTMNT PA where P.PREPYRL_ID = PA.PREPYRL_ID))) where r>=#START_INDEX# and r<#START_INDEX#+#DISP_COUNT# order by PROD_CRNT_DATE,SHIFT_ID,EMP_NAME";

    public static final String PYRL_ADD_SQL_QUERY = "insert into PYRL(SHIFT_ID,PROD_CRNT_DATE,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS,PA_COUNT,PYRL_CREATEDBY,PYRL_CYCLE_STAT_ID,PREPYRL_ID,EMP_ID) select SHIFT_ID,PROD_CRNT_DATE,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS,0,PREPYRL_CREATEDBY,PYRL_CYCLE_STAT_ID,PREPYRL_ID,EMP_ID from PREPYRL where PREPYRL_ID =#PREPYRL_ID#";

    public static final String PYRL_ADD_WITH_ADJSTMNT_SQL_QUERY = "insert into PYRL(SHIFT_ID,PROD_CRNT_DATE,PYRL_DT_HRS,PYRL_OT_HRS,PYRL_RGLRSLRY_HRS,PYRL_OTSLRY_HRS,PYRL_INCNTVSLRY_HRS,PA_COUNT,PYRL_CREATEDBY,PYRL_LAST_ADJST_DATE,PYRL_CYCLE_STAT_ID,PREPYRL_ID,EMP_ID) select SHIFT_ID,PROD_CRNT_DATE,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PA_CHNGD_RGLRSLRY_HRS,PA_CHNGD_OTSLRY_HRS,PA_CHNGD_INCNTVSLRY_HRS,PA.PA_COUNT,PA_CREATEDBY,PA_CHNGD_DATE,PP.PYRL_CYCLE_STAT_ID,PP.PREPYRL_ID,EMP_ID from PREPYRL PP,PYRL_ADJSTMNT PA where PP.PREPYRL_ID =#PREPYRL_ID# and PA.PREPYRL_ID = PP.PREPYRL_ID";

    public static final String PYRL_ID_CHECK_SQL_QUERY = "select count(*) from PYRL_ADJSTMNT where PREPYRL_ID = #PREPYRL_ID#";

    public static final String PYRL_ADJSTMNT_FILTER_SQL_QUERY = "select rownum r,SHIFT_NAME,EMP_NAME,PROD_CRNT_DATE,PREPYRL_ID,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS,PA_COUNT from (select SHIFT_NAME,SHIFT_ID,EMP_NAME,EMP_ID,EMP_TYP_ID,EMP_TYP_NAME,PROD_CRNT_DATE,PREPYRL_ID,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS,PA_COUNT,PYRL_CYCLE_STAT_ID from (select SHIFT_NAME,SHIFT_ID,EMP_NAME,EMP_ID,EMP_TYP_NAME,EMP_TYP_ID,PROD_CRNT_DATE,PREPYRL_ID,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS,PA_COUNT,PYRL_CYCLE_STAT_ID from (select PP.SHIFT_ID,SHIFT_NAME,PP.EMP_ID,EMP_NAME,EMP_TYP_NAME,ETM.EMP_TYP_ID,PROD_CRNT_DATE,PP.PREPYRL_ID,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS,0 PA_COUNT,PCS.PYRL_CYCLE_STAT_ID from PREPYRL PP,SHIFT_MSTR SM,EMP_MSTR EM,EMP_TYP_MSTR ETM,PYRL_CYCLE_STAT PCS where PP.SHIFT_ID = SM.SHIFT_ID and PP.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID and PP.PYRL_CYCLE_STAT_ID = PCS.PYRL_CYCLE_STAT_ID and PP.PREPYRL_ID not in (select P.PREPYRL_ID from PREPYRL P,PYRL_ADJSTMNT PA where P.PREPYRL_ID = PA.PREPYRL_ID)) union all select SHIFT_NAME,SHIFT_ID,EMP_NAME,EMP_ID,EMP_TYP_NAME,EMP_TYP_ID,PROD_CRNT_DATE,PREPYRL_ID,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PA_CHNGD_RGLRSLRY_HRS,PA_CHNGD_OTSLRY_HRS,PA_CHNGD_INCNTVSLRY_HRS,PA_COUNT,PYRL_CYCLE_STAT_ID from (select PP.SHIFT_ID,SHIFT_NAME,PP.EMP_ID,EMP_NAME,EMP_TYP_NAME,ETM.EMP_TYP_ID,PP.PREPYRL_ID,PROD_CRNT_DATE,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PA.PA_CHNGD_RGLRSLRY_HRS,PA.PA_CHNGD_OTSLRY_HRS,PA.PA_CHNGD_INCNTVSLRY_HRS,PA_COUNT,PCS.PYRL_CYCLE_STAT_ID from PREPYRL PP,SHIFT_MSTR SM,EMP_MSTR EM,EMP_TYP_MSTR ETM,PYRL_ADJSTMNT PA,PYRL_CYCLE_STAT PCS where PP.SHIFT_ID = SM.SHIFT_ID and PP.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID and PP.PREPYRL_ID = PA.PREPYRL_ID and PP.PYRL_CYCLE_STAT_ID = PCS.PYRL_CYCLE_STAT_ID and PP.PREPYRL_ID in (select PA.PREPYRL_ID from PREPYRL P,PYRL_ADJSTMNT PA where P.PREPYRL_ID = PA.PREPYRL_ID)))";

    public static final String GET_COUNT_FOR_PYRL_SQL_QUERY = "select count(*) from PREPYRL where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# and PREPYRL_ID not in(select PREPYRL_ID from PYRL where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)";

    public static final String GET_COUNT_FOR_CLOSE_PYRL_SQL_QUERY = "select count(*) from PYRL where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#";

    //public static final String PYRL_WITH_ADJSTMNT_FILTER_SQL_QUERY = "select
    // SHIFT_NAME,EMP_NAME,PROD_CRNT_DATE,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PA_CHNGD_RGLRSLRY_HRS,PA_CHNGD_OTSLRY_HRS,PA_CHNGD_INCNTVSLRY_HRS
    // from (select
    // PP.SHIFT_ID,SHIFT_NAME,PP.EMP_ID,EMP_NAME,EMP_TYP_NAME,ETM.EMP_TYP_ID,PROD_CRNT_DATE,PREPYRL_DT_HRS,PREPYRL_OT_HRS,PA.PA_CHNGD_RGLRSLRY_HRS,PA.PA_CHNGD_OTSLRY_HRS,PA.PA_CHNGD_INCNTVSLRY_HRS
    // from PREPYRL PP,SHIFT_MSTR SM,EMP_MSTR EM,EMP_TYP_MSTR ETM,PYRL_ADJSTMNT
    // PA where PP.SHIFT_ID = SM.SHIFT_ID and PP.EMP_ID = EM.EMP_ID and
    // EM.EMP_TYP_ID = ETM.EMP_TYP_ID and PP.PREPYRL_ID = PA.PREPYRL_ID and
    // PP.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)";
    
    public static final String PYRL_HRS_FROM_ADJSTMNT_SELECT_SQL_QUERY = "select PA_CHNGD_RGLRSLRY_HRS,PA_CHNGD_OTSLRY_HRS,PA_CHNGD_INCNTVSLRY_HRS from PYRL_ADJSTMNT where PREPYRL_ID = #PREPYRL_ID#";
    public static final String PROD_PYRL_UPDATE_SQL_QUERY = "update PROD SET PROD_UPDATE_PYRL = '1' WHERE PROD_ID in(select PROD_ID from PROD a, PYRL_CYCLE_STAT b where a.PROD_POST_FLG = '1' and a.PROD_CRNT_DATE between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and b.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)";
    public static final String NPROD_PYRL_UPDATE_SQL_QUERY = "update N_PROD SET NPROD_UPDATE_PYRL = '1' WHERE NPROD_ID in(select NPROD_ID from N_PROD a, PYRL_CYCLE_STAT b where a.NPROD_POST_FLG = '1' and a.NPROD_CRNT_DATE between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and b.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)";
    public static final String RADL_PYRL_UPDATE_SQL_QUERY = "update RADL SET RADL_UPDATE_PYRL = '1' WHERE RADL_ID in(select RADL_ID from RADL a, PYRL_CYCLE_STAT b where a.RADL_POST_FLG = '1' and a.RADL_CRNT_DATE between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and b.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)";
    public static final String POP_PYRL_UPDATE_SQL_QUERY = "update POP SET POP_UPDATE_PYRL = '1' WHERE POP_ID in(select POP_ID from POP a, PYRL_CYCLE_STAT b where a.POP_POST_FLG = '1' and a.POP_CRNT_DATE between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and b.PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)";
    
    
    public static final String PYRL_CYCLE_STAT_UPDATE_SQL_QUERY = "update PYRL_CYCLE_STAT set IS_PYRL_CREATED = '1' where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#";
    public static final String PYRL_ADJSTMNT_LOG_ADD_SQL_QUERY = "insert into LOG_PYRL_ADJSTMNT select * from PYRL_ADJSTMNT where PREPYRL_ID = #PREPYRL_ID# ";
    public static final String PYRL_ADJSTMNT_UPDATE_SQL_QUERY = "update PYRL_ADJSTMNT set PA_CHNGD_DATE = #PA_CHNGD_DATE#,PA_CHNGD_RGLRSLRY_HRS  = #PA_CHNGD_RGLRSLRY_HRS#,PA_CHNGD_OTSLRY_HRS = #PA_CHNGD_OTSLRY_HRS#,PA_CHNGD_INCNTVSLRY_HRS = #PA_CHNGD_INCNTVSLRY_HRS#, PA_COUNT = #PA_COUNT#,PA_CREATEDBY = #PA_CREATEDBY#,PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# where PREPYRL_ID = #PREPYRL_ID#";

    public static final String PYRL_ADJSTMNT_ADD_SQL_QUERY = "insert into PYRL_ADJSTMNT values(#PA_CHNGD_DATE#,#PA_CHNGD_RGLRSLRY_HRS#,#PA_CHNGD_OTSLRY_HRS#,#PA_CHNGD_INCNTVSLRY_HRS#,#PA_COUNT#,#PREPYRL_ID#,#PYRL_CYCLE_STAT_ID#,#PA_CREATEDBY#)";

    public static final String PYRL_CHECK_SQL_QUERY = "select count(*) from PYRL where PREPYRL_ID = #PREPYRL_ID#";

    public static final String PYRL_UPDATE_SQL_QUERY = "update PYRL set PYRL_RGLRSLRY_HRS = #PA_CHNGD_RGLRSLRY_HRS#,PYRL_OTSLRY_HRS = #PA_CHNGD_OTSLRY_HRS#,PYRL_INCNTVSLRY_HRS = #PA_CHNGD_INCNTVSLRY_HRS#,PA_COUNT = #PA_COUNT#,PYRL_LAST_ADJST_DATE=#PA_CHNGD_DATE#,PYRL_CREATEDBY = #PA_CREATEDBY# where PREPYRL_ID = #PREPYRL_ID#";

    public static final String PYRL_CYCLE_STAT_CLOSE_SQL_QUERY = "update PYRL_CYCLE_STAT set IS_PYRL_CLOSED = '1' where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#";

    public static final String PYRL_EMPLOYEE_DATE_SHIFT_DETAILS_SELECT_SQL_QUERY = "select PROD_CRNT_DATE,SHIFT_NAME,SM.SHIFT_ID,sum(DT_HRS) DT_HRS,sum(OT_HRS) OT_HRS,sum(DT_SLRY_HRS) DT_SLRY_HRS,sum(OT_SLRY_HRS) OT_SLRY_HRS,sum(INCNTV_SLRY_HRS) INCNTV_SLRY_HRS from(select a.PROD_ID,PROD_CRNT_DATE,SHIFT_ID,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,INCNTV_SLRY_HRS from prod a,pyrl_cycle_stat b,PROD_EMP PE where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.PROD_POST_FLG = '1' and a.PROD_UPDATE_PYRL = '0' and a.prod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and PE.PROD_ID = a.PROD_ID union all select a.NPROD_ID,NPROD_CRNT_DATE,SHIFT_ID,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,0 INCNTV_SLRY_HRS from n_prod a,pyrl_cycle_stat b,NPROD_EMP PE where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.NPROD_POST_FLG = '1' and a.NPROD_UPDATE_PYRL = '0' and a.nprod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and PE.NPROD_ID = a.NPROD_ID union all select a.RADL_ID,RADL_CRNT_DATE,SHIFT_ID,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,INCNTV_SLRY_HRS from radl a,pyrl_cycle_stat b,RADL_EMP PE where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.RADL_POST_FLG='1' and a.RADL_UPDATE_PYRL = '0' and a.radl_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and PE.RADL_ID = a.RADL_ID union all select a.POP_ID,POP_CRNT_DATE,SHIFT_ID,DT_HRS,OT_HRS,DT_SLRY_HRS,OT_SLRY_HRS,0 INCNTV_SLRY_HRS from pop a,pyrl_cycle_stat b,POP_EMP PE where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.POP_POST_FLG = '1' and a.POP_UPDATE_PYRL = '0' and a.pop_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE and PE.POP_ID = a.POP_ID) temp,SHIFT_MSTR SM where temp.SHIFT_ID = SM.SHIFT_ID group by PROD_CRNT_DATE,SHIFT_NAME,SM.SHIFT_ID";

    public static final String CHECK_ALL_ENTRIES_POSTED_SQL_QUERY = "select count(*) from(select a.PROD_ID from prod a,pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.PROD_POST_FLG = '0' and a.prod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE union all select a.NPROD_ID from n_prod a,pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.NPROD_POST_FLG = '0' and a.nprod_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE union all select a.RADL_ID from radl a,pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.RADL_POST_FLG='0' and a.radl_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE union all select a.POP_ID from pop a,pyrl_cycle_stat b where b.pyrl_cycle_stat_id = #PYRL_CYCLE_STAT_ID# and a.POP_POST_FLG = '0' and a.pop_crnt_date between b.PYRL_CYCLE_STAT_FROM_DATE and b.PYRL_CYCLE_STAT_TO_DATE)";

    public static final String PYRL_CYCLE_STAT_CHECK_SQL_QUERY = " SELECT COUNT(*) FROM PREPYRL WHERE PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# and PREPYRL_ID NOT IN (SELECT PREPYRL_ID FROM PYRL where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID#)";

    //REPORT
	public static final String CHECK_DATE_IN_CUSTOM_NON_AVBLTY_SQL_QUERY = "SELECT COUNT(1) cnt from CUSTOM_NON_AVBLTY CNA,AVBLTY_MSTR AM  where CUSTOM_N_AVBLTY_FORDATE = #CURRENT_DATE# and CNA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_N_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE";
	public static final String CHECK_DATE_IN_CUSTOM_AVBLTY_SQL_QUERY = "SELECT CUSTOM_AVBLTY_STARTTIME, CUSTOM_AVBLTY_ENDTIME, SHIFT_ID from CUSTOM_AVBLTY CNA,AVBLTY_MSTR AM  where CUSTOM_AVBLTY_FORDATE = #CURRENT_DATE# and CNA.AVBLTY_ID = AM.AVBLTY_ID and AM.AVBLTY_CURRENT = '1' and CUSTOM_AVBLTY_FORDATE between AM.AVBLTY_FROMDATE and AM.AVBLTY_TODATE";
	public static final String CHECK_DATE_IN_BASE_CAL = "SELECT BASE_CAL_VAR_STARTTIME, BASE_CAL_VAR_ENDTIME, SHIFT_ID from BASE_CAL_VAR WHERE BASE_CAL_VAR_DAY = #DAY#";
    
    public static final String EMP_ID_SELECT_SQL_QUERY = "select P.EMP_ID,EMP_NAME from PYRL P,EMP_MSTR EM where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# and P.EMP_ID = EM.EMP_ID order by EMP_NAME";
    public static final String SHIFT_WISE_DETAILS_SELECT_SQL_QUERY = "select P.*,SHIFT_NAME from PYRL P,SHIFT_MSTR SM where PYRL_CYCLE_STAT_ID = #PYRL_CYCLE_STAT_ID# and EMP_ID =  #EMP_ID# and P.SHIFT_ID = SM.SHIFT_ID";
    public static final String SHIFT_WISE_DETAILS_FROM_LOG_PA_SELECT_SQL_QUERY = "select PA_CHNGD_RGLRSLRY_HRS,PA_CHNGD_OTSLRY_HRS,PA_CHNGD_INCNTVSLRY_HRS,PA_CREATEDBY from LOG_PYRL_ADJSTMNT where PREPYRL_ID = #PREPYRL_ID# and PA_COUNT = #PA_COUNT#";
    public static final String SHIFT_WISE_DETAILS_FROM_PREPYRL_SELECT_SQL_QUERY = "select PREPYRL_RGLRSLRY_HRS,PREPYRL_OTSLRY_HRS,PREPYRL_INCNTVSLRY_HRS,PREPYRL_CREATEDBY from PREPYRL where PREPYRL_ID = #PREPYRL_ID#";



    public static final String SELECT_WO_JOB_HSTRY_DETAILS_SQL_QUERY = "select WJH.WOJB_ID,WJH.WO_NO,WJH.JB_NAME,WJH.JB_DWG_NO,WJH.JB_RVSN_NO,WJH.JB_MATL_TYP,WOJH.JB_ID,WOJH.WOJB_QTY from WO_JB_HSTRY WJH,WO_HEADER WH,WO_JB_HEADER WOJH ,CUST_MSTR CM where CM.CUST_ID = WJH.CUST_ID and WJH.WO_NO = WH.WO_NO and WJH.WOJB_ID = WOJH.WOJB_ID and WH.WO_STAT = 'C' and CM.CUST_ID = #CUST_ID# order by WOJB_ID";
    public static final String PROD_DETAILS_SELECT_SQL_QUERY = "select PROD_TOT_HRS,PROD_QTY_SNOS from PROD where WOJB_ID = #WOJB_ID# union all select RADL_TOT_HRS,RADL_QTY_SNOS from RADL where WOJB_ID = #WOJB_ID# and RADL_COMPLETION_FLG = '1'";

    public static final String SELECT_EMPID_FOR_REPORT_SQL_QUERY = "select distinct EM.EMP_ID, EMP_NAME from PYRL P,EMP_MSTR EM where PROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# and P.EMP_ID = EM.EMP_ID and EM.EMP_ISVALID = 1 and EM.EMP_TYP_ID != 3  and EMP_ISVALID = 1 order by EM.EMP_NAME";
	public static final String SELECT_EMPID_FOR_VALIDATION_REPORT_SQL_QUERY = "select distinct EMP_ID,EMP_NAME FROM (select distinct EM.EMP_ID, EMP_NAME from PROD P,PROD_EMP PE,EMP_MSTR EM where PROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# AND P.PROD_ID = PE.PROD_ID and PE.EMP_ID = EM.EMP_ID and EM.EMP_ISVALID = 1 and EM.EMP_TYP_ID != 3  and EMP_ISVALID = 1 union all select distinct EM.EMP_ID, EMP_NAME from N_PROD NP,NPROD_EMP NPE,EMP_MSTR EM where NPROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# AND NP.NPROD_ID = NPE.NPROD_ID and NPE.EMP_ID = EM.EMP_ID and EM.EMP_ISVALID = 1 and EM.EMP_TYP_ID != 3  and EMP_ISVALID = 1 union all select distinct EM.EMP_ID, EMP_NAME from POP P,POP_EMP PE,EMP_MSTR EM where POP_CRNT_DATE between #FROM_DATE# and #TO_DATE# AND P.POP_ID = PE.POP_ID and PE.EMP_ID = EM.EMP_ID and EM.EMP_ISVALID = 1 and EM.EMP_TYP_ID != 3  and EMP_ISVALID = 1 union all select distinct EM.EMP_ID, EMP_NAME from RADL R,RADL_EMP RE,EMP_MSTR EM where RADL_CRNT_DATE between #FROM_DATE# and #TO_DATE# AND R.RADL_ID = RE.RADL_ID and RE.EMP_ID = EM.EMP_ID and EM.EMP_ISVALID = 1 and EM.EMP_TYP_ID != 3  and EMP_ISVALID = 1)  order by EMP_NAME";
    public static final String SELECT_EMPDETAILS_FOR_REPORT_SQL_QUERY = "select SUM(PYRL_DT_HRS) DTHRS, SUM(PYRL_OT_HRS) OTHRS, SUM(PYRL_RGLRSLRY_HRS) RGLRSLRY,SUM(PYRL_OTSLRY_HRS) OTSLRY,SUM(PYRL_INCNTVSLRY_HRS) INCNTVSLRY from PYRL P where EMP_ID = #EMP_ID# and PROD_CRNT_DATE = #PROD_CRNT_DATE#";

    public static final String SELECT_MONTHLYDETAILS_FOR_REPORT_SQL_QUERY = "select SUM(PYRL_DT_HRS) DTHRS,SUM(PYRL_OT_HRS) OTHRS from PYRL P where EMP_ID = #EMP_ID# and PROD_CRNT_DATE = TRUNC(#PROD_CRNT_DATE#)";
   	public static final String SELECT_MONTHLYDETAILS_FOR_VALIDATION_REPORT_SQL_QUERY = "select SUM(DT_HRS) DTHRS,SUM(OT_HRS) OTHRS from(select SUM(DT_HRS) DT_HRS, SUM(OT_HRS) OT_HRS from PROD P,PROD_EMP PE where P.PROD_CRNT_DATE = #PROD_CRNT_DATE# AND P.PROD_ID = PE.PROD_ID AND PE.EMP_ID = #EMP_ID# union all select SUM(DT_HRS) DT_HRS, SUM(OT_HRS) OT_HRS from N_PROD NP,NPROD_EMP NPE where NP.NPROD_CRNT_DATE = #PROD_CRNT_DATE# AND NP.NPROD_ID = NPE.NPROD_ID AND NPE.EMP_ID =  #EMP_ID# union all select SUM(DT_HRS) DT_HRS, SUM(OT_HRS) OT_HRS from POP P,POP_EMP PE where P.POP_CRNT_DATE = #PROD_CRNT_DATE# AND P.POP_ID = PE.POP_ID AND PE.EMP_ID =  #EMP_ID# union all select SUM(DT_HRS) DT_HRS, SUM(OT_HRS) OT_HRS from RADL R,RADL_EMP RE where R.RADL_CRNT_DATE = #PROD_CRNT_DATE# AND R.RADL_ID = RE.RADL_ID AND RE.EMP_ID =  #EMP_ID#)";

    public static final String SELECT_MACHINE_DETAILS_SQL_QUERY = "select MC_CDE,MC_NAME from MC_MSTR where MC_ISVALID = 1 order by MC_CDE";

    // post flag = 1 included..
    /*public static final String SELECT_MACHINE_DETAILS_WITH_PROD_HOURS_SQL_QUERY = "select sum(PROD_TOT_HRS) PROD_TOT_HRS from PROD where MC_CDE = #MC_CDE# and PROD.PROD_POST_FLG = '1' and PROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# union all select sum(RADL_TOT_HRS) RADL_TOT_HRS from RADL where MC_CDE = #MC_CDE# and RADL_POST_FLG = '1' and RADL_CRNT_DATE between #FROM_DATE# and #TO_DATE#";

    public static final String SELECT_MACHINE_DETAILS_WITH_NPROD_IDLE_HOURS_SQL_QUERY = "select sum(NPROD_TOT_HRS) NPROD_TOT_HRS from N_PROD where MC_CDE = #MC_CDE# and N_PROD.NPROD_POST_FLG = '1' and NPROD_IDL_BRKDWN = 'Idle' and NPROD_CRNT_DATE between #FROM_DATE# and #TO_DATE#";

    public static final String SELECT_MACHINE_DETAILS_WITH_NPROD_BRKDWN_HOURS_SQL_QUERY = "select sum(NPROD_TOT_HRS) NPROD_TOT_HRS from N_PROD where MC_CDE = #MC_CDE# and N_PROD.NPROD_POST_FLG = '1' and NPROD_IDL_BRKDWN = 'BreakDown' and NPROD_CRNT_DATE between #FROM_DATE# and #TO_DATE#";

    public static final String SELECT_MECH_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Mechanical' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_ELEC_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Electrical' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_INST_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Instrument' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_MAN_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Man' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_JOB_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Job' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_DRG_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Drawing No' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_PCC_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'PCC' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_TOOLS_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Tools' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_GAUGE_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Gauge' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_OTHERS_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Others' and MC_CDE = #MC_CDE# and NP.NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";
    */

     //  post flag = 1 removed..
    public static final String SELECT_MACHINE_DETAILS_WITH_PROD_HOURS_SQL_QUERY = "select sum(PROD_TOT_HRS) PROD_TOT_HRS from PROD where MC_CDE = #MC_CDE# and PROD_CRNT_DATE between #FROM_DATE# and #TO_DATE# union all select sum(RADL_TOT_HRS) RADL_TOT_HRS from RADL where MC_CDE = #MC_CDE# and RADL_POST_FLG = '1' and RADL_CRNT_DATE between #FROM_DATE# and #TO_DATE#";

    public static final String SELECT_MACHINE_DETAILS_WITH_NPROD_IDLE_HOURS_SQL_QUERY = "select sum(NPROD_TOT_HRS) NPROD_TOT_HRS from N_PROD where MC_CDE = #MC_CDE# and NPROD_IDL_BRKDWN = 'Idle' and NPROD_CRNT_DATE between #FROM_DATE# and #TO_DATE#";

    public static final String SELECT_MACHINE_DETAILS_WITH_NPROD_BRKDWN_HOURS_SQL_QUERY = "select sum(NPROD_TOT_HRS) NPROD_TOT_HRS from N_PROD where MC_CDE = #MC_CDE# and NPROD_IDL_BRKDWN = 'BreakDown' and NPROD_CRNT_DATE between #FROM_DATE# and #TO_DATE#";

    public static final String SELECT_MECH_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Mechanical' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_ELEC_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Electrical' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_INST_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Instrument' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_MAN_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Man' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_JOB_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Job' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_DRG_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Drawing No' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_PCC_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'PCC' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_TOOLS_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Tools' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_GAUGE_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Gauge' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_OTHERS_HRS_SQL_QUERY = "select sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Others' and MC_CDE = #MC_CDE# and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    //public static final String SELECT_MONTHLY_MECH_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Mechanical' and MC_CDE = #MC_CDE#
    // and to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_ELEC_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Electrical' and MC_CDE = #MC_CDE#
    // and to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_INST_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Instrument' and MC_CDE = #MC_CDE#
    // and to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_MAN_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Man' and MC_CDE = #MC_CDE# and
    // to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_JOB_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Job' and MC_CDE = #MC_CDE# and
    // to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_DRG_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Drawing No' and MC_CDE = #MC_CDE#
    // and to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_PCC_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'PCC' and MC_CDE = #MC_CDE# and
    // to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_TOOLS_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Tools' and MC_CDE = #MC_CDE# and
    // to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_GAUGE_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Gauge' and MC_CDE = #MC_CDE# and
    // to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";
    //public static final String SELECT_MONTHLY_OTHERS_HRS_SQL_QUERY = "select
    // sum(nprod_tot_hrs) TOT_HRS from N_PROD NP,IDL_BRKDWN_RSN IBR where
    // NP.RSN_ID = IBR.RSN_ID and IBR.RSN = 'Others' and MC_CDE = #MC_CDE# and
    // to_char(NPROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY')";

    public static final String SELECT_PROD_MC_HRS_SQL_QUERY = "select sum(PROD_TOT_HRS) PROD_TOT_HRS from PROD where MC_CDE = #MC_CDE# and PROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY') and PROD_POST_FLG = '1'";

    //public static final String SELECT_PROD_MC_HRS_SQL_QUERY = "select
    // sum(PROD_TOT_HRS) PROD_TOT_HRS from PROD where MC_CDE = #MC_CDE# and
    // to_char(PROD_CRNT_DATE,'MM-YY') = to_char(#DATE#,'MM-YY') and
    // PROD_POST_FLG = '1'";

    //public static final String SELECT_RADL_MC_HRS_SQL_QUERY = "select
    // sum(RADL_TOT_HRS) RADL_TOT_HRS from RADL where MC_CDE = #MC_CDE# and
    // RADL_CRNT_DATE between #FROM_DATE# and #TO_DATE# and RADL_POST_FLG =
    // '1'";

    public static final String SELECT_RADL_MC_HRS_SQL_QUERY = "select sum(RADL_TOT_HRS) RADL_TOT_HRS from RADL where MC_CDE = #MC_CDE# and RADL_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY') and RADL_POST_FLG = '1'";

    public static final String SELECT_NPROD_MC_HRS_SQL_QUERY = "select sum(NPROD_TOT_HRS) NPROD_TOT_HRS from N_PROD where MC_CDE = #MC_CDE# and NPROD_POST_FLG = '1' and NPROD_CRNT_DATE between TO_DATE(#FROM_DATE#,'DD-MM-YY') and TO_DATE(#TO_DATE#,'DD-MM-YY')";

    public static final String SELECT_ALL_MACHINES_SQL_QUERY = "select MC_CDE from MC_MSTR order by MC_CDE";

    public static final String SELECT_ALL_CUSTOMER_NAME = "select CUST_ID,CUST_NAME from CUST_MSTR order by CUST_NAME";

    public static final String SELECT_JOB_DETAILS_SQL_QUERY = "select JB_ID,JB_NAME,JB_DRWG_NO from JB_MSTR where CUST_ID = #CUST_ID#";

    public static final String SELECT_VTL_HRS_SQL_QUERY = "select sum(jbopn_stdhrs) VTL_HRS from jb_opn_mstr jom,opn_gp_mstr ogm where jom.OPN_GP_ID = ogm.OPN_GP_ID and UPPER(ogm.OPN_GP_CODE) LIKE 'VTL' and jom.JB_ID = #JB_ID#";

    public static final String SELECT_HB_HRS_SQL_QUERY = "select sum(jbopn_stdhrs) HB_HRS from jb_opn_mstr jom,opn_gp_mstr ogm where jom.OPN_GP_ID = ogm.OPN_GP_ID and UPPER(ogm.OPN_GP_CODE) LIKE 'BORING' and jom.JB_ID = #JB_ID#";

    public static final String SELECT_DRL_HRS_SQL_QUERY = "select sum(jbopn_stdhrs) DRL_HRS from jb_opn_mstr jom,opn_gp_mstr ogm where jom.OPN_GP_ID = ogm.OPN_GP_ID and UPPER(ogm.OPN_GP_CODE) LIKE 'DRILLING'  and jom.JB_ID = #JB_ID#";

    public static final String FETCH_EMPLOYEE_PERFORMANCE_SQL_QUERY = "select PROD_CRNT_DATE,MC_CDE,SHIFT_NAME,WO_NO,CUST_NAME || ' / ' || JB_NAME || ' / ' || JB_DWG_NO || ' / ' || PROD_QTY_SNOS DETAILS,PROD_START_OPN,PROD_END_OPN,DT_HRS,OT_HRS,PROD_STD_HRS,OPN_HRS,INCNTV_SLRY_HRS,DT_SLRY_HRS,OT_SLRY_HRS FROM((select P.PROD_CRNT_DATE,P.MC_CDE,SM.SHIFT_NAME,WJH.WO_NO,CM.CUST_NAME,WJH.JB_NAME,WJH.JB_DWG_NO,P.PROD_QTY_SNOS,P.PROD_START_OPN,P.PROD_END_OPN,PE.DT_HRS,PE.OT_HRS,P.PROD_STD_HRS,PE.DT_HRS + PE.OT_HRS OPN_HRS,PE.DT_SLRY_HRS,PE.OT_SLRY_HRS,PE.INCNTV_SLRY_HRS from PROD P,SHIFT_MSTR SM,CUST_MSTR CM,WO_JB_HSTRY WJH,PROD_EMP PE where P.SHIFT_ID = SM.SHIFT_ID and P.WOJB_ID = WJH.WOJB_ID and WJH.CUST_ID = CM.CUST_ID and P.PROD_ID = PE.PROD_ID and PE.EMP_ID = #EMP_ID# and PROD_CRNT_DATE between #PROD_START_DATE# and #PROD_END_DATE#) union all (select R.RADL_CRNT_DATE,R.MC_CDE,SM.SHIFT_NAME,WJH.WO_NO,CM.CUST_NAME,WJH.JB_NAME,WJH.JB_DWG_NO,R.RADL_QTY_SNOS,R.RADL_START_OPN,R.RADL_END_OPN,PE.DT_HRS,PE.OT_HRS,R.RADL_STD_HRS,PE.DT_HRS + PE.OT_HRS OPN_HRS,PE.DT_SLRY_HRS,PE.OT_SLRY_HRS,PE.INCNTV_SLRY_HRS from RADL R,SHIFT_MSTR SM,CUST_MSTR CM,WO_JB_HSTRY WJH,RADL_EMP PE where R.SHIFT_ID = SM.SHIFT_ID and R.WOJB_ID = WJH.WOJB_ID and WJH.CUST_ID = CM.CUST_ID and R.RADL_ID = PE.RADL_ID and PE.EMP_ID = #EMP_ID# and RADL_CRNT_DATE between #PROD_START_DATE# and #PROD_END_DATE#)) order by PROD_CRNT_DATE,MC_CDE";

    public static final String FETCH_PRODUCTION_OF_MACHINE_SQL_QUERY = "select PROD_CRNT_DATE,SHIFT_NAME,WO_NO,JB_DRWG_NO,CUST_NAME,JB_NAME,PROD_TOT_QTY,WOJB_SNO,PROD_START_OPN,PROD_END_OPN,PROD_STD_HRS,PROD_TOT_HRS ACTUAL_HRS,EMP_NAME from (select P.PROD_CRNT_DATE,SM.SHIFT_NAME,WJHS.WO_NO,JM.JB_DRWG_NO,CM.CUST_NAME,JM.JB_NAME,P.PROD_TOT_QTY,WJH.WOJB_SNO,P.PROD_START_OPN,P.PROD_END_OPN,P.PROD_STD_HRS,P.PROD_TOT_HRS,EM.EMP_NAME from PROD P,SHIFT_MSTR SM,WO_JB_HEADER WJH,WO_JB_HSTRY WJHS,CUST_MSTR CM,JB_MSTR JM,PROD_EMP PE,EMP_TYP_MSTR ETM,EMP_MSTR EM where P.WOJB_ID = WJH.WOJB_ID and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = CM.CUST_ID and P.SHIFT_ID = SM.SHIFT_ID and JM.JB_ID = WJH.JB_ID and P.PROD_ID = PE.PROD_ID and PE.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID and ETM.EMP_TYP_NAME = 'Operator' and P.MC_CDE = #MC_CDE# and PROD_CRNT_DATE between #PROD_START_DATE# and #PROD_END_DATE# union all select R.RADL_CRNT_DATE,SM.SHIFT_NAME,WJHS.WO_NO,JM.JB_DRWG_NO,CM.CUST_NAME,JM.JB_NAME,R.RADL_TOT_QTY,WJH.WOJB_SNO,R.RADL_START_OPN,R.RADL_END_OPN,R.RADL_STD_HRS,R.RADL_TOT_HRS,EM.EMP_NAME from RADL R,SHIFT_MSTR SM,WO_JB_HEADER WJH,WO_JB_HSTRY WJHS,CUST_MSTR CM,JB_MSTR JM,RADL_EMP RE,EMP_TYP_MSTR ETM,EMP_MSTR EM where R.WOJB_ID = WJH.WOJB_ID and WJH.WOJB_ID = WJHS.WOJB_ID and WJHS.CUST_ID = CM.CUST_ID and R.SHIFT_ID = SM.SHIFT_ID and JM.JB_ID = WJH.JB_ID and R.RADL_ID = RE.RADL_ID and RE.EMP_ID = EM.EMP_ID and EM.EMP_TYP_ID = ETM.EMP_TYP_ID and ETM.EMP_TYP_NAME = 'Operator' and R.MC_CDE = #MC_CDE# and RADL_CRNT_DATE between #PROD_START_DATE# and #PROD_END_DATE#) order by PROD_CRNT_DATE,SHIFT_NAME,WO_NO";

    public static final String FETCH_QUANTITY_PRODUCED_SQL_QUERY = "select JB_NAME,JB_DRWG_NO,QTY from (select JM.JB_NAME,JM.JB_DRWG_NO,count(WJS.WOJB_ID) QTY from WO_JB_STAT WJS, WO_JB_HEADER WJH,JB_MSTR JM,PROD P where WJS.WOJBSTAT_SNO_STAT = 'C' and WJH.WOJB_ID = WJS.WOJB_ID and JM.JB_ID = WJH.JB_ID and WJH.WOJB_ID = P.WOJB_ID and PROD_CRNT_DATE between #PROD_START_DATE# and #PROD_END_DATE# group by WJS.WOJB_ID,JM.JB_NAME ,JM.JB_DRWG_NO union select JM.JB_NAME,JM.JB_DRWG_NO,count(WJS.WOJB_ID) quantity from WO_JB_STAT WJS, WO_JB_HEADER WJH,JB_MSTR JM,RADL P where WJS.WOJBSTAT_SNO_STAT = 'C' and WJH.WOJB_ID = WJS.WOJB_ID and JM.JB_ID = WJH.JB_ID and WJH.WOJB_ID = P.WOJB_ID and RADL_CRNT_DATE between #PROD_START_DATE# and #PROD_END_DATE# group by WJS.WOJB_ID,JM.JB_NAME ,JM.JB_DRWG_NO)A1";

    public static final String FETCH_WO_REFERENCE_SQL_QUERY = "select WO_DATE,WO_NO,JB_NAME,JB_DRWG_NO,JB_RVSN_NO,JB_MATL_TYP,WOJB_QTY from WO_HEADER WH,WO_JB_HEADER WJH,JB_MSTR JM where WH.WO_ID = WJH.WO_ID and WJH.JB_ID = JM.JB_ID and CUST_ID = #CUST_ID# and WO_DATE between #PROD_START_DATE# and #PROD_END_DATE# order by WO_DATE,WO_NO";
    public static final String PRODID_SELECT_FOR_REPORT_SQL_QUERY = "select PROD_ID from PROD where PROD_CRNT_DATE = #PROD_CRNT_DATE# and PROD_ISVALID = 1";

    public static final String GET_LOG_PROD_DETAILS_SQL_QUERY = "select PR.MC_CDE,PR.PROD_CRNT_DATE,PR.SHIFT_ID,SM.SHIFT_NAME,PR.PROD_WORK_TYP,PR.PROD_INCNTV_FLG,PR.WOJB_ID,WOJHS.WO_NO,WH.WO_ID,WOJHS.JB_NAME,WOJHS.JB_DWG_NO,WOJHS.JB_RVSN_NO,WOJHS.JB_MATL_TYP,PR.PROD_QTY_SNOS,PR.PROD_TOT_QTY,PR.PROD_START_OPN,PR.PROD_END_OPN,PR.PROD_STD_HRS,PR.PROD_TOT_HRS,PR.PROD_UPDATE_PYRL,PR.PROD_UPDATE_WO,PR.PROD_POST_FLG,PR.IS_DLTD,PROD_MODIFYCOUNT,PROD_CREATEDBY,PROD_ISVALID,PR.PROD_DATESTAMP from LOG_PROD PR,SHIFT_MSTR SM,WO_JB_HSTRY WOJHS,WO_HEADER WH where PR.PROD_ID = #PROD_ID# and PR.WOJB_ID = WOJHS.WOJB_ID and PR.SHIFT_ID = SM.SHIFT_ID and WOJHS.WO_NO=WH.WO_NO and PROD_MODIFYCOUNT = #PROD_MODIFYCOUNT#";
    public static final String GET_LOG_PROD_EMP_DETAILS_SQL_QUERY = "select PRODEMP.*,EMP.EMP_NAME,EMPTYP.EMP_TYP_NAME,EMPTYP.EMP_TYP_ID from LOG_PROD_EMP PRODEMP,EMP_MSTR EMP,EMP_TYP_MSTR EMPTYP where PRODEMP.PROD_ID = #PROD_ID# and PRODEMP.EMP_ID = EMP.EMP_ID and EMP.EMP_TYP_ID = EMPTYP.EMP_TYP_ID and PROD_MODIFYCOUNT = #PROD_MODIFYCOUNT#";

    public static final String PROD_SELECT_BY_MACHINE = "select P.*,SHIFT_NAME,WJHS.WO_NO,JB_NAME from PROD P,SHIFT_MSTR SM,WO_JB_HSTRY WJHS where P.SHIFT_ID = SM.SHIFT_ID and P.WOJB_ID = WJHS.WOJB_ID and MC_CDE = #MC_CDE# and PROD_CRNT_DATE >= #FROM_DATE# and PROD_CRNT_DATE <= #TO_DATE#";

	public static final String GET_FINISHED_QUANTITY = "SELECT WOJBSTAT_SNO FROM WO_JB_STAT WHERE WOJB_ID = #WOJB_ID# AND WOJBSTAT_SNO_STAT IN ('C','D') GROUP BY WOJBSTAT_SNO";
	public static final String 	FETCH_JOB_DETAILS_FOR_REPORT = "select rownum r, JB_NAME, JB_DWG_NO, WOJB_QTY, WOJB_ID FROM (select * from (SELECT WJHS.* FROM WO_JB_HEADER WJH,WO_JB_HSTRY WJHS, WO_HEADER WH where WJH.WOJB_ID = WJHS.WOJB_ID AND WJH.WO_ID = WH.WO_ID)A";
    //SECURITY ADMIN///

    public static final String GET_ALL_GRP_FILTER_SQL_QUERY = "select rownum r,ROLE_ID,ROLE_NAME,ROLE_DESC,ROLE_ISVALID from (select distinct(ROLE_ID),ROLE_NAME,ROLE_DESC,ROLE_ISVALID from (select RL.ROLE_ID,RL.ROLE_NAME,RL.ROLE_DESC,RL.ROLE_ISVALID,RES.RESRC_ID, RES.RESRC_NAME from ROLE_MSTR RL, ROLE_RESRC RLRES,RESRC_MSTR RES where RL.ROLE_ID = RLRES.ROLE_ID(+) and RLRES.RESRC_ID = RES.RESRC_ID(+))";

    public static final String GRP_ADD_SQL_QUERY = "insert into ROLE_MSTR(ROLE_ID, ROLE_NAME, ROLE_DESC) values(ROLE_ID.nextval, #ROLE_NAME#, #ROLE_DESC#)";

    public static final String GET_CURRENT_GRP_ID_SQL_QUERY = "SELECT ROLE_ID.currval FROM DUAL";

    public static final String ADD_GRP_RES_SQL_QUERY = "insert into ROLE_RESRC(ROLE_ID, RESRC_ID) values (#ROLE_ID#,#RESRC_ID#)";

    public static final String DELETE_GRP_RES_SQL_QUERY = "delete from ROLE_RESRC where ROLE_ID=#ROLE_ID#";

    public static final String GRP_UPDATE_SQL_QUERY = "update ROLE_MSTR set ROLE_NAME = #ROLE_NAME#, ROLE_DESC=#ROLE_DESC#,ROLE_DATESTAMP=systimestamp where ROLE_ID=#ROLE_ID#";

    public static final String GET_ALL_GRP_ID_SQL_QUERY = "select ROLE_ID,ROLE_NAME from ROLE_MSTR where ROLE_ISVALID != 0 order by ROLE_NAME";

    public static final String GET_GRP_RES_SQL_QUERY = "SELECT RESRC_ID, RESRC_NAME FROM RESRC_MSTR WHERE RESRC_ID IN( SELECT RESRC_ID FROM ROLE_RESRC WHERE ROLE_ID=#ROLE_ID# )";

    public static final String GET_GRP_DETAIL_SQL_QUERY = "select RL.ROLE_ID, RL.ROLE_NAME, ROLE_DESC,RL.ROLE_DATESTAMP, RL.ROLE_ISVALID from ROLE_MSTR RL where RL.ROLE_ID=#ROLE_ID#";

    public static final String MAKE_GRP_USR_VALID_SQL_QUERY = "update USER_ROLE set USERROLE_ISVALID = 1 where ROLE_ID = #ROLE_ID#";

    public static final String MAKE_GRP_VALID_SQL_QUERY = "update ROLE_MSTR set ROLE_ISVALID = 1 where ROLE_ID = #ROLE_ID#";

    public static final String MAKE_GRP_INVALID_SQL_QUERY = "update ROLE_MSTR set ROLE_ISVALID = 0 where ROLE_ID = #ROLE_ID#";

    public static final String MAKE_GRP_USR_INVALID_SQL_QUERY = "update USER_ROLE set USERROLE_ISVALID = 0 where ROLE_ID = #ROLE_ID#";

    public static final String USER_GRP_USR_DELETE_SQL_QUERY = "delete from USER_ROLE where ROLE_ID = #ROLE_ID#";

    public static final String GRP_DELETE_SQL_QUERY = "delete from ROLE_MSTR where ROLE_ID = #ROLE_ID#";

    public static final String GET_USER_PASSWORD_SQL_QUERY = "select USER_PWD from USER_MSTR where USER_NAME = #USER_NAME# and USER_ISVALID=1";

    public static final String GET_ALL_USER_FILTER_SQL_QUERY = "select rownum r,USER_NAME,CNTCT_ID,CNTCT_FNAME,CNTCT_LNAME,CUST_NAME,USER_ISVALID from (select distinct(USER_NAME),CNTCT_ID,CNTCT_FNAME,CNTCT_LNAME,CNTCT_COMPANY,CUST_NAME,USER_ISVALID from (select UM.USER_NAME,UM.CNTCT_ID,CON.CNTCT_FNAME,CON.CNTCT_LNAME,CON.CNTCT_COMPANY,CM.CUST_NAME,UM.USER_ISVALID from CNTCT_MSTR CON,USER_MSTR UM,CUST_MSTR CM where CON.CNTCT_ID = UM.CNTCT_ID and  CM.CUST_ID(+) = CON.CNTCT_COMPANY)";

    public static final String ADD_CONTACT_SQL_QUERY = "insert into CNTCT_MSTR(CNTCT_ID,CNTCT_FNAME,CNTCT_LNAME,CNTCT_TITLE,CNTCT_COMPANY,CNTCT_POSITION,CNTCT_DOB,CNTCT_ADDR1,CNTCT_ADDR2,CNTCT_CITY,CNTCT_STATE,CNTCT_PCODE,CNTCT_COUNTRY,CNTCT_EMAIL,CNTCT_HPHONE,CNTCT_WPHONE,CNTCT_EXTENSION,CNTCT_MOBILE,CNTCT_FAX) values(CNTCT_ID.nextval,#CNTCT_FNAME#,#CNTCT_LNAME#,#CNTCT_TITLE#,#CNTCT_COMPANY#,#CNTCT_POSITION#,#CNTCT_DOB#,#CNTCT_ADDR1#,#CNTCT_ADDR2#,#CNTCT_CITY#,#CNTCT_STATE#,#CNTCT_PCODE#,#CNTCT_COUNTRY#,#CNTCT_EMAIL#,#CNTCT_HPHONE#,#CNTCT_WPHONE#,#CNTCT_EXTENSION#,#CNTCT_MOBILE#,#CNTCT_FAX#)";

    public static final String CONTACT_GET_ID_QUERY = "select CNTCT_ID.currval from dual";

    public static final String USER_GRP_ADD_SQL_QUERY = "insert into USER_ROLE(USER_NAME,ROLE_ID) values(#USER_NAME#,#ROLE_ID#)";

    public static final String USER_ADD_SQL_QUERY = "insert into USER_MSTR(USER_NAME,USER_PWD,USER_DESC,CNTCT_ID) values(#USER_NAME#,#USER_PWD#,#USER_DESC#,#CNTCT_ID#)";

    public static final String CONTACT_UPDATE_SQL_QUERY = "update CNTCT_MSTR set CNTCT_FNAME = #CNTCT_FNAME#,CNTCT_LNAME=#CNTCT_LNAME#,CNTCT_TITLE=#CNTCT_TITLE#,CNTCT_COMPANY=#CNTCT_COMPANY#,CNTCT_POSITION=#CNTCT_POSITION#,CNTCT_DOB=#CNTCT_DOB#,CNTCT_ADDR1=#CNTCT_ADDR1#,CNTCT_ADDR2=#CNTCT_ADDR2#,CNTCT_CITY=#CNTCT_CITY#,CNTCT_STATE=#CNTCT_STATE#,CNTCT_PCODE=#CNTCT_PCODE#,CNTCT_COUNTRY=#CNTCT_COUNTRY#,CNTCT_EMAIL=#CNTCT_EMAIL#,CNTCT_HPHONE=#CNTCT_HPHONE#,CNTCT_WPHONE=#CNTCT_WPHONE#,CNTCT_EXTENSION=#CNTCT_EXTENSION#,CNTCT_MOBILE=#CNTCT_MOBILE#,CNTCT_FAX = #CNTCT_FAX#,CNTCT_DATESTAMP = SYSTIMESTAMP where CNTCT_ID=#CNTCT_ID#";

    public static final String GET_ALL_USER_NAME_SQL_QUERY = "select USER_NAME from USER_MSTR";

    public static final String GET_USER_GROUP_ID_NAME = "select RM.ROLE_ID,ROLE_NAME from ROLE_MSTR RM,USER_ROLE UR where RM.ROLE_ID = UR.ROLE_ID and UR.USER_NAME = #USER_NAME#";

    public static final String GET_USER_DETAIL_SQL_QUERY = "select USER_PWD,USER_DESC,USER_ISVALID,USER_DATESTAMP,CNTCT_ID from USER_MSTR where USER_NAME = #USER_NAME#";

    public static final String GET_CONTACT_DETAILS_SQL_QUERY = "select CON.*,CM.CUST_NAME from CNTCT_MSTR CON,CUST_MSTR CM where CNTCT_ID = #CNTCT_ID# and CM.CUST_ID(+) = CON.CNTCT_COMPANY";

    public static final String MAKE_USER_VALID_SQL_QUERY = "update USER_MSTR set USER_ISVALID = 1 where USER_NAME = #USER_NAME#";

    public static final String MAKE_USER_INVALID_SQL_QUERY = "update USER_MSTR set USER_ISVALID = 0 where USER_NAME = #USER_NAME#";

    public static final String USER_GRP_DELETE_SQL_QUERY = "delete from USER_ROLE where USER_NAME = #USER_NAME#";

    public static final String USER_DELETE_SQL_QUERY = "delete from USER_MSTR where USER_NAME = #USER_NAME#";

    public static final String USER_UPDATE_SQL_QUERY = "update USER_MSTR set USER_DESC=#USER_DESC#,USER_PWD=#USER_PWD#,USER_DATESTAMP=systimestamp where USER_NAME=#USER_NAME#";

    public static final String GET_USER_RESOURCES_SQL_QUERY = "select distinct(RESRC_ID) from ( select RS.RESRC_ID, UR.ROLE_ID from USER_ROLE UR, ROLE_RESRC RS where UR.ROLE_ID=RS.ROLE_ID(+) and USER_NAME = #USER_NAME#)";

    public static final String GET_ALL_RESOURCES_SQL_QUERY = "select RESRC_ID, RESRC_NAME from RESRC_MSTR";

   	public static final String GET_USERS_NAME_FILTER_QUERY = "select rownum r,USER_NAME from (select distinct(USER_NAME),USER_ISVALID from (select UM.USER_NAME,UM.USER_ISVALID from USER_MSTR UM)";
   	
	//MASTER USER
	
	public static final String GET_MASTER_USER_PASSWORD_SQL_QUERY = "select count(*) from MSTR_USER where USER_NAME = #USER_NAME# and USER_PWD = #USER_PWD#";
	public static final String SYSTEM_INFO_ADD_SQL_QUERY = "insert into SYSTEM_INFO(CPU_ID,MAC_ADDR,DRIVE_SNO,SYS_USER_NAME,SYS_DET) values(#CPU_ID#,#MAC_ADDR#,#DRIVE_SNO#,#SYS_USER_NAME#,#SYS_DET#)";
	public static final String SYSTEM_INFO_CHECK_SQL_QUERY = "select count(*) from SYSTEM_INFO where CPU_ID = #CPU_ID# and MAC_ADDR = #MAC_ADDR# and DRIVE_SNO = #DRIVE_SNO#";
	
	
	//REPORT SCHEDULER QUERIES
	 //query for AddTasks.
    public static final String INSERT_JOB_MASTER = "INSERT INTO SHDLR_JB_MSTR(JB_CLASS,JB_ID) VALUES(#JB_CLASS#,#JB_ID#)";
    
    public static final String INSERT_SCHEDULER = "INSERT INTO SCHDLR(SCHDLR_ID,JB_ID,SCHDLR_TYPE,JB_START_DATE,JB_END_DATE) VALUES(#SCHDLR_ID#,#JB_ID#,#SCHDLR_TYPE#,#JB_START_DATE#,#JB_END_DATE#)";
    
    public static final String INSERT_DAILY = "INSERT INTO DAILY(SCHDLR_ID,EVERY_PER_DAY,OCCUR_ONCE_AT_HR,OCCUR_ONCE_AT_MIN,OCCUR_ONCE_AT_SEC,OCCUR_REPEAT_HR,OCCUR_REPEAT_MIN,OCCUR_REPEAT_SEC,START_AT_HR,START_AT_MIN,START_AT_SEC,END_AT_HR,END_AT_MIN,END_AT_SEC) VALUES(#SCHDLR_ID#,#EVERY_PER_DAY#,#OCCUR_ONCE_AT_HR#,#OCCUR_ONCE_AT_MIN#,#OCCUR_ONCE_AT_SEC#,#OCCUR_REPEAT_HR#,#OCCUR_REPEAT_MIN#,#OCCUR_REPEAT_SEC#,#START_AT_HR#,#START_AT_MIN#,#START_AT_SEC#,#END_AT_HR#,#END_AT_MIN#,#END_AT_SEC#)";
    
    public static final String INSERT_WEEKLY = "INSERT INTO WEEKLY(SCHDLR_ID,EVERY_PER_WEEK,OCCUR_ONCE_AT_HR,OCCUR_ONCE_AT_MIN,OCCUR_ONCE_AT_SEC,OCCUR_REPEAT_HR,OCCUR_REPEAT_MIN,OCCUR_REPEAT_SEC,START_AT_HR,START_AT_MIN,START_AT_SEC,END_AT_HR,END_AT_MIN,END_AT_SEC,IS_MON,IS_TUE,IS_WED,IS_THU,IS_FRI,IS_SAT,IS_SUN) VALUES(#SCHDLR_ID#,#EVERY_PER_WEEK#,#OCCUR_ONCE_AT_HR#,#OCCUR_ONCE_AT_MIN#,#OCCUR_ONCE_AT_SEC#,#OCCUR_REPEAT_HR#,#OCCUR_REPEAT_MIN#,#OCCUR_REPEAT_SEC#,#START_AT_HR#,#START_AT_MIN#,#START_AT_SEC#,#END_AT_HR#,#END_AT_MIN#,#END_AT_SEC#,#IS_MON#,#IS_TUE#,#IS_WED#,#IS_THU#,#IS_FRI#,#IS_SAT#,#IS_SUN#)";
    //QUERY FOR FetchTasks
    public static final String  GET_ALL_DETAIL_FROM_JOB_MASTER_AND_SCHEDULER =  "select SJM.JB_CLASS,SJM.JB_ID,S.SCHDLR_ID,S.SCHDLR_TYPE,S.JB_START_DATE,S.JB_END_DATE from SHDLR_JB_MSTR SJM, SCHDLR S where SJM.JB_ID = S.JB_ID";
    
    public static final String GET_DETAIL_FROM_DAILY = "select D.* from DAILY D, SCHDLR S where S.JB_ID = #JB_ID# AND S.SCHDLR_ID = D.SCHDLR_ID";
    
    public static final String GET_DETAIL_FROM_WEEKLY = "select W.* from WEEKLY W, SCHDLR S where S.JB_ID = #JB_ID# AND S.SCHDLR_ID = W.SCHDLR_ID";
   
    public static final String GET_ALL_MAIL_SCHEDULE_SQL_QUERY = "SELECT S.*,SJM.JB_NAME FROM SCHDLR S, SHDLR_JB_MSTR SJM WHERE S.JB_ID = SJM.JB_ID";
    
    public static final String UPDATE_SCHDLR_JB_DETAILS = "update SCHDLR set JB_LAST_RUN = #JB_LAST_RUN#, LAST_RUN_STAT = #LAST_RUN_STAT#, JB_NEXT_RUN = #JB_NEXT_RUN#";
    
    
}

/*******************************************************************************
 * $Log: SQLMaster.java,v $
 * Revision 1.506  2006/01/10 07:47:46  kduraisamy
 * SCHEDULER MODIFIED.
 *
 * Revision 1.505  2006/01/10 07:32:42  kduraisamy
 * SCHEDULER MODIFIED.
 *
 * Revision 1.504  2006/01/10 07:26:58  vkrishnamoorthy
 * Query for Mail Scheduler modified.
 *
 * Revision 1.503  2005/12/29 07:08:10  kduraisamy
 * radl production update query(mc hrs reduce query) modified.
 *
 * Revision 1.502  2005/12/20 17:59:25  kduraisamy
 * signature added for getAlljobStatus for sending mail report to customer.
 *
 * Revision 1.501  2005/12/19 15:13:22  kduraisamy
 * IN PYRL CYCLE CONFIG TABLE CYCLE IS REPLACED AS CYCLES.
 *
 * Revision 1.500  2005/12/19 11:49:48  kduraisamy
 * for machine utilization report.in queries post_flg =  1 .removed.
 *
 * Revision 1.499  2005/12/15 07:08:55  kduraisamy
 * SCHEDULER TABLES ADDED.
 *
 * Revision 1.498  2005/12/15 06:08:30  vkrishnamoorthy
 * OPN_GP_MCRELATED field added in GET_ALL_OPERATION_DETAILS query.
 *
 * Revision 1.497  2005/12/15 06:00:52  kduraisamy
 * wrong commit of oracle sql master file rectified.
 *
 * Revision 1.492  2005/11/29 09:47:19  kduraisamy
 * monthly report validation report added.
 *
 * Revision 1.491  2005/11/29 09:12:07  kduraisamy
 * monthly report validation report added.
 *
 * Revision 1.490  2005/11/29 08:51:50  kduraisamy
 * monthly report validation report added.
 *
 * Revision 1.489  2005/11/28 06:01:25  kduraisamy
 * signature added for getAllUsers(Filter filter).
 *
 * Revision 1.488  2005/11/26 11:46:30  kduraisamy
 * signature added for getAllUsers(Filter filter).
 *
 * Revision 1.487  2005/11/26 07:17:47  kduraisamy
 * fetchQtyDetails() method error corrected.
 *
 * Revision 1.486  2005/11/12 10:22:48  kduraisamy
 * update query for prodHrs reduce.modified for oracle.
 *
 * Revision 1.485  2005/11/10 07:04:45  kduraisamy
 * ProductionAccounting Added.
 *
 * Revision 1.484  2005/11/07 13:44:13  kduraisamy
 * ProductionAccounting Added.
 *
 * Revision 1.483  2005/10/24 09:52:24  kduraisamy
 * EMP NAME ADDED FOR POP FILTER.
 *
 * Revision 1.482  2005/10/24 07:34:48  kduraisamy
 * EMP NAME ADDED FOR NPROD FILTER.
 *
 * Revision 1.481  2005/10/20 05:13:50  kduraisamy
 * WOJB_ID FIELD ADDED IN SELECTION CLAUSE OF FETCH REPORT JOB DETAILS SQL QUERY.
 *
 * Revision 1.480  2005/10/18 06:42:13  kduraisamy
 * finished quantity added for reports.
 *
 * Revision 1.479  2005/10/18 06:06:38  vkrishnamoorthy
 * Query for fetching JobQuantityDetails included.
 *
 * Revision 1.478  2005/10/04 15:15:06  kduraisamy
 * nprodTotHrs selection added for updation of nprod.
 *
 * Revision 1.477  2005/10/04 06:02:57  kduraisamy
 * NprodTotHrs added in NProd Filter.
 *
 * Revision 1.476  2005/10/04 05:13:02  kduraisamy
 * prodTotHrs added in Prod Filter.
 *
 * Revision 1.475  2005/09/29 10:34:28  kduraisamy
 * pyrl_cycle_stat_id unwanted removed from report query.
 *
 * Revision 1.474  2005/09/27 10:05:28  kduraisamy
 * EMP_TYP_ID INCLUDED IN SELECT POP EMP DETAILS.
 *
 * Revision 1.473  2005/09/27 05:51:56  kduraisamy
 * duty 8 hrs validation added.
 *
 * Revision 1.472  2005/09/26 07:21:40  kduraisamy
 * duty 8 hrs validation added.
 *
 * Revision 1.471  2005/09/23 14:37:20  vkrishnamoorthy
 * Queries added for calculation of machine Hours.
 *
 * Revision 1.470  2005/09/23 09:42:29  vkrishnamoorthy
 * WO_ISVALID added in WorkOrder Filter Query.
 *
 * Revision 1.469  2005/09/22 07:04:24  kduraisamy
 * order by clause added.
 *
 * Revision 1.468  2005/09/22 07:02:29  kduraisamy
 * order by clause added.
 *
 * Revision 1.467  2005/09/21 07:32:18  kduraisamy
 * Wo List sub menu added.
 *
 * Revision 1.466  2005/09/21 07:27:42  kduraisamy
 * Wo List sub menu added.
 *
 * Revision 1.465  2005/09/21 07:14:30  kduraisamy
 * Wo List sub menu added.
 *
 * Revision 1.464  2005/09/20 09:10:08  kduraisamy
 * Wo List sub menu added.
 *
 * Revision 1.463  2005/09/20 07:41:53  kduraisamy
 * Wo List sub menu added.
 *
 * Revision 1.462  2005/09/19 06:19:18  kduraisamy
 * Duplicate prod entry validation included.
 *
 * Revision 1.461  2005/09/19 05:14:08  kduraisamy
 * Duplicate prod entry validation included.
 *
 * Revision 1.460  2005/09/10 13:21:23  kduraisamy
 * order by clause added.
 *
 * Revision 1.459  2005/09/10 07:15:25  kduraisamy
 * ORDER BY CLAUSE ADDED.
 *
 * Revision 1.458  2005/09/10 05:54:38  kduraisamy
 * ORDER BY CLAUSE ADDED.
 *
 * Revision 1.457  2005/09/09 09:00:06  kduraisamy
 * order by EMP_NAME added.
 *
 * Revision 1.456  2005/09/09 07:54:05  kduraisamy
 * is_pyrl_closed = '1' removed in reports.
 *
 * Revision 1.455  2005/09/08 12:24:45  kduraisamy
 * for leave calculation dthrs is taken.
 *
 * Revision 1.454  2005/09/01 07:36:25  kduraisamy
 * job status for pmac committed.
 *
 * Revision 1.453  2005/08/30 15:30:16  kduraisamy
 * order by JB_NAME ADDED.
 *
 * Revision 1.452  2005/08/26 09:09:04  kduraisamy
 * in getfor pyrl(), dt hrs,ot hrs added.
 *
 * Revision 1.451  2005/08/25 12:48:05  kduraisamy
 * order by added.
 *
 * Revision 1.450  2005/08/25 12:36:01  kduraisamy
 * order by added.
 *
 * Revision 1.449  2005/08/24 12:54:08  kduraisamy
 * stdHrs computation while creating pyrl interface added.
 *
 * Revision 1.448  2005/08/23 07:59:11  vkrishnamoorthy
 * UPPER CASE ADDED IN EMP NAME WHERE CLAUSE.
 *
 * Revision 1.447  2005/08/23 07:31:18  kduraisamy
 * CHECK EMP TYPE SQL QUERY ADDED.
 *
 * Revision 1.446  2005/08/22 08:05:39  vkrishnamoorthy
 * order by clause included in customer, employee queries.
 *
 * Revision 1.445  2005/08/22 07:22:08  vkrishnamoorthy
 * Problem in pyrl creation corrected.
 *
 * Revision 1.444  2005/08/19 07:45:37  kduraisamy
 * WO_DATE ADDED IN WO_JB_HSTRY ADD.
 *
 * Revision 1.443  2005/08/17 08:37:42  vkrishnamoorthy
 * EMP_MSTR STRUCTURE CHANGED.
 *
 * Revision 1.442  2005/08/17 08:29:54  vkrishnamoorthy
 * EMP_MSTR STRUCTURE CHANGED.
 *
 * Revision 1.441  2005/08/17 07:50:51  kduraisamy
 * EMP_MSTR AND CUST_MSTR TABLE ALTERED.
 *
 * Revision 1.440  2005/08/17 07:06:17  kduraisamy
 * EMP_MSTR AND CUST_MSTR TABLE ALTERED.
 *
 * Revision 1.439  2005/08/16 06:05:31  vkrishnamoorthy
 * ROLE_NAME INTRODUCED IN UPDATE GROUP.
 *
 * Revision 1.438  2005/08/12 12:52:15  vkrishnamoorthy
 * CNTCT_COMPANY ADDED IN FILTER QUERY METHOD GETALLUSERS.
 *
 * Revision 1.437  2005/08/11 16:47:46  kduraisamy
 * DUMMY WORK ORDERS NOT TAKEN FOR CUSTOMER VIEW SCREEN.
 *
 * Revision 1.436  2005/08/09 10:02:19  kduraisamy
 * statuses added in wo view.
 *
 * Revision 1.435  2005/08/09 04:54:40  kduraisamy
 * statuses added in wo view.
 *
 * Revision 1.434  2005/08/09 04:47:01  kduraisamy
 * statuses added in wo view.
 *
 * Revision 1.433  2005/08/05 06:47:13  kduraisamy
 * EMP_CDE ADDED FOR F PROD VIEW.
 *
 * Revision 1.432  2005/08/05 06:44:27  kduraisamy
 * view operations taken from wo_jb_opn.
 *
 * Revision 1.431  2005/08/04 12:00:32  kduraisamy
 * EMP_CDE ADDED FOR PROD VIEW.
 *
 * Revision 1.430  2005/08/04 10:53:07  kduraisamy
 * UPPER(EMP_STAT_NAME) ADDED IN SELECTION.
 *
 * Revision 1.429  2005/08/04 10:39:47  kduraisamy
 * UPPER(EMP_STAT_NAME) ADDED IN SELECTION.
 *
 * Revision 1.428  2005/08/04 10:25:42  kduraisamy
 * UPPER(EMP_STAT_NAME) ADDED IN SELECTION.
 *
 * Revision 1.427  2005/08/04 10:04:57  kduraisamy
 * EMP_CDE ADDED INTO FILTER.
 *
 * Revision 1.426  2005/08/03 09:53:07  kduraisamy
 * MAX(WOJBOPN_INCENTIVE) QUERY ERROR CORRECTED.
 *
 * Revision 1.425  2005/08/03 06:52:44  kduraisamy
 * EMP_CDE IS SET TO COMBO VALUES INSTEAD OF EMP_NAME.
 *
 * Revision 1.424  2005/08/02 11:47:44  kduraisamy
 * WOJBOPN_INCENTIVE INCLUDED.
 *
 * Revision 1.423  2005/08/02 07:28:33  kduraisamy
 * PYRL INTERFACE CHANGED.MULTIPLE INTERFACE POSSIBLE.
 *
 * Revision 1.421  2005/08/01 11:57:54  kduraisamy
 * UPDATE_PYRL INTRODUCED.
 *
 * Revision 1.420  2005/08/01 09:40:12  kduraisamy
 * UPDATE_PYRL FLAG CHECKED WHILE GENERATING PYRL INTERFACE.
 *
 * Revision 1.419  2005/08/01 07:17:30  kduraisamy
 * WOJBOPN_INCENTIVE ADDED.
 *
 * Revision 1.418  2005/08/01 06:09:56  kduraisamy
 * EMP_CDE IS INTRODUCED.
 *
 * Revision 1.417  2005/08/01 04:36:08  kduraisamy
 * wo order modification changed.
 *
 * Revision 1.416  2005/07/30 14:17:53  kduraisamy
 * FPRO_TOT_HRS ADDED.
 *
 * Revision 1.415  2005/07/27 10:07:29  kduraisamy
 * UM.CNTCT_ID = CM.CNTCT_ID.
 *
 * Revision 1.414  2005/07/27 06:51:03  kduraisamy
 * brought forward query changed.
 *
 * Revision 1.413  2005/07/26 08:36:32  kduraisamy
 * fetchDespatchDetails() query changed.
 *
 * Revision 1.412  2005/07/26 07:41:00  kduraisamy
 * = 'DESPATCH' IS CHANGED TO LIKE 'DESPATCH'.
 *
 * Revision 1.411  2005/07/25 10:05:47  kduraisamy
 * fetchNotTakenUp() added.
 *
 * Revision 1.410  2005/07/25 08:39:16  kduraisamy
 * fetchNotTakenUp() added.
 *
 * Revision 1.409  2005/07/25 06:41:57  kduraisamy
 * WOJB DCDATE ADDED.
 *
 * Revision 1.408  2005/07/24 04:52:15  kduraisamy
 * JB ID 260 IS CHANGED AS #JB_ID#.
 *
 * Revision 1.407  2005/07/23 17:34:30  kduraisamy
 * despatch and shipment queries added in mysql.
 *
 * Revision 1.406  2005/07/23 15:25:30  kduraisamy
 * customer login screen.cust dc no set in fetchOrderDetails().
 *
 * Revision 1.405  2005/07/23 15:11:53  kduraisamy
 * signature added for make valid and invalid.so queries added.
 *
 * Revision 1.404  2005/07/23 14:32:16  kduraisamy
 * updateShipmentDetails() query added.
 *
 * Revision 1.403  2005/07/23 14:13:20  kduraisamy
 * totQty for customer login finished.
 *
 * Revision 1.402  2005/07/23 13:23:28  kduraisamy
 * getShipmentOperationDetailsForUpdate(). queries added.
 *
 * Revision 1.401  2005/07/23 11:15:30  kduraisamy
 * CUSTOMER WORK ORDER DC NO ADDED.
 *
 * Revision 1.400  2005/07/23 10:19:37  kduraisamy
 * getAllJobStatusDetails() method error corrected.
 *
 * Revision 1.399  2005/07/23 09:22:27  kduraisamy
 * queries added for isModify() and getShipmentDetails().
 *
 * Revision 1.398  2005/07/23 08:51:58  kduraisamy
 * getRowcountWithComplexfilterwithhashtable() added.
 *
 * Revision 1.397  2005/07/22 13:01:42  kduraisamy
 * QUERY ADDED FOR GET_CLEARANCE_DETAILS_SQL_QUERY.
 *
 * Revision 1.396  2005/07/22 11:14:16  kduraisamy
 * QUERY ADDED FOR GETOPERATION DETAILS().
 *
 * Revision 1.395  2005/07/22 07:34:26  kduraisamy
 * shipment add query added.
 *
 * Revision 1.394  2005/07/22 07:07:59  kduraisamy
 * QUERIES ADDED FOR DESPATCH AND SHIPMENT.
 *
 * Revision 1.393  2005/07/20 20:25:55  kduraisamy
 * make valid invalid queries added.
 *
 * Revision 1.392  2005/07/20 12:17:57  kduraisamy
 * queries added for despatch.
 *
 * Revision 1.391  2005/07/20 06:35:14  kduraisamy
 * ISMODIFY () ADDED FOR FINAL PROD DETAILS MANAGER.
 *
 * Revision 1.390  2005/07/18 16:06:27  kduraisamy
 * CUST_NAME IS TAKEN FOR LIST USERS.
 *
 * Revision 1.389  2005/07/18 15:20:13  kduraisamy
 * CUST_NAME IS TAKEN FOR LIST USERS.
 *
 * Revision 1.388  2005/07/18 12:02:56  ppalaniappan
 * USER_NAME ADDED INTO FILTER QUERY.
 *
 * Revision 1.387  2005/07/18 11:23:33  kduraisamy
 * ERROR CORRECTED .
 *
 * Revision 1.386  2005/07/18 09:01:37  kduraisamy
 * CUST ID IS TAKEN IN TO GETALLWOJBSTATUS() QUERY.
 *
 * Revision 1.385  2005/07/18 05:10:43  kduraisamy
 * FPROD_ID SELECT QUERY ADDED.
 *
 * Revision 1.384  2005/07/16 10:59:38  kduraisamy
 * cust_name is taken for filters of wojbstatus.
 *
 * Revision 1.383  2005/07/16 10:28:37  kduraisamy
 * work Orderjobstatus filter method query added.
 *
 * Revision 1.382  2005/07/15 20:03:07  kduraisamy
 * pending operations for final production will only come if production operations completed.
 *
 * Revision 1.381  2005/07/15 19:42:53  kduraisamy
 * F_PROD QUERIES ADDED.
 *
 * Revision 1.380  2005/07/15 17:00:17  kduraisamy
 * getProdnJobDetailsByWorkOrder() and getProdnJobDetailsForUpdateByWorkOrder() changed because of FINAL PRODUCTION.
 *
 * Revision 1.379  2005/07/15 07:40:37  kduraisamy
 * initial commit.
 *
 * Revision 1.378  2005/07/14 14:36:39  kduraisamy
 * opngp.opn_gp_id added in filter select query.
 *
 * Revision 1.377  2005/07/14 13:37:14  kduraisamy
 * OPN GP MCRELATED FIELD ADDED.SO PENDING OPN TAKEN MODIFIED.
 *
 * Revision 1.376  2005/07/14 12:36:06  kduraisamy
 * OPN GP MCRELATED FIELD ADDED.
 *
 * Revision 1.375  2005/07/14 11:28:17  kduraisamy
 * OPN GP MCRELATED FIELD ADDED.
 *
 * Revision 1.374  2005/07/06 06:27:22  kduraisamy
 * CHKINCENTIVE() ADDED.
 *
 * Revision 1.373  2005/07/06 05:30:47  smurugesan
 * Queries Added For Production()
 *
 * Revision 1.372  2005/07/05 09:12:54  vkrishnamoorthy
 * JBOPN_INCENTIVE field added in getJobOpn query.
 *
 * Revision 1.371  2005/07/05 06:14:56  kduraisamy
 * opnIncentive added.
 *
 * Revision 1.370  2005/07/04 12:33:19  kduraisamy
 * pay outside production is renamed as production indirect.
 *
 * Revision 1.369  2005/07/04 09:46:05  kduraisamy
 * payroll calculate Sal Hrs() method changed for radl,nprod,pop.
 *
 * Revision 1.368  2005/06/30 07:30:55  smurugesan
 * WOJB_ID REMOVED FROM QUERY
 *
 * Revision 1.367  2005/06/30 07:07:27  smurugesan
 * QUERRY ADDED
 *
 * Revision 1.366  2005/06/30 07:01:22  kduraisamy
 * viewOperationDetails() query added.
 *
 * Revision 1.365  2005/06/28 09:16:45  vkrishnamoorthy
 * EMP_TYP_DT,EMP_TYP_OT added into query.
 *
 * Revision 1.364  2005/06/25 11:10:15  kduraisamy
 * OT HRS DT HRS TAKEN IN PROD DETAILS SELECT FOR PYROLL.
 *
 * Revision 1.363  2005/06/25 09:56:41  kduraisamy
 * calculateSalHrs() added.
 *
 * Revision 1.362  2005/06/25 07:21:15  kduraisamy
 * calculateSalHrs() added.
 *
 * Revision 1.361  2005/06/24 05:19:03  vkrishnamoorthy
 * Job StdHrs added.
 *
 * Revision 1.360  2005/06/21 06:54:26  kduraisamy
 * SELECT EMP_HRS_FOR_EMP_TYP QUERY ADDED.
 *
 * Revision 1.359  2005/06/17 06:44:47  kduraisamy
 * DUTY OT SPECIFIED IN EMP_TYP_MSTR ITSELF.
 *
 * Revision 1.358  2005/06/17 06:26:51  kduraisamy
 * DUTY OT SPECIFIED IN EMP_TYP_MSTR ITSELF.
 *
 * Revision 1.357  2005/06/17 06:05:50  kduraisamy
 * DUTY OT SPECIFIED IN EMP_TYP_MSTR ITSELF.
 *
 * Revision 1.356  2005/06/16 07:39:01  kduraisamy
 * pop machine code removed from view unposted query.
 *
 * Revision 1.355  2005/06/16 05:39:35  kduraisamy
 * MC_CDE REMOVED IN POP.SO POSTING RULE ,ACCOUNTING CHECKING MODIFIED.
 *
 * Revision 1.354  2005/06/16 04:58:10  kduraisamy
 * POP MC_CDE REMOVED.
 *
 * Revision 1.353  2005/06/13 07:40:14  vkrishnamoorthy
 * Query modified.
 *
 * Revision 1.352  2005/06/11 09:50:40  kduraisamy
 * pa_createdby added .
 *
 * Revision 1.351  2005/06/11 08:03:19  kduraisamy
 * payrollmonthlyreport queries added.
 *
 * Revision 1.350  2005/06/11 06:54:17  kduraisamy
 * QUERY ADDED FOR PAYRL LOG.
 *
 * Revision 1.349  2005/06/09 14:30:39  kduraisamy
 * report error corrected.
 *
 * Revision 1.348  2005/06/09 12:41:59  kduraisamy
 * prod select query changed.
 *
 * Revision 1.347  2005/06/09 06:47:34  kduraisamy
 * PRYL IS CHANGED TO PYRL.
 *
 * Revision 1.346  2005/06/09 06:18:19  kduraisamy
 * WO_NO IS TAKEN IN QUERY.
 *
 * Revision 1.345  2005/06/09 06:07:05  kduraisamy
 * fetchMachineWiseDetails() added.
 *
 * Revision 1.344  2005/06/07 07:14:55  kduraisamy
 * order by MC_CDE
 *
 * Revision 1.343  2005/06/04 06:38:07  kduraisamy
 * base_cal_var_day checking added in getshiftname with customavblty query.
 *
 * Revision 1.342  2005/06/03 09:01:21  kduraisamy
 * ORDER BY ADDED.
 *
 * Revision 1.341  2005/06/03 07:44:18  kduraisamy
 * reports added for actualHrs Select .
 *
 * Revision 1.340  2005/06/02 10:10:37  kduraisamy
 * PROD_MODIFYCOUNT ADDED.
 *
 * Revision 1.339  2005/06/02 09:58:31  kduraisamy
 * fetchProductionDatewiseDetails() added.
 *
 * Revision 1.338  2005/06/02 03:43:27  kduraisamy
 * mc Name added for display.
 *
 * Revision 1.337  2005/06/01 14:37:27  kduraisamy
 * log adding changed.
 *
 * Revision 1.336  2005/05/31 14:13:20  kduraisamy
 * ORDER BY MC_CDE ADDED IN SELECT VALID MACHINES SQL QUERY.
 * Revision 1.335 2005/05/31 05:08:42 kduraisamy
 * MODIFIEDCOUNT IS CHANGED TO MODIFYCOUNT.
 *
 * Revision 1.334 2005/05/30 13:12:51 kduraisamy POP AND RADL_DUMMYCOUNT ADDED.
 *
 * Revision 1.333 2005/05/30 13:10:31 kduraisamy POP AND RADL_DUMMYCOUNT ADDED.
 *
 * Revision 1.332 2005/05/30 11:43:28 kduraisamy NPROD_DUMMYCOUNT ADDED.
 *
 * Revision 1.331 2005/05/30 10:28:39 kduraisamy PROD_DUMMYCOUNT ADDED.
 *
 * Revision 1.330 2005/05/30 07:20:00 kduraisamy loging of prod entries added.
 *
 * Revision 1.329 2005/05/30 06:34:35 kduraisamy loging of prod entries added.
 *
 * Revision 1.328 2005/05/28 05:01:32 kduraisamy EMP_TYP_DESC ADDED FOR LIST.
 *
 * Revision 1.327 2005/05/27 09:45:21 kduraisamy signature changed.HashMap is
 * changed to LinkedHashmap.
 *
 * Revision 1.326 2005/05/27 09:25:27 kduraisamy EMP TYP ISVALID ADDED.
 *
 * Revision 1.325 2005/05/26 07:13:05 kduraisamy team add and update changed.
 *
 * Revision 1.324 2005/05/20 11:02:40 kduraisamy LAST SHIFT OF A CUSTOM
 * AVAILABILITY TABLE QUERY ADDED.
 *
 * Revision 1.323 2005/05/20 07:19:15 kduraisamy in valid shifts select sql
 * query shift id is only taken.
 *
 * Revision 1.322 2005/05/20 05:13:29 kduraisamy unwanted query removed.
 *
 * Revision 1.321 2005/05/20 04:53:05 vkrishnamoorthy last shift of a day select
 * query changed.
 *
 * Revision 1.320 2005/05/19 14:37:48 kduraisamy shift name select sql query
 * added.
 *
 * Revision 1.319 2005/05/19 09:50:26 kduraisamy queries added for posting rule
 * prod accounting
 *
 * Revision 1.318 2005/05/19 09:41:05 kduraisamy CRNT_DATE IS CHANGED TO
 * PROD_CRNT_DATE.
 *
 * Revision 1.317 2005/05/18 12:14:43 kduraisamy posting rule error corrected.
 *
 * Revision 1.316 2005/05/18 10:19:59 kduraisamy POST FLG ADDED.
 *
 * Revision 1.315 2005/05/18 10:09:33 kduraisamy PROD POST FLG ADDED FOR FILTER.
 *
 * Revision 1.314 2005/05/17 08:45:48 vkrishnamoorthy entry check in all the
 * table query added.
 *
 * Revision 1.313 2005/05/16 09:44:10 kduraisamy description added for mc type
 * list..
 *
 * Revision 1.312 2005/05/16 09:38:15 kduraisamy description added for customer
 * type list..
 *
 * Revision 1.311 2005/05/15 20:00:36 kduraisamy posting rule error corrected..
 *
 * Revision 1.310 2005/05/14 11:42:51 kduraisamy employee performance reports
 * added.
 *
 * Revision 1.309 2005/05/14 10:57:53 kduraisamy employee performance reports
 * added.
 *
 * Revision 1.308 2005/05/14 06:57:47 kduraisamy GETALLMACHINES WITH ACCOUNTING.
 *
 * Revision 1.307 2005/05/13 07:43:08 kduraisamy PREVIOUS DAY ENTRY SHOULD BE
 * MADE INCLUDE.
 *
 * Revision 1.306 2005/05/13 07:04:09 kduraisamy PREVIOUS DAY ENTRY SHOULD BE
 * MADE INCLUDE.
 *
 * Revision 1.305 2005/05/13 05:36:50 kduraisamy PREVIOUS DAY ENTRY SHOULD BE
 * MADE INCLUDE.
 *
 * Revision 1.304 2005/05/13 04:35:31 vkrishnamoorthy thursday is changed to
 * sunday..
 *
 * Revision 1.303 2005/05/12 13:29:30 kduraisamy previous day checking added.
 *
 * Revision 1.302 2005/05/12 07:54:23 kduraisamy posting rule resources added.
 *
 * Revision 1.301 2005/05/05 12:17:13 kduraisamy old avblty id is set
 * AVBLTY_CURRENT = '0'.
 *
 * Revision 1.300 2005/05/05 04:58:49 vkrishnamoorthy order by added.
 *
 * Revision 1.299 2005/05/05 04:43:00 vkrishnamoorthy sunday added instead of
 * thursday in select shiftDefnDetails sql query.
 *
 * Revision 1.298 2005/04/30 07:44:08 kduraisamy error corrected.
 *
 * Revision 1.297 2005/04/30 06:21:27 kduraisamy unnecessary customavblty and
 * non avblty sql queries removed.
 *
 * Revision 1.296 2005/04/29 10:57:33 kduraisamy custom avbltyDetails object
 * structure changed.
 *
 * Revision 1.295 2005/04/29 06:26:48 kduraisamy ISALLENTRIESPOSTED() QUERIES
 * ADDED.
 *
 * Revision 1.294 2005/04/29 04:50:54 vkrishnamoorthy ORDER BY SHIFT_ID ADDED IN
 * GETBASECALENDAR DETAILS().
 *
 * Revision 1.293 2005/04/28 14:22:59 kduraisamy predsr shift for custom avblty.
 *
 * Revision 1.292 2005/04/28 09:30:56 kduraisamy CUSTOM AVBLTY STARTDAY ,ENDDAY
 * ADDED.
 *
 * Revision 1.291 2005/04/28 09:14:44 kduraisamy CUSTOM AVBLTY STARTDAY ,ENDDAY
 * ADDED.
 *
 * Revision 1.290 2005/04/27 15:47:43 kduraisamy SHIFT NAME LIST LOADED
 * ACCORDING TO CUSTOM AVAILABILITY.
 *
 * Revision 1.289 2005/04/27 06:05:17 kduraisamy queries added for
 * updateAvailabilityCalendar().
 *
 * Revision 1.288 2005/04/26 11:52:47 kduraisamy CUSTOM_N_AVBLITY_FORDATE
 * CHANGED TO CUSTOM_N_AVBLTY_FORDATE
 *
 * Revision 1.287 2005/04/26 10:08:59 kduraisamy availability current added.
 *
 * Revision 1.286 2005/04/25 06:59:09 kduraisamy order by BASE_CAL_VAR_DAY ADDED
 * IN BASE_CAL DETAILS GET QUERY.
 *
 * Revision 1.285 2005/04/20 11:57:31 kduraisamy pyroll id generation added.
 *
 * Revision 1.284 2005/04/20 10:13:32 kduraisamy avbltyDetails() add method
 * changed.
 *
 * Revision 1.283 2005/04/08 10:08:21 kduraisamy CUST_MSTR UPDATE FROM WORK
 * ORDER ADD. INCLUDED.LAST ORDER PLACED DATE AND LAST WORK ORDER REFERENCE.
 *
 * Revision 1.282 2005/04/06 11:42:19 vkrishnamoorthy ROLE IS CHANGED TO ROLE_ID
 * IN USER DELETE QUERY.
 *
 * Revision 1.281 2005/04/03 09:25:11 kduraisamy CNTCT_FAX ADDED.
 *
 * Revision 1.280 2005/03/31 10:18:52 kduraisamy BASE_CAL_VAR_STARTTIME_DAY AND
 * ENDTIME_DAY ADDED.
 *
 * Revision 1.279 2005/03/31 08:52:10 kduraisamy CNTCT_FAX ADDED.
 *
 * Revision 1.278 2005/03/31 06:45:27 kduraisamy CNTCT_ID.nextval removed.
 *
 * Revision 1.277 2005/03/30 09:34:27 vkrishnamoorthy GET_USER_DETAILS_SQL_QUERY
 * CHANGED.
 *
 * Revision 1.276 2005/03/30 07:00:03 vkrishnamoorthy make user valid and
 * invalid queries added.
 *
 * Revision 1.275 2005/03/29 12:42:49 kduraisamy PASSWORD IS CHANGED TO PWD.
 *
 * Revision 1.274 2005/03/29 12:23:59 kduraisamy GET ALL RESOURCES QUERY ADDED.
 *
 * Revision 1.273 2005/03/29 11:17:47 kduraisamy CONTACT UPDATE QUERY ADDED.
 *
 * Revision 1.272 2005/03/29 09:28:31 kduraisamy QUERIES FOR UPDATE USER()
 * ADDED.
 *
 * Revision 1.271 2005/03/29 08:55:02 kduraisamy queries added for delete
 * Users().
 *
 * Revision 1.270 2005/03/29 07:33:08 kduraisamy USER VALID INVALID QUERIES
 * ADDED.
 *
 * Revision 1.269 2005/03/29 05:57:03 kduraisamy USER_ID CHANGED AS USER_NAME
 *
 * Revision 1.268 2005/03/29 05:38:40 kduraisamy USER_ID CHANGED AS USER_NAME
 *
 * Revision 1.267 2005/03/28 07:40:30 kduraisamy getAllUserDetails filter query
 * added.
 *
 * Revision 1.266 2005/03/23 07:45:45 kduraisamy CREATE QUERY ADDED FOR SECURITY
 * ADMIN.
 *
 * Revision 1.265 2005/03/23 07:40:27 kduraisamy SECURITY ADMIN SQL QUERIES
 * COMMENTED.
 *
 * Revision 1.264 2005/03/23 06:37:03 kduraisamy queries added for Security
 * admin.
 *
 * Revision 1.263 2005/03/19 14:34:55 vkrishnamoorthy
 * base_cal_var_starttime_day,endtime_day added.
 *
 * Revision 1.262 2005/03/19 06:44:05 kduraisamy BasecalendarTime day's added.
 *
 * Revision 1.261 2005/03/15 15:52:17 kduraisamy CUSTOM_AVBLTY ADDED IN CHECK
 * EMP HRS AND MACHINE ACCOUNTED.
 *
 * Revision 1.260 2005/03/10 11:44:08 kduraisamy ROWNUM_RESET_SQL_QUERY ADDED
 * FOR MYSQL.
 *
 * Revision 1.259 2005/03/08 07:04:18 kduraisamy MC TYP UPDATE QUERY ADDED.
 *
 * Revision 1.258 2005/03/08 06:27:25 kduraisamy MACH INCLUDED INSTEAD OF MC IN
 * addMcTypDetails().
 *
 * Revision 1.257 2005/03/08 06:12:54 kduraisamy DESC ADDED IN MCTYPE ADD.
 *
 * Revision 1.256 2005/03/08 05:51:28 kduraisamy queries added for make valid
 * and invalid of machineType.
 *
 * Revision 1.255 2005/03/08 05:36:50 kduraisamy query added for
 * updateMachineTypeDetails().
 *
 * Revision 1.254 2005/03/08 05:16:44 kduraisamy query added for
 * getMachineTypeDetails().
 *
 * Revision 1.253 2005/03/06 09:06:29 kduraisamy Machine type filter added.
 *
 * Revision 1.252 2005/03/06 08:40:56 kduraisamy make valid,invalid for custtyp
 * added.
 *
 * Revision 1.251 2005/03/06 07:43:47 kduraisamy DATESTAMP ADDED IN UPDATE
 * QUERY.
 *
 * Revision 1.250 2005/03/06 07:37:49 kduraisamy CUST TYP DETAILS UPDATE METHOD
 * ADDED.
 *
 * Revision 1.249 2005/03/05 11:01:33 kduraisamy getCustomerTypDetails() query
 * added.
 *
 * Revision 1.248 2005/03/05 08:52:25 kduraisamy rownum r included in filter
 * query.
 *
 * Revision 1.247 2005/03/05 06:33:20 kduraisamy cust typ details filter added.
 *
 * Revision 1.246 2005/03/04 07:23:20 kduraisamy initial commit.
 *
 * Revision 1.245 2005/03/01 03:40:29 kduraisamy custom non avblty check added.
 *
 * Revision 1.244 2005/02/27 13:41:55 kduraisamy IS_PYRL_CLOSE IS INCLUDED IN
 * REPORT.
 *
 * Revision 1.243 2005/02/27 10:59:00 kduraisamy distinct emp_id included .
 *
 * Revision 1.242 2005/02/27 10:47:49 kduraisamy trunc added in
 * fetchMonthlyReport().
 *
 * Revision 1.241 2005/02/23 11:00:58 kduraisamy WOJBOPN_OPN_GP_ID IS CHANGED TO
 * OPN_GP_ID.
 *
 * Revision 1.240 2005/02/23 05:47:54 kduraisamy order by included in
 * getMachineCode() queries.
 *
 * Revision 1.239 2005/02/22 08:54:46 kduraisamy queries changed for reports
 *
 * Revision 1.238 2005/02/22 06:35:34 kduraisamy queries changed for reports
 *
 * Revision 1.237 2005/02/21 08:39:25 kduraisamy distinct added in nprod filter
 * query.
 *
 * Revision 1.236 2005/02/19 10:11:07 kduraisamy for job uniqueness methods are
 * changed.
 *
 * Revision 1.235 2005/02/18 10:50:36 kduraisamy signature changed for
 * getJobByGnrlName().so query changed.
 *
 * Revision 1.234 2005/02/17 06:05:39 kduraisamy signature modified for
 * addNewMachineTypeDetails().
 *
 * Revision 1.233 2005/02/16 15:34:18 kduraisamy jb_gnrl_id is changed to
 * gnrl_id.
 *
 * Revision 1.232 2005/02/16 11:46:28 kduraisamy signature modified for
 * addNewJbGnrlName().
 *
 * Revision 1.231 2005/02/16 10:14:11 kduraisamy signature modified for
 * addNewEmpStat().
 *
 * Revision 1.230 2005/02/16 07:53:13 kduraisamy select cust_typ_id from dual
 * query added.
 *
 * Revision 1.228 2005/02/15 06:28:04 kduraisamy QUERY ADDED FOR SELECT PROD TOT
 * HRS FOR UPDATING OF PROD AND RADL.
 *
 * Revision 1.227 2005/02/11 18:50:11 kduraisamy status queries simplified.
 *
 * Revision 1.226 2005/02/11 12:20:31 kduraisamy isvalid included in rwk log get
 * query.
 *
 * Revision 1.225 2005/02/11 05:17:01 kduraisamy query added form make valid,
 * invalid.
 *
 * Revision 1.224 2005/02/08 09:55:15 kduraisamy customer in service only load
 * in job master add.
 *
 * Revision 1.223 2005/02/07 09:54:51 kduraisamy SYSTIMESTAMP INCLUDED IN
 * WO_DATE OF WO_JB_HSTRY.
 *
 * Revision 1.222 2005/02/07 09:34:28 kduraisamy SYSTIMESTAMP ADDED FOR
 * JB_CREATED_DATE FOR DUMMY WORK ORDER.
 *
 * Revision 1.221 2005/02/07 09:14:08 kduraisamy SYSTIMESTAMP ADDED FOR WO_DATE.
 *
 * Revision 1.220 2005/02/07 07:01:34 kduraisamy QUERY ADDED FOR DUMMY WO
 * FILTER.
 *
 * Revision 1.219 2005/02/07 06:23:30 kduraisamy queries added for addDummyWo().
 *
 * Revision 1.218 2005/02/05 06:10:50 kduraisamy query added for get jbQtySno in
 * rwkLog get.
 *
 * Revision 1.217 2005/02/04 19:30:08 kduraisamy order by WOJBOPN_OPN_SNO ADDED
 * IN GETWODETAILS().
 *
 * Revision 1.216 2005/02/04 19:10:43 kduraisamy rework entered operations get
 * code included.
 *
 * Revision 1.215 2005/02/04 11:47:09 kduraisamy error changed.
 *
 * Revision 1.214 2005/02/04 05:44:57 kduraisamy rework get operation query
 * added.
 *
 * Revision 1.213 2005/02/04 05:27:35 sponnusamy pending operations get query
 * changed.
 *
 * Revision 1.212 2005/02/03 14:30:54 kduraisamy query added for
 * getReworkLogDetails().
 *
 * Revision 1.211 2005/02/03 10:13:53 sponnusamy ReworkLogDetails errors
 * corrected
 *
 * Revision 1.210 2005/02/03 06:44:00 sponnusamy completion flag added
 *
 * Revision 1.209 2005/02/02 14:30:43 kduraisamy PRCL_LOG_ID INCLUDED IN FILTER
 * QUERY.
 *
 * Revision 1.208 2005/02/02 12:34:45 kduraisamy TABLE STRUCTURE CHANGED FOR
 * PRCL_LOG.
 *
 * Revision 1.207 2005/02/02 07:31:09 kduraisamy distinct included in rwklog
 * filters.
 *
 * Revision 1.206 2005/02/02 06:54:08 kduraisamy PROD_ID IS CHANGED TO RADL_ID
 *
 * Revision 1.205 2005/02/01 11:55:50 kduraisamy QUERY ADDED FOR GET WOJB ID
 * ADDED.
 *
 * Revision 1.204 2005/02/01 09:07:02 kduraisamy query changed .instead of
 * woJbId ,jbId and woId included.
 *
 * Revision 1.203 2005/02/01 08:51:26 kduraisamy query for
 * getAllReworkReasonbycategory() added.
 *
 * Revision 1.202 2005/02/01 07:33:33 kduraisamy upper case added in
 * getAllRadlMachine() query.
 *
 * Revision 1.201 2005/02/01 06:51:43 kduraisamy radl work type 'n' added in get
 * for update.
 *
 * Revision 1.200 2005/01/31 19:06:38 kduraisamy ALIAS NAME INCLUDED IN LAST
 * PROD DATE SELECT QUERY.
 *
 * Revision 1.199 2005/01/31 18:58:59 kduraisamy QUERY ADDED FOR LAST PRODN
 * DATE.
 *
 * Revision 1.198 2005/01/31 17:18:20 kduraisamy Radial Production included
 * instead of RADIAL.
 *
 * Revision 1.197 2005/01/31 15:12:51 kduraisamy flag changed in
 * getForAddNewPreCloseDetails().
 *
 * Revision 1.196 2005/01/31 11:31:51 kduraisamy source name changed to Small
 * letters.
 *
 * Revision 1.195 2005/01/31 11:09:16 kduraisamy posting modified.iteration no
 * increment added.
 *
 * Revision 1.194 2005/01/31 11:06:06 vkrishnamoorthy isvalid removed in
 * getShiftDefn query.
 *
 * Revision 1.193 2005/01/31 07:13:00 sponnusamy GetProductionDetails query
 * changed.
 *
 * Revision 1.192 2005/01/31 05:39:31 kduraisamy query added for
 * getAllProdMachines().
 *
 * Revision 1.190 2005/01/30 13:24:48 kduraisamy getJobDetails() and
 * getOpnDetails() modified.Radl include.
 *
 * Revision 1.189 2005/01/29 10:32:51 kduraisamy productio select query
 * modified.
 *
 * Revision 1.188 2005/01/29 04:57:29 kduraisamy isModify() query added.
 *
 * Revision 1.187 2005/01/28 12:40:02 kduraisamy geForClosePyrl() query changed.
 *
 * Revision 1.186 2005/01/27 17:41:18 kduraisamy getForClosePyroll() query
 * modified.
 *
 * Revision 1.185 2005/01/27 10:39:29 smurugesan rwk log queries changed.
 *
 * Revision 1.184 2005/01/27 09:27:50 kduraisamy rwklog queries added.
 *
 * Revision 1.183 2005/01/27 06:38:20 kduraisamy jbId included instead of
 * jobName.
 *
 * Revision 1.182 2005/01/27 06:05:21 kduraisamy jbId included instead of
 * jobName.
 *
 * Revision 1.181 2005/01/25 07:50:53 kduraisamy query for isRadlOperations()
 * added.
 *
 * Revision 1.180 2005/01/24 16:47:44 kduraisamy DT,OT HRS ADDED IN
 * GETFORCLOSE() OBJECT.
 *
 * Revision 1.179 2005/01/24 15:37:55 kduraisamy #PYRL_CYCLE_STAT_ID# ADDDED IN
 * GETEMPHRS QUERY..
 *
 * Revision 1.178 2005/01/24 11:39:56 kduraisamy PYRL_CYCLE_STAT_ID ADDED IN
 * FILTER QUERY.
 *
 * Revision 1.177 2005/01/24 11:28:14 kduraisamy PYRL_CYCLE_STAT_ID ADDED IN
 * FILTER QUERY.
 *
 * Revision 1.176 2005/01/24 09:30:45 kduraisamy FILTER QUERY FOR
 * GETFORPYRLADJSTMNT() MODIFIED..
 *
 * Revision 1.175 2005/01/24 07:52:50 kduraisamy conditions query added while
 * closing the payroll.
 *
 * Revision 1.174 2005/01/24 06:53:02 kduraisamy COUNT CALCULATING QUERY
 * CHANGED.
 *
 * Revision 1.173 2005/01/24 05:20:46 kduraisamy query added for
 * getForClosePyrl().
 *
 * Revision 1.172 2005/01/22 13:38:22 kduraisamy ANOTHER GET METHOD ADDED FOF
 * GETFORINTERFACE().QUERY ADDED FOR THAT.
 *
 * Revision 1.171 2005/01/22 11:36:39 kduraisamy error corrected.
 *
 * Revision 1.170 2005/01/22 11:20:55 kduraisamy filter for payroll modified.
 *
 * Revision 1.169 2005/01/22 07:56:32 kduraisamy closePayRollDetails() added.
 *
 * Revision 1.168 2005/01/22 06:40:21 kduraisamy query changed for getForPyrl().
 *
 * Revision 1.167 2005/01/22 06:26:07 kduraisamy queyr for
 * getAllPyrlCycleStatForPayroll() added..
 *
 * Revision 1.166 2005/01/22 05:28:19 kduraisamy query for getForPayroll()
 * modified..
 *
 * Revision 1.165 2005/01/22 05:20:09 kduraisamy query added for payroll..
 *
 * Revision 1.164 2005/01/21 09:31:12 kduraisamy queries added for
 * createPayRoll().
 *
 * Revision 1.163 2005/01/21 07:25:58 sduraisamy RadlProduction filter query
 * modified to exclude some fields
 *
 * Revision 1.162 2005/01/21 06:32:56 sduraisamy nonproduction filter query
 * modified to exclude some fields
 *
 * Revision 1.161 2005/01/21 06:14:02 kduraisamy createNewPyrlCycle() query
 * added..
 *
 * Revision 1.160 2005/01/21 06:07:56 sduraisamy production filter query
 * modified to exclude some fields
 *
 * Revision 1.159 2005/01/20 13:19:42 kduraisamy queries added for payroll..
 *
 * Revision 1.158 2005/01/20 10:20:24 kduraisamy query for method
 * getRadlProductionDetails() added.
 *
 * Revision 1.157 2005/01/20 06:43:44 kduraisamy getWorkOrderDetails() query
 * modified.
 *
 * Revision 1.156 2005/01/20 05:27:14 kduraisamy POST_POST_FLG IS CHNGED TO
 * PROD_POST_FLG
 *
 * Revision 1.155 2005/01/20 05:17:13 kduraisamy PRODN_ENTERED_OPNS SELECT SQL
 * QUERY changed.
 *
 * Revision 1.154 2005/01/19 05:08:40 kduraisamy prod_isvalid = 1 removed in
 * getProductionDetails()
 *
 * Revision 1.153 2005/01/18 06:07:15 sponnusamy Query MachineHrs reduce
 * corrected.
 *
 * Revision 1.152 2005/01/17 14:40:05 kduraisamy wo table update while
 * production entry made.
 *
 * Revision 1.151 2005/01/17 06:11:55 kduraisamy queries added or make valid
 * invalid production.
 *
 * Revision 1.150 2005/01/13 12:11:11 kduraisamy query added for new getmethods
 * for update.
 *
 * Revision 1.149 2005/01/13 09:48:08 kduraisamy getProdDetails query
 * modified.woId get added.
 *
 * Revision 1.148 2005/01/13 08:51:28 kduraisamy queries added for
 * rwkLogdetails.
 *
 * Revision 1.147 2005/01/13 07:00:26 kduraisamy Status U removed from queries.
 *
 * Revision 1.146 2005/01/12 11:02:05 sduraisamy Filter query for ReworkLog
 * included
 *
 * Revision 1.145 2005/01/12 06:32:38 kduraisamy isvalid !=0 added in pop
 * unposted select query.
 *
 * Revision 1.144 2005/01/11 11:38:24 kduraisamy END_DATE IS CHANGED TO TO_DATE.
 *
 * Revision 1.143 2005/01/11 10:50:15 kduraisamy Rework Log Queries added.
 *
 * Revision 1.142 2005/01/10 12:24:27 kduraisamy getForNewPreclose() queries
 * modified.
 *
 * Revision 1.141 2005/01/10 08:52:18 kduraisamy radl production filter query
 * modified.
 *
 * Revision 1.140 2005/01/10 07:17:42 kduraisamy JB DETAILS ADDED IN RADL FILTER
 * QUERY.
 *
 * Revision 1.139 2005/01/10 06:37:50 kduraisamy POP REASON INCLUDED IN POP
 * FILTER QUERY.
 *
 * Revision 1.138 2005/01/08 13:08:18 kduraisamy radl id select query included.
 *
 * Revision 1.137 2005/01/08 11:44:03 kduraisamy query added for
 * getAllMatlTypes().
 *
 * Revision 1.136 2005/01/08 06:22:58 kduraisamy pop filter query modified.
 *
 * Revision 1.135 2005/01/07 05:28:23 kduraisamy query added for selecting
 * psting_rule_id.
 *
 * Revision 1.134 2005/01/06 13:01:08 kduraisamy query added for
 * getAllEmployeesByType() .
 *
 * Revision 1.133 2005/01/06 12:18:05 kduraisamy mcTypName select query added.
 *
 * Revision 1.132 2005/01/06 09:18:30 kduraisamy query added for postCheck()
 * methods.
 *
 * Revision 1.131 2005/01/06 04:59:45 kduraisamy minReqdQtyEmployee select query
 * changed.
 *
 * Revision 1.130 2005/01/05 12:12:30 kduraisamy PREDSR_SHIFT SELECT SQL QUERY
 * added.
 *
 * Revision 1.129 2005/01/05 06:52:57 kduraisamy NONPRODUCTIONUPDATE QUERY
 * MODIFIED.
 *
 * Revision 1.128 2005/01/04 13:13:48 kduraisamy empTypId included in
 * NonProduction get Query.
 *
 * Revision 1.127 2005/01/04 04:56:54 kduraisamy get idl brk dwn reason query
 * added.
 *
 * Revision 1.126 2005/01/03 07:30:32 kduraisamy query added for posting check
 * by date.
 *
 * Revision 1.125 2005/01/03 04:42:29 kduraisamy END_DATE is changed to TO_DATE.
 *
 * Revision 1.124 2005/01/01 13:38:34 kduraisamy systimestamp added when
 * updation take place.
 *
 * Revision 1.123 2004/12/30 07:30:07 kduraisamy query changed for
 * getStandardHrs().
 *
 * Revision 1.122 2004/12/30 05:41:26 kduraisamy order by WOJBSTAT_SNO added in
 * wojbstatsno select sql query.
 *
 * Revision 1.121 2004/12/29 18:22:58 kduraisamy Query added for ISHRS_ACCOUNTED
 * cheking in checkHrsAccounted().
 *
 * Revision 1.120 2004/12/29 12:40:23 sponnusamy wojb_stat changed to
 * WOJBSTAT_SNO_STAT.
 *
 * Revision 1.119 2004/12/29 12:24:18 kduraisamy queries modified for
 * getProductionDetails().
 *
 * Revision 1.118 2004/12/29 11:51:55 kduraisamy queries modified
 * getProductionDetailsByWorkOrder.
 *
 * Revision 1.117 2004/12/28 05:46:34 sduraisamy getProdnJobDetails Query
 * modified
 *
 * Revision 1.116 2004/12/27 12:33:40 kduraisamy
 * GET_PRODUCTION_JOBDETAILS_BY_WORKORDER query modified.
 *
 * Revision 1.115 2004/12/27 09:47:10 kduraisamy query added for
 * getAllEmployeesByTypes().
 *
 * Revision 1.114 2004/12/27 09:32:50 sduraisamy
 * getProductionJobOperationDetails() query modified
 *
 * Revision 1.113 2004/12/25 11:13:28 sduraisamy Queries included for Pop and
 * Non-Production update methods
 *
 * Revision 1.112 2004/12/24 06:01:33 kduraisamy query added for
 * updateProductionDetails()
 *
 * Revision 1.111 2004/12/23 10:59:52 sduraisamy Queries included for
 * NonProduction Filter method
 *
 * Revision 1.110 2004/12/23 07:01:12 kduraisamy queries added for
 * postRadlProductionDetails().
 *
 * Revision 1.109 2004/12/23 06:56:22 sduraisamy PROD_WORK_TYP included in
 * Production Filter Query
 *
 * Revision 1.108 2004/12/22 10:02:23 kduraisamy prod accntng insert update
 * added.
 *
 * Revision 1.107 2004/12/20 14:19:47 sduraisamy Queries included for
 * POP,NPROD,PROD get and Filter methods
 *
 * Revision 1.106 2004/12/20 05:35:27 kduraisamy WOJBOPN_ID included in
 * selection.
 *
 * Revision 1.105 2004/12/18 10:41:20 kduraisamy PreClose status 'P' taken into
 * account.
 *
 * Revision 1.104 2004/12/18 06:47:07 kduraisamy query changed for
 * getJobNameByWO().
 *
 * Revision 1.103 2004/12/17 13:32:38 kduraisamy query added for RADL.
 *
 * Revision 1.102 2004/12/17 12:18:19 sduraisamy getForAddNewPreCloseLog() 's
 * Query separated to get Snos of Different Status
 *
 * Revision 1.101 2004/12/17 11:26:56 sduraisamy Query Changed for
 * getJobNameByWorkOrder() to include DwgNo,RvsnNo,MatlTyp
 *
 * Revision 1.100 2004/12/17 09:21:05 sduraisamy PreClose Filter Query modified
 *
 * Revision 1.99 2004/12/16 11:23:50 kduraisamy getPreCloseDetails Query
 * Modified
 *
 * Revision 1.98 2004/12/16 10:40:28 sduraisamy DummyWorkOrder Filter Query
 * modified to include Date and IsValid
 *
 * Revision 1.97 2004/12/16 09:43:12 kduraisamy Query POP_HRS_GET _SQL_QUERY
 * modified..
 *
 * Revision 1.96 2004/12/16 09:13:48 sduraisamy Work Order Filter Query Modified
 * to remove Job Details
 *
 * Revision 1.95 2004/12/16 05:49:59 sduraisamy Queries included for
 * checkAvailableEmpHrs()
 *
 * Revision 1.94 2004/12/15 13:35:38 kduraisamy Preclose Log Add Query modified
 *
 * Revision 1.93 2004/12/15 11:53:46 sduraisamy WODMY_JB_DWG_NO included in
 * addDummyWorkOrder Query
 *
 * Revision 1.92 2004/12/15 11:14:21 sduraisamy addDummyWorkOrder Query modified
 * to delete extra 'c'
 *
 * Revision 1.91 2004/12/15 10:24:35 sduraisamy Queries added for
 * getStandardHrs()
 *
 * Revision 1.90 2004/12/15 10:23:01 kduraisamy queries added for non prodn
 * add().
 *
 * Revision 1.89 2004/12/15 09:23:12 sduraisamy Queries included for
 * viewUnPostedProductionDetails()
 *
 * Revision 1.88 2004/12/15 09:01:36 kduraisamy queries added for update
 * prod_post_flg.
 *
 * Revision 1.87 2004/12/15 07:49:35 sduraisamy Queries included for
 * checkHrsAccounted()
 *
 * Revision 1.85 2004/12/14 11:00:00 sduraisamy OPN_GP_CODE changed to OPN_GP_ID
 * in GetWorkOrderDetails Query
 *
 * Revision 1.84 2004/12/14 04:22:59 sduraisamy Queries included for
 * addProductionDetails()
 *
 * Revision 1.83 2004/12/11 11:55:53 kduraisamy queries added for production..
 *
 * Revision 1.82 2004/12/09 07:16:30 sduraisamy JB_ID inclued for PreClose
 * Filter Query
 *
 * Revision 1.81 2004/12/09 07:11:06 kduraisamy OPN_GP_CDE is changed to
 * OPN_GP_ID.
 *
 * Revision 1.80 2004/12/09 07:07:46 sduraisamy JB_ID included for PreClose
 * Filter Query
 *
 * Revision 1.79 2004/12/09 06:13:53 sduraisamy PreClose Filter Query modified
 * to include DateStamp and IsValid Fields
 *
 * Revision 1.78 2004/12/09 05:45:23 kduraisamy queries added for
 * getForAddNewPreCloseLog() and addNewPreCloseLog().
 *
 * Revision 1.77 2004/12/08 15:04:52 sduraisamy Queries included for
 * getPreCloseDetails(),getAllPreCloseDetails(0,makePreCloseValid() and
 * makePreCloseInValid()
 *
 * Revision 1.76 2004/12/08 09:18:52 kduraisamy query added for preclose Log.
 *
 * Revision 1.75 2004/12/08 08:24:34 sduraisamy distinct added for
 * GET_DRWG_NO_BY_JOBNAME Query
 *
 * Revision 1.74 2004/12/08 04:39:52 sduraisamy Query included for
 * getJobByGeneralName() included
 *
 * Revision 1.73 2004/12/07 13:59:21 sduraisamy getJobNameByWorkOrderNo Query
 * included
 *
 * Revision 1.72 2004/12/07 10:46:21 sduraisamy WOJB_STAT changed to WO_STAT in
 * Workorder Filter Query
 *
 * Revision 1.71 2004/12/07 10:19:22 sduraisamy WorkOrder Filter Query modified
 * to include ISVALID and DATESTAMP Fields
 *
 * Revision 1.70 2004/12/07 09:48:36 sduraisamy closeWorkOrder() Queries
 * included
 *
 * Revision 1.69 2004/12/07 08:47:16 kduraisamy queries added for
 * workOrderJobCloseView().
 *
 * Revision 1.68 2004/12/07 05:44:07 sduraisamy BASE_CAL_ID included with
 * addavailabilitycalendar Query
 *
 * Revision 1.67 2004/12/07 05:39:58 sduraisamy GET_PRDCSR_SHIFT_NAME Query
 * included
 *
 * Revision 1.66 2004/12/06 15:40:05 sduraisamy Queries included for
 * getWorkOrderDetails ,getAllWorkOrderDetails and all DummyWorkOrder Methods
 *
 * Revision 1.65 2004/12/06 14:55:48 kduraisamy queries added for work order
 * update and make valid and invalid.
 *
 * Revision 1.64 2004/12/05 18:39:37 kduraisamy work order jb histry add sql
 * query added
 *
 * Revision 1.63 2004/12/04 07:40:55 sduraisamy Queries for addNewWorkOrder()
 * added
 *
 * Revision 1.62 2004/12/04 06:44:37 sduraisamy Queries included for methods
 * retrieving DRWG_NO,RVSN_NO and MATL_TYP
 *
 * Revision 1.61 2004/12/02 07:15:43 kduraisamy queries added for
 * addAvailability()
 *
 * Revision 1.60 2004/12/02 06:08:34 sduraisamy CUST_ID set in
 * UPDATE_JOB_DETAILS Query
 *
 * Revision 1.59 2004/12/02 05:48:51 sduraisamy GET_AVAILABILITY_DETAILS Query
 * modified to include BASE_CAL_NAME.
 *
 * Revision 1.58 2004/12/01 14:25:18 sduraisamy Queries added for filter methods
 * of Shift,BaseCalendar and Availablity, Availablity makeValid and InValid and
 * GetAvailabilityDetails.
 *
 * Revision 1.57 2004/11/30 10:10:00 sduraisamy Queries included for
 * deleteBaseCalendar(),makeBaseCalendarValid() and makeBaseCalendarInValid()
 *
 * Revision 1.56 2004/11/29 15:10:28 sduraisamy Queries included for update
 * BaseCalendar
 *
 * Revision 1.55 2004/11/29 12:00:17 sduraisamy GET_AVAILABILTY_NAME_LIST Query
 * included
 *
 * Revision 1.54 2004/11/29 11:52:37 sduraisamy Queries included for
 * getBaseCalendarDetails() and getBaseCalendarNameList() added Revision 1.53
 * 2004/11/29 10:00:01 kduraisamy queries added for addBaseCalendar()
 *
 * Revision 1.52 2004/11/27 11:14:45 sduraisamy cust_id included for Get
 * jobdetails by gnrlnamewithcustomer
 *
 * Revision 1.51 2004/11/27 10:38:39 sduraisamy
 * GET_JOB_DETAILS_BY_GENERALNAME_CUSTOMER added
 *
 * Revision 1.50 2004/11/27 07:03:09 sduraisamy GetJobDetailsQuery modified
 *
 * Revision 1.49 2004/11/26 08:08:29 sduraisamy ISVALID set in all get methods
 *
 * Revision 1.48 2004/11/25 10:15:14 sduraisamy distinct included for
 * operationgroupdetails filter query
 *
 * Revision 1.47 2004/11/25 07:53:08 sduraisamy GET_JOB_DETAILS_BY_JOBNAME Query
 * included
 *
 * Revision 1.46 2004/11/24 16:21:31 kduraisamy update shift definition queries
 * added
 *
 * Revision 1.45 2004/11/24 11:51:25 kduraisamy getShiftDefn() query added
 *
 * Revision 1.41 2004/11/24 07:22:20 kduraisamy getCustomerNameByType select
 * query added
 *
 * Revision 1.40 2004/11/23 12:35:16 sduraisamy GET_JOB_DETAILS_QUERY modified
 *
 * Revision 1.39 2004/11/23 11:41:16 kduraisamy Queries included for
 * getAllJobs,getAllOperationGroupCode and getAllJobGeneralName
 *
 * Revision 1.37 2004/11/22 13:58:01 sduraisamy OPN_GP_CODE instead of
 * OPN_GP_CDE in operationgroupdetails filter Query
 *
 * Revision 1.36 2004/11/22 13:27:01 sduraisamy OperationGroupDetails Filter
 * Query modified
 *
 * Revision 1.35 2004/11/22 07:14:29 kduraisamy
 * GET_OPERATION_GROUP_DETAILS_QUERY query changed
 *
 * Revision 1.34 2004/11/22 05:05:57 sduraisamy Add OperationGroupDetails Query
 * Corrected
 *
 * Revision 1.32 2004/11/21 11:18:22 sduraisamy Queries included for
 * OperationGroup Delete,Make Valid and Make InValid
 *
 * Revision 1.31 2004/11/20 10:42:07 sduraisamy GET_ALL_REWORK_CATEGORY_QUERY,
 * RWKRSN_MAKE_VALID_QUERY, RWKRSN_MAKE_INVALID_QUERY,
 * GET_REWORK_DETAILS_QUERY,GET_ALL_REWORK_DETAILS_QUERY included
 *
 * Revision 1.29 2004/11/19 09:35:18 sduraisamy MC_CDE set in
 * MACHINE_DETAILS_UPDATE_QUERY
 *
 * Revision 1.28 2004/11/19 05:32:49 sduraisamy MachineManager Filter Query
 * Modified
 *
 * Revision 1.27 2004/11/19 04:51:09 kduraisamy queries added for job module.and
 * Employee filter query modified
 *
 * Revision 1.26 2004/11/18 09:06:39 sduraisamy Employee Details Filter Query
 * modified
 *
 * Revision 1.25 2004/11/18 09:01:37 sduraisamy Employee Details Filter Query
 * modified
 *
 * Revision 1.24 2004/11/18 07:54:21 sduraisamy GET_JOB_DETAILS_QUERY modified
 *
 * Revision 1.23 2004/11/18 05:29:02 sduraisamy Employee Filter Query Modified
 *
 * Revision 1.22 2004/11/18 05:08:56 sduraisamy GET_JOB_DETAILS_QUERY included
 *
 * Revision 1.21 2004/11/17 13:09:28 sduraisamy addJobDetails query modified
 *
 * Revision 1.20 2004/11/17 12:10:58 sduraisamy uery added for get operation
 * group details
 *
 * Revision 1.19 2004/11/17 12:04:07 kduraisamy queries added in job master
 *
 * Revision 1.18 2004/11/16 07:53:30 kduraisamy customer filter query added
 *
 * Revision 1.17 2004/11/15 14:05:32 kduraisamy DATESTAMP AND ISVALID ADDED
 *
 * Revision 1.16 2004/11/14 18:03:47 kduraisamy unwanted line removed.
 *
 * Revision 1.15 2004/11/14 18:00:07 kduraisamy queries added for job master.
 *
 * Revision 1.14 2004/11/10 13:13:40 sduraisamy Modification in
 * GET_ALL_EMPLOYEE_DETAILS_QUERY
 *
 * Revision 1.13 2004/11/10 12:37:30 sduraisamy Machine Details Manager Filter
 * Query modified
 *
 * Revision 1.12 2004/11/10 06:42:22 sduraisamy Query included for
 * EmployeeStatus Add and Get
 *
 * Revision 1.11 2004/11/09 10:42:30 sduraisamy GET_MACHINE_DETAILS Query
 * modified in SQLMaster
 *
 * Revision 1.10 2004/11/09 07:44:08 kduraisamy query added for insert
 * customertypDetails in to customer_typ_mstr.
 *
 * Revision 1.9 2004/11/08 12:03:45 sduraisamy SQLMaster and
 * getAllEmployeeTypeDetails() are modified
 *
 * Revision 1.8 2004/11/08 10:30:49 sduraisamy GET_EMPLOYEE_DETAILS query
 * modified for id inclusion
 *
 * Revision 1.7 2004/11/06 09:19:11 kduraisamy unwanted } removed
 *
 * Revision 1.6 2004/11/06 09:15:32 kduraisamy customer select query modified
 * and job master separated
 *
 * Revision 1.5 2004/11/06 08:50:36 sduraisamy GET_EMPLOYEE_DETAILS_QUERY
 * modified
 *
 * Revision 1.4 2004/11/06 07:43:14 sduraisamy Log inclusion for
 * Filter,DBConnection,DBNull,SQLMaster,DateUtil,Debug and LoggerOutput
 *
 ******************************************************************************/